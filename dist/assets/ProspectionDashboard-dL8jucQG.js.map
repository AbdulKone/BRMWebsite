{"version":3,"file":"ProspectionDashboard-dL8jucQG.js","sources":["../../node_modules/lucide-react/dist/esm/icons/bar-chart-3.js","../../node_modules/lucide-react/dist/esm/icons/bell.js","../../node_modules/lucide-react/dist/esm/icons/bot.js","../../node_modules/lucide-react/dist/esm/icons/building.js","../../node_modules/lucide-react/dist/esm/icons/copy.js","../../node_modules/lucide-react/dist/esm/icons/download.js","../../node_modules/lucide-react/dist/esm/icons/eye.js","../../node_modules/lucide-react/dist/esm/icons/file-text.js","../../node_modules/lucide-react/dist/esm/icons/filter.js","../../node_modules/lucide-react/dist/esm/icons/globe.js","../../node_modules/lucide-react/dist/esm/icons/history.js","../../node_modules/lucide-react/dist/esm/icons/linkedin.js","../../node_modules/lucide-react/dist/esm/icons/message-square.js","../../node_modules/lucide-react/dist/esm/icons/mouse-pointer.js","../../node_modules/lucide-react/dist/esm/icons/pause.js","../../node_modules/lucide-react/dist/esm/icons/phone.js","../../node_modules/lucide-react/dist/esm/icons/refresh-cw.js","../../node_modules/lucide-react/dist/esm/icons/search.js","../../node_modules/lucide-react/dist/esm/icons/square-pen.js","../../node_modules/lucide-react/dist/esm/icons/square.js","../../node_modules/lucide-react/dist/esm/icons/tag.js","../../node_modules/lucide-react/dist/esm/icons/target.js","../../node_modules/lucide-react/dist/esm/icons/trending-down.js","../../node_modules/lucide-react/dist/esm/icons/wifi-off.js","../../node_modules/lucide-react/dist/esm/icons/wifi.js","../../node_modules/lucide-react/dist/esm/icons/zap.js","../../src/components/prospection/ProspectsList.tsx","../../src/components/prospection/ProspectForm.tsx","../../src/data/emailSequences.ts","../../src/components/prospection/ProspectDetails.tsx","../../src/components/prospection/EmailCampaign.tsx","../../src/components/prospection/EmailStatsDashboard.tsx","../../src/components/prospection/TemplateManager.tsx","../../src/lib/n8nService.ts","../../src/lib/supabaseService.ts","../../src/stores/automationStore.ts","../../src/components/admin/services/automationService.ts","../../src/components/admin/hooks/useAutomationDashboard.ts","../../src/components/admin/components/SystemHealthIndicator.tsx","../../src/components/admin/utils/automationUtils.ts","../../src/components/admin/components/StatsGrid.tsx","../../src/components/admin/components/RecentActivityPanel.tsx","../../src/components/admin/components/ConfigurationPanel.tsx","../../src/components/admin/AutomationDashboard.tsx","../../src/components/prospection/AutoProspectionPanel.tsx","../../src/components/prospection/ProspectionDashboard.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst BarChart3 = createLucideIcon(\"BarChart3\", [\n  [\"path\", { d: \"M3 3v18h18\", key: \"1s2lah\" }],\n  [\"path\", { d: \"M18 17V9\", key: \"2bz60n\" }],\n  [\"path\", { d: \"M13 17V5\", key: \"1frdt8\" }],\n  [\"path\", { d: \"M8 17v-3\", key: \"17ska0\" }]\n]);\n\nexport { BarChart3 as default };\n//# sourceMappingURL=bar-chart-3.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Bell = createLucideIcon(\"Bell\", [\n  [\"path\", { d: \"M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9\", key: \"1qo2s2\" }],\n  [\"path\", { d: \"M10.3 21a1.94 1.94 0 0 0 3.4 0\", key: \"qgo35s\" }]\n]);\n\nexport { Bell as default };\n//# sourceMappingURL=bell.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Bot = createLucideIcon(\"Bot\", [\n  [\"path\", { d: \"M12 8V4H8\", key: \"hb8ula\" }],\n  [\"rect\", { width: \"16\", height: \"12\", x: \"4\", y: \"8\", rx: \"2\", key: \"enze0r\" }],\n  [\"path\", { d: \"M2 14h2\", key: \"vft8re\" }],\n  [\"path\", { d: \"M20 14h2\", key: \"4cs60a\" }],\n  [\"path\", { d: \"M15 13v2\", key: \"1xurst\" }],\n  [\"path\", { d: \"M9 13v2\", key: \"rq6x2g\" }]\n]);\n\nexport { Bot as default };\n//# sourceMappingURL=bot.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Building = createLucideIcon(\"Building\", [\n  [\"rect\", { width: \"16\", height: \"20\", x: \"4\", y: \"2\", rx: \"2\", ry: \"2\", key: \"76otgf\" }],\n  [\"path\", { d: \"M9 22v-4h6v4\", key: \"r93iot\" }],\n  [\"path\", { d: \"M8 6h.01\", key: \"1dz90k\" }],\n  [\"path\", { d: \"M16 6h.01\", key: \"1x0f13\" }],\n  [\"path\", { d: \"M12 6h.01\", key: \"1vi96p\" }],\n  [\"path\", { d: \"M12 10h.01\", key: \"1nrarc\" }],\n  [\"path\", { d: \"M12 14h.01\", key: \"1etili\" }],\n  [\"path\", { d: \"M16 10h.01\", key: \"1m94wz\" }],\n  [\"path\", { d: \"M16 14h.01\", key: \"1gbofw\" }],\n  [\"path\", { d: \"M8 10h.01\", key: \"19clt8\" }],\n  [\"path\", { d: \"M8 14h.01\", key: \"6423bh\" }]\n]);\n\nexport { Building as default };\n//# sourceMappingURL=building.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Copy = createLucideIcon(\"Copy\", [\n  [\"rect\", { width: \"14\", height: \"14\", x: \"8\", y: \"8\", rx: \"2\", ry: \"2\", key: \"17jyea\" }],\n  [\"path\", { d: \"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\", key: \"zix9uf\" }]\n]);\n\nexport { Copy as default };\n//# sourceMappingURL=copy.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Download = createLucideIcon(\"Download\", [\n  [\"path\", { d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\", key: \"ih7n3h\" }],\n  [\"polyline\", { points: \"7 10 12 15 17 10\", key: \"2ggqvy\" }],\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"15\", y2: \"3\", key: \"1vk2je\" }]\n]);\n\nexport { Download as default };\n//# sourceMappingURL=download.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Eye = createLucideIcon(\"Eye\", [\n  [\"path\", { d: \"M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z\", key: \"rwhkz3\" }],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"3\", key: \"1v7zrd\" }]\n]);\n\nexport { Eye as default };\n//# sourceMappingURL=eye.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst FileText = createLucideIcon(\"FileText\", [\n  [\"path\", { d: \"M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z\", key: \"1rqfz7\" }],\n  [\"path\", { d: \"M14 2v4a2 2 0 0 0 2 2h4\", key: \"tnqrlb\" }],\n  [\"path\", { d: \"M10 9H8\", key: \"b1mrlr\" }],\n  [\"path\", { d: \"M16 13H8\", key: \"t4e002\" }],\n  [\"path\", { d: \"M16 17H8\", key: \"z1uh3a\" }]\n]);\n\nexport { FileText as default };\n//# sourceMappingURL=file-text.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Filter = createLucideIcon(\"Filter\", [\n  [\"polygon\", { points: \"22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3\", key: \"1yg77f\" }]\n]);\n\nexport { Filter as default };\n//# sourceMappingURL=filter.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Globe = createLucideIcon(\"Globe\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20\", key: \"13o1zl\" }],\n  [\"path\", { d: \"M2 12h20\", key: \"9i4pu4\" }]\n]);\n\nexport { Globe as default };\n//# sourceMappingURL=globe.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst History = createLucideIcon(\"History\", [\n  [\"path\", { d: \"M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8\", key: \"1357e3\" }],\n  [\"path\", { d: \"M3 3v5h5\", key: \"1xhq8a\" }],\n  [\"path\", { d: \"M12 7v5l4 2\", key: \"1fdv2h\" }]\n]);\n\nexport { History as default };\n//# sourceMappingURL=history.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Linkedin = createLucideIcon(\"Linkedin\", [\n  [\n    \"path\",\n    {\n      d: \"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z\",\n      key: \"c2jq9f\"\n    }\n  ],\n  [\"rect\", { width: \"4\", height: \"12\", x: \"2\", y: \"9\", key: \"mk3on5\" }],\n  [\"circle\", { cx: \"4\", cy: \"4\", r: \"2\", key: \"bt5ra8\" }]\n]);\n\nexport { Linkedin as default };\n//# sourceMappingURL=linkedin.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst MessageSquare = createLucideIcon(\"MessageSquare\", [\n  [\"path\", { d: \"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\", key: \"1lielz\" }]\n]);\n\nexport { MessageSquare as default };\n//# sourceMappingURL=message-square.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst MousePointer = createLucideIcon(\"MousePointer\", [\n  [\"path\", { d: \"m3 3 7.07 16.97 2.51-7.39 7.39-2.51L3 3z\", key: \"y2ucgo\" }],\n  [\"path\", { d: \"m13 13 6 6\", key: \"1nhxnf\" }]\n]);\n\nexport { MousePointer as default };\n//# sourceMappingURL=mouse-pointer.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Pause = createLucideIcon(\"Pause\", [\n  [\"rect\", { width: \"4\", height: \"16\", x: \"6\", y: \"4\", key: \"iffhe4\" }],\n  [\"rect\", { width: \"4\", height: \"16\", x: \"14\", y: \"4\", key: \"sjin7j\" }]\n]);\n\nexport { Pause as default };\n//# sourceMappingURL=pause.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Phone = createLucideIcon(\"Phone\", [\n  [\n    \"path\",\n    {\n      d: \"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\",\n      key: \"foiqr5\"\n    }\n  ]\n]);\n\nexport { Phone as default };\n//# sourceMappingURL=phone.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst RefreshCw = createLucideIcon(\"RefreshCw\", [\n  [\"path\", { d: \"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8\", key: \"v9h5vc\" }],\n  [\"path\", { d: \"M21 3v5h-5\", key: \"1q7to0\" }],\n  [\"path\", { d: \"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16\", key: \"3uifl3\" }],\n  [\"path\", { d: \"M8 16H3v5\", key: \"1cv678\" }]\n]);\n\nexport { RefreshCw as default };\n//# sourceMappingURL=refresh-cw.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Search = createLucideIcon(\"Search\", [\n  [\"circle\", { cx: \"11\", cy: \"11\", r: \"8\", key: \"4ej97u\" }],\n  [\"path\", { d: \"m21 21-4.3-4.3\", key: \"1qie3q\" }]\n]);\n\nexport { Search as default };\n//# sourceMappingURL=search.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst SquarePen = createLucideIcon(\"SquarePen\", [\n  [\"path\", { d: \"M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\", key: \"1m0v6g\" }],\n  [\"path\", { d: \"M18.375 2.625a2.121 2.121 0 1 1 3 3L12 15l-4 1 1-4Z\", key: \"1lpok0\" }]\n]);\n\nexport { SquarePen as default };\n//# sourceMappingURL=square-pen.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Square = createLucideIcon(\"Square\", [\n  [\"rect\", { width: \"18\", height: \"18\", x: \"3\", y: \"3\", rx: \"2\", key: \"afitv7\" }]\n]);\n\nexport { Square as default };\n//# sourceMappingURL=square.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Tag = createLucideIcon(\"Tag\", [\n  [\n    \"path\",\n    {\n      d: \"M12.586 2.586A2 2 0 0 0 11.172 2H4a2 2 0 0 0-2 2v7.172a2 2 0 0 0 .586 1.414l8.704 8.704a2.426 2.426 0 0 0 3.42 0l6.58-6.58a2.426 2.426 0 0 0 0-3.42z\",\n      key: \"vktsd0\"\n    }\n  ],\n  [\"circle\", { cx: \"7.5\", cy: \"7.5\", r: \".5\", fill: \"currentColor\", key: \"kqv944\" }]\n]);\n\nexport { Tag as default };\n//# sourceMappingURL=tag.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Target = createLucideIcon(\"Target\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"6\", key: \"1vlfrh\" }],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"2\", key: \"1c9p78\" }]\n]);\n\nexport { Target as default };\n//# sourceMappingURL=target.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst TrendingDown = createLucideIcon(\"TrendingDown\", [\n  [\"polyline\", { points: \"22 17 13.5 8.5 8.5 13.5 2 7\", key: \"1r2t7k\" }],\n  [\"polyline\", { points: \"16 17 22 17 22 11\", key: \"11uiuu\" }]\n]);\n\nexport { TrendingDown as default };\n//# sourceMappingURL=trending-down.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst WifiOff = createLucideIcon(\"WifiOff\", [\n  [\"path\", { d: \"M12 20h.01\", key: \"zekei9\" }],\n  [\"path\", { d: \"M8.5 16.429a5 5 0 0 1 7 0\", key: \"1bycff\" }],\n  [\"path\", { d: \"M5 12.859a10 10 0 0 1 5.17-2.69\", key: \"1dl1wf\" }],\n  [\"path\", { d: \"M19 12.859a10 10 0 0 0-2.007-1.523\", key: \"4k23kn\" }],\n  [\"path\", { d: \"M2 8.82a15 15 0 0 1 4.177-2.643\", key: \"1grhjp\" }],\n  [\"path\", { d: \"M22 8.82a15 15 0 0 0-11.288-3.764\", key: \"z3jwby\" }],\n  [\"path\", { d: \"m2 2 20 20\", key: \"1ooewy\" }]\n]);\n\nexport { WifiOff as default };\n//# sourceMappingURL=wifi-off.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Wifi = createLucideIcon(\"Wifi\", [\n  [\"path\", { d: \"M12 20h.01\", key: \"zekei9\" }],\n  [\"path\", { d: \"M2 8.82a15 15 0 0 1 20 0\", key: \"dnpr2z\" }],\n  [\"path\", { d: \"M5 12.859a10 10 0 0 1 14 0\", key: \"1x1e6c\" }],\n  [\"path\", { d: \"M8.5 16.429a5 5 0 0 1 7 0\", key: \"1bycff\" }]\n]);\n\nexport { Wifi as default };\n//# sourceMappingURL=wifi.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Zap = createLucideIcon(\"Zap\", [\n  [\"polygon\", { points: \"13 2 3 14 12 14 11 22 21 10 12 10 13 2\", key: \"45s27k\" }]\n]);\n\nexport { Zap as default };\n//# sourceMappingURL=zap.js.map\n","import { useState, useMemo, useCallback } from 'react';\nimport useProspectionStore from '../../stores/prospectionStore';\nimport { useErrorStore } from '../../stores/errorStore';\nimport { Search, Filter, Plus, Eye, Edit, Trash2, ChevronLeft, ChevronRight } from 'lucide-react';\n\n\ninterface ProspectsListProps {\n  onViewDetails?: (prospectId: string) => void;\n  onEditProspect?: (prospectId: string) => void;\n  onAddProspect?: () => void;\n}\n\ntype StatusType = 'all' | 'new' | 'contacted' | 'interested' | 'qualified' | 'proposal_sent' | 'negotiation' | 'closed_won' | 'closed_lost';\n\n// Constantes pour éviter la duplication\nconst STATUS_CONFIG = {\n  new: { label: 'Nouveau', color: 'bg-blue-500' },\n  contacted: { label: 'Contacté', color: 'bg-yellow-500' },\n  interested: { label: 'Intéressé', color: 'bg-green-500' },\n  qualified: { label: 'Qualifié', color: 'bg-purple-500' },\n  proposal_sent: { label: 'Proposition envoyée', color: 'bg-orange-500' },\n  negotiation: { label: 'Négociation', color: 'bg-red-500' },\n  closed_won: { label: 'Gagné', color: 'bg-emerald-500' },\n  closed_lost: { label: 'Perdu', color: 'bg-gray-500' }\n} as const;\n\nconst ProspectsList = ({ onViewDetails, onEditProspect, onAddProspect }: ProspectsListProps) => {\n  const { prospects, loading, deleteProspect } = useProspectionStore(); // ✅ Removed 'error'\n  const { handleError, handleSuccess } = useErrorStore();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState<StatusType>('all');\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10;\n\n  // Handler optimisé pour la suppression\n  const handleDelete = useCallback(async (prospectId: string, companyName: string) => {\n    if (window.confirm(`Êtes-vous sûr de vouloir supprimer ${companyName} ?`)) {\n      try {\n        await deleteProspect(prospectId);\n        handleSuccess(`${companyName} supprimé avec succès`);\n        const newTotalPages = Math.ceil((prospects.length - 1) / itemsPerPage);\n        if (currentPage > newTotalPages && newTotalPages > 0) {\n          setCurrentPage(newTotalPages);\n        }\n      } catch (error) {\n        handleError(error instanceof Error ? error.message : 'Erreur lors de la suppression du prospect');\n      }\n    }\n  }, [deleteProspect, prospects.length, itemsPerPage, currentPage, handleError, handleSuccess]);\n\n  // Filtrage optimisé\n  const filteredProspects = useMemo(() => {\n    return prospects.filter(prospect => {\n      const searchLower = searchTerm.toLowerCase();\n      const fullName = `${prospect.first_name || ''} ${prospect.last_name || ''}`.trim();\n      const matchesSearch = !searchTerm || (\n        prospect.company_name.toLowerCase().includes(searchLower) ||\n        fullName.toLowerCase().includes(searchLower) ||\n        prospect.email.toLowerCase().includes(searchLower)\n      );\n      \n      const matchesStatus = statusFilter === 'all' || prospect.status === statusFilter;\n      \n      return matchesSearch && matchesStatus;\n    });\n  }, [prospects, searchTerm, statusFilter]);\n\n  // Pagination\n  const totalPages = Math.ceil(filteredProspects.length / itemsPerPage);\n  const paginatedProspects = useMemo(() => {\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    return filteredProspects.slice(startIndex, startIndex + itemsPerPage);\n  }, [filteredProspects, currentPage, itemsPerPage]);\n\n  // Reset page when filters change\n  const handleSearchChange = useCallback((value: string) => {\n    setSearchTerm(value);\n    setCurrentPage(1);\n  }, []);\n\n  const handleStatusFilterChange = useCallback((value: StatusType) => {\n    setStatusFilter(value);\n    setCurrentPage(1);\n  }, []);\n\n  // Fonctions utilitaires simplifiées\n  const getStatusConfig = useCallback((status: string) => {\n    return STATUS_CONFIG[status as keyof typeof STATUS_CONFIG] || { label: status, color: 'bg-gray-500' };\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\"></div>\n      </div>\n    );\n  }\n\n  // Also remove the error handling section around lines 99-103:\n  // if (error) {\n  //   return (\n  //     <div className=\"text-center py-8\">\n  //       <p className=\"text-sm\">{error}</p>\n  //     </div>\n  //   );\n  // }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center space-y-4 sm:space-y-0\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-white mb-2\">Gestion des Prospects</h2>\n          <p className=\"text-gray-400\">Gérez et suivez vos prospects efficacement</p>\n        </div>\n        \n        <button\n          onClick={onAddProspect}\n          className=\"flex items-center space-x-2 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white px-6 py-3 rounded-xl font-medium transition-all duration-200 shadow-lg hover:shadow-xl\"\n        >\n          <Plus className=\"w-5 h-5\" />\n          <span>Nouveau Prospect</span>\n        </button>\n      </div>\n\n      {/* Filtres */}\n      <div className=\"bg-gray-800/50 border border-gray-700/50 rounded-xl p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          {/* Recherche */}\n          <div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n            <input\n              type=\"text\"\n              placeholder=\"Rechercher par nom, email ou entreprise...\"\n              value={searchTerm}\n              onChange={(e) => handleSearchChange(e.target.value)}\n              className=\"w-full pl-10 pr-4 py-3 bg-gray-700/50 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n            />\n          </div>\n\n          {/* Filtre par statut */}\n          <div className=\"relative\">\n            <Filter className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n            <select\n              value={statusFilter}\n              onChange={(e) => handleStatusFilterChange(e.target.value as StatusType)}\n              className=\"w-full pl-10 pr-4 py-3 bg-gray-700/50 border border-gray-600 rounded-lg text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent appearance-none transition-all duration-200\"\n            >\n              <option value=\"all\">Tous les statuts</option>\n              {Object.entries(STATUS_CONFIG).map(([key, config]) => (\n                <option key={key} value={key}>{config.label}</option>\n              ))}\n            </select>\n          </div>\n\n          {/* Statistiques */}\n          <div className=\"flex items-center justify-center space-x-4 text-sm\">\n            <span className=\"text-gray-400\">Total: <span className=\"text-white font-semibold\">{filteredProspects.length}</span></span>\n            <span className=\"text-gray-400\">Page: <span className=\"text-white font-semibold\">{currentPage}/{totalPages}</span></span>\n          </div>\n        </div>\n      </div>\n\n      {/* Liste des prospects */}\n      <div className=\"grid gap-3 sm:gap-4\">\n        {paginatedProspects.length === 0 ? (\n          <div className=\"text-center py-8 sm:py-12 text-gray-400\">\n            <p className=\"text-sm sm:text-base\">\n              {searchTerm || statusFilter !== 'all' \n                ? 'Aucun prospect ne correspond aux critères de recherche.'\n                : 'Aucun prospect trouvé. Commencez par en ajouter un !'}\n            </p>\n          </div>\n        ) : (\n          paginatedProspects.map(prospect => {\n            const fullName = `${prospect.first_name || ''} ${prospect.last_name || ''}`.trim();\n            const statusConfig = getStatusConfig(prospect.status);\n            \n            return (\n              <div key={prospect.id} className=\"bg-gray-800 p-3 sm:p-4 rounded-lg border border-gray-700 hover:border-gray-600 transition-colors\">\n                <div className=\"flex flex-col sm:flex-row sm:items-center justify-between gap-3\">\n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"flex flex-col sm:flex-row sm:items-center gap-2 sm:gap-3 mb-2\">\n                      <h3 className=\"text-lg sm:text-xl font-semibold truncate\">{prospect.company_name}</h3>\n                      <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium text-white ${statusConfig.color}`}>\n                        {statusConfig.label}\n                      </span>\n                    </div>\n                    <div className=\"space-y-1\">\n                      {fullName && (\n                        <p className=\"text-gray-300 text-sm sm:text-base\">{fullName}</p>\n                      )}\n                      <p className=\"text-gray-400 text-sm\">{prospect.email}</p>\n                      {prospect.position && (\n                        <p className=\"text-gray-500 text-sm\">{prospect.position}</p>\n                      )}\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-2\">\n                    <button\n                      onClick={() => onViewDetails?.(prospect.id)}\n                      className=\"p-2 text-blue-400 hover:text-blue-300 hover:bg-blue-900/20 rounded-lg transition-colors\"\n                      title=\"Voir les détails\"\n                    >\n                      <Eye className=\"w-4 h-4\" />\n                    </button>\n                    <button\n                      onClick={() => onEditProspect?.(prospect.id)}\n                      className=\"p-2 text-green-400 hover:text-green-300 hover:bg-green-900/20 rounded-lg transition-colors\"\n                      title=\"Modifier\"\n                    >\n                      <Edit className=\"w-4 h-4\" />\n                    </button>\n                    <button\n                      onClick={() => handleDelete(prospect.id, prospect.company_name)}\n                      className=\"p-2 text-red-400 hover:text-red-300 hover:bg-red-900/20 rounded-lg transition-colors\"\n                      title=\"Supprimer\"\n                    >\n                      <Trash2 className=\"w-4 h-4\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            );\n          })\n        )}\n      </div>\n\n      {/* Pagination */}\n      {totalPages > 1 && (\n        <div className=\"flex items-center justify-between\">\n          <div className=\"text-sm text-gray-400\">\n            Affichage de {((currentPage - 1) * itemsPerPage) + 1} à {Math.min(currentPage * itemsPerPage, filteredProspects.length)} sur {filteredProspects.length} prospects\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n              disabled={currentPage === 1}\n              className=\"p-2 rounded-lg border border-gray-600 text-gray-400 hover:text-white hover:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n            >\n              <ChevronLeft className=\"w-4 h-4\" />\n            </button>\n            \n            <span className=\"px-3 py-1 text-sm text-gray-300\">\n              Page {currentPage} sur {totalPages}\n            </span>\n            \n            <button\n              onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\n              disabled={currentPage === totalPages}\n              className=\"p-2 rounded-lg border border-gray-600 text-gray-400 hover:text-white hover:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n            >\n              <ChevronRight className=\"w-4 h-4\" />\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProspectsList;","import { useState, useEffect, useCallback } from 'react';\nimport useProspectionStore from '../../stores/prospectionStore';\nimport { useErrorStore } from '../../stores/errorStore';\nimport { X, Building, User, Mail, Globe, Linkedin, FileText, Tag } from 'lucide-react';\n\ninterface ProspectFormProps {\n  prospectId?: string;\n  onClose: () => void;\n}\n\ninterface FormErrors {\n  company_name?: string;\n  first_name?: string;\n  last_name?: string;\n  email?: string;\n  position?: string;\n  website?: string;\n  linkedin_url?: string;\n  notes?: string;\n  source?: string;\n  general?: string;\n}\n\ninterface FormData {\n  company_name: string;\n  first_name: string;\n  last_name: string;\n  email: string;\n  position: string;\n  website: string;\n  linkedin_url: string;\n  notes: string;\n  source: string;\n  tags: string[];\n}\n\nconst ProspectForm = ({ prospectId, onClose }: ProspectFormProps) => {\n  const { saveProspect, prospects } = useProspectionStore();\n  const { handleError, handleSuccess } = useErrorStore();\n  const [formData, setFormData] = useState<FormData>({\n    company_name: '',\n    first_name: '',\n    last_name: '',\n    email: '',\n    position: '',\n    website: '',\n    linkedin_url: '',\n    notes: '',\n    source: '',\n    tags: []\n  });\n  const [errors, setErrors] = useState<FormErrors>({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  // Suppression de la variable hasChanges non utilisée\n\n  useEffect(() => {\n    if (prospectId) {\n      const prospect = prospects.find(p => p.id === prospectId);\n      if (prospect) {\n        setFormData({\n          company_name: prospect.company_name,\n          first_name: prospect.first_name || '',\n          last_name: prospect.last_name || '',\n          email: prospect.email,\n          position: prospect.position || '',\n          website: prospect.website || '',\n          linkedin_url: prospect.linkedin_url || '',\n          notes: prospect.notes || '',\n          source: prospect.source || '',\n          tags: prospect.tags || []\n        });\n      }\n    }\n  }, [prospectId, prospects]);\n\n  const validateForm = useCallback((): boolean => {\n    const newErrors: FormErrors = {};\n\n    // Validation du nom d'entreprise\n    if (!formData.company_name.trim()) {\n      newErrors.company_name = 'Le nom de l\\'entreprise est requis';\n    } else if (formData.company_name.trim().length < 2) {\n      newErrors.company_name = 'Le nom de l\\'entreprise doit contenir au moins 2 caractères';\n    }\n\n    // Validation du prénom\n    if (!formData.first_name.trim()) {\n      newErrors.first_name = 'Le prénom est requis';\n    } else if (formData.first_name.trim().length < 2) {\n      newErrors.first_name = 'Le prénom doit contenir au moins 2 caractères';\n    }\n\n    // Validation du nom de famille\n    if (!formData.last_name.trim()) {\n      newErrors.last_name = 'Le nom de famille est requis';\n    } else if (formData.last_name.trim().length < 2) {\n      newErrors.last_name = 'Le nom de famille doit contenir au moins 2 caractères';\n    }\n\n    // Validation de l'email\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!formData.email.trim()) {\n      newErrors.email = 'L\\'email est requis';\n    } else if (!emailRegex.test(formData.email.trim())) {\n      newErrors.email = 'Format d\\'email invalide';\n    }\n\n    // Validation de l'URL du site web (optionnel mais doit être valide si fourni)\n    if (formData.website.trim() && !/^https?:\\/\\/.+\\..+/.test(formData.website.trim())) {\n      newErrors.website = 'Format d\\'URL invalide (doit commencer par http:// ou https://)';\n    }\n\n    // Validation de l'URL LinkedIn (optionnel mais doit être valide si fourni)\n    if (formData.linkedin_url.trim() && !/^https:\\/\\/(www\\.)?linkedin\\.com\\/(in|company)\\/.+/.test(formData.linkedin_url.trim())) {\n      newErrors.linkedin_url = 'Format d\\'URL LinkedIn invalide';\n    }\n\n    // Vérification de l'unicité de l'email (seulement pour les nouveaux prospects)\n    if (!prospectId) {\n      const existingProspect = prospects.find(p => \n        p.email.toLowerCase() === formData.email.trim().toLowerCase()\n      );\n      if (existingProspect) {\n        newErrors.email = 'Un prospect avec cet email existe déjà';\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  }, [formData, prospects, prospectId]);\n\n  const handleInputChange = useCallback((field: keyof FormData, value: string | string[]) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    // Suppression de setHasChanges(true) car la variable n'est pas utilisée\n    // Effacer l'erreur du champ modifié\n    setErrors(prev => {\n      if (prev[field as keyof FormErrors]) {\n        const newErrors = { ...prev };\n        delete newErrors[field as keyof FormErrors];\n        return newErrors;\n      }\n      return prev;\n    });\n  }, []);\n\n  const handleSubmit = useCallback(async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!validateForm()) return;\n  \n    setIsSubmitting(true);\n    setErrors({});\n  \n    try {\n      const trimmedData = {\n        company_name: formData.company_name.trim(),\n        first_name: formData.first_name.trim(),\n        last_name: formData.last_name.trim(),\n        email: formData.email.trim().toLowerCase(),\n        position: formData.position.trim(),\n        website: formData.website.trim(),\n        linkedin_url: formData.linkedin_url.trim(),\n        notes: formData.notes.trim(),\n        source: formData.source.trim(),\n        tags: formData.tags,\n        last_contact_date: new Date().toISOString(), // Changé de last_contact à last_contact_date\n        segment_targeting: ['corporate'],\n        lead_score: 0,\n        conversion_probability: 0.00,\n        enriched_data: {}\n      };\n  \n      if (prospectId) {\n        await saveProspect({ id: prospectId, ...trimmedData });\n        handleSuccess('Prospect modifié avec succès');\n      } else {\n        await saveProspect(trimmedData);\n        handleSuccess('Prospect ajouté avec succès');\n      }\n  \n      onClose();\n    } catch (error) {\n      handleError('Erreur lors de la sauvegarde du prospect', error instanceof Error ? error.message : 'Erreur inconnue');\n      setErrors({ general: 'Erreur lors de la sauvegarde du prospect' });\n    } finally {\n      setIsSubmitting(false);\n    }\n  }, [formData, validateForm, prospectId, saveProspect, onClose, handleError, handleSuccess]);\n\n  const handleCancel = useCallback(() => {\n    if (isSubmitting) return;\n    onClose();\n  }, [isSubmitting, onClose]);\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-black to-gray-900\">\n      <div className=\"container mx-auto px-4 py-4 sm:py-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"p-3 bg-gradient-to-r from-blue-600 to-purple-600 rounded-xl\">\n                <User className=\"w-8 h-8 text-white\" />\n              </div>\n              <div>\n                <h1 className=\"text-3xl sm:text-4xl font-bold bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent\">\n                  {prospectId ? 'Modifier le prospect' : 'Nouveau prospect'}\n                </h1>\n                <p className=\"text-gray-400 text-sm sm:text-base mt-1\">\n                  {prospectId ? 'Mettez à jour les informations du prospect' : 'Ajoutez un nouveau prospect à votre pipeline'}\n                </p>\n              </div>\n            </div>\n            \n            <button\n              onClick={handleCancel}\n              className=\"p-2 text-gray-400 hover:text-white hover:bg-gray-800 rounded-lg transition-all duration-200\"\n              disabled={isSubmitting}\n            >\n              <X className=\"w-6 h-6\" />\n            </button>\n          </div>\n        </div>\n\n        {/* Formulaire */}\n        <div className=\"bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 sm:p-8\">\n          {errors.general && (\n            <div className=\"mb-6 p-4 bg-red-500/20 border border-red-500/30 rounded-xl\">\n              <p className=\"text-red-400\">{errors.general}</p>\n            </div>\n          )}\n          \n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            {/* Informations de l'entreprise */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-semibold text-white flex items-center space-x-2\">\n                <Building className=\"w-5 h-5 text-blue-400\" />\n                <span>Informations de l'entreprise</span>\n              </h3>\n              \n              <div>\n                <label className=\"block text-sm font-medium mb-2 text-gray-300\">Nom de l'entreprise *</label>\n                <input\n                  type=\"text\"\n                  value={formData.company_name}\n                  onChange={(e) => handleInputChange('company_name', e.target.value)}\n                  className={`w-full px-4 py-3 bg-gray-700/50 border rounded-xl text-white placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 ${\n                    errors.company_name ? 'border-red-500' : 'border-gray-600/50'\n                  }`}\n                  placeholder=\"Nom de l'entreprise\"\n                  disabled={isSubmitting}\n                  required\n                />\n                {errors.company_name && (\n                  <p className=\"text-red-400 text-sm mt-1\">{errors.company_name}</p>\n                )}\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium mb-2 text-gray-300\">Site web</label>\n                  <div className=\"relative\">\n                    <Globe className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n                    <input\n                      type=\"url\"\n                      value={formData.website}\n                      onChange={(e) => handleInputChange('website', e.target.value)}\n                      className={`w-full pl-10 pr-4 py-3 bg-gray-700/50 border rounded-xl text-white placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 ${\n                        errors.website ? 'border-red-500' : 'border-gray-600/50'\n                      }`}\n                      placeholder=\"https://exemple.com\"\n                      disabled={isSubmitting}\n                    />\n                  </div>\n                  {errors.website && (\n                    <p className=\"text-red-400 text-sm mt-1\">{errors.website}</p>\n                  )}\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium mb-2 text-gray-300\">Source</label>\n                  <div className=\"relative\">\n                    <Tag className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n                    <input\n                      type=\"text\"\n                      value={formData.source}\n                      onChange={(e) => handleInputChange('source', e.target.value)}\n                      className=\"w-full pl-10 pr-4 py-3 bg-gray-700/50 border border-gray-600/50 rounded-xl text-white placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                      placeholder=\"Source du prospect\"\n                      disabled={isSubmitting}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Informations du contact */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-semibold text-white flex items-center space-x-2\">\n                <User className=\"w-5 h-5 text-green-400\" />\n                <span>Informations du contact</span>\n              </h3>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium mb-2 text-gray-300\">Prénom *</label>\n                  <input\n                    type=\"text\"\n                    value={formData.first_name}\n                    onChange={(e) => handleInputChange('first_name', e.target.value)}\n                    className={`w-full px-4 py-3 bg-gray-700/50 border rounded-xl text-white placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 ${\n                      errors.first_name ? 'border-red-500' : 'border-gray-600/50'\n                    }`}\n                    placeholder=\"Prénom\"\n                    disabled={isSubmitting}\n                    required\n                  />\n                  {errors.first_name && (\n                    <p className=\"text-red-400 text-sm mt-1\">{errors.first_name}</p>\n                  )}\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium mb-2 text-gray-300\">Nom *</label>\n                  <input\n                    type=\"text\"\n                    value={formData.last_name}\n                    onChange={(e) => handleInputChange('last_name', e.target.value)}\n                    className={`w-full px-4 py-3 bg-gray-700/50 border rounded-xl text-white placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 ${\n                      errors.last_name ? 'border-red-500' : 'border-gray-600/50'\n                    }`}\n                    placeholder=\"Nom de famille\"\n                    disabled={isSubmitting}\n                    required\n                  />\n                  {errors.last_name && (\n                    <p className=\"text-red-400 text-sm mt-1\">{errors.last_name}</p>\n                  )}\n                </div>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium mb-2 text-gray-300\">Email *</label>\n                <div className=\"relative\">\n                  <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n                  <input\n                    type=\"email\"\n                    value={formData.email}\n                    onChange={(e) => handleInputChange('email', e.target.value)}\n                    className={`w-full pl-10 pr-4 py-3 bg-gray-700/50 border rounded-xl text-white placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 ${\n                      errors.email ? 'border-red-500' : 'border-gray-600/50'\n                    }`}\n                    placeholder=\"email@exemple.com\"\n                    disabled={isSubmitting}\n                    required\n                  />\n                </div>\n                {errors.email && (\n                  <p className=\"text-red-400 text-sm mt-1\">{errors.email}</p>\n                )}\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium mb-2 text-gray-300\">Poste</label>\n                  <input\n                    type=\"text\"\n                    value={formData.position}\n                    onChange={(e) => handleInputChange('position', e.target.value)}\n                    className={`w-full px-4 py-3 bg-gray-700/50 border rounded-xl text-white placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 ${\n                      errors.position ? 'border-red-500' : 'border-gray-600/50'\n                    }`}\n                    placeholder=\"Poste occupé\"\n                    disabled={isSubmitting}\n                  />\n                  {errors.position && (\n                    <p className=\"text-red-400 text-sm mt-1\">{errors.position}</p>\n                  )}\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium mb-2 text-gray-300\">LinkedIn</label>\n                  <div className=\"relative\">\n                    <Linkedin className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n                    <input\n                      type=\"url\"\n                      value={formData.linkedin_url}\n                      onChange={(e) => handleInputChange('linkedin_url', e.target.value)}\n                      className={`w-full pl-10 pr-4 py-3 bg-gray-700/50 border rounded-xl text-white placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 ${\n                        errors.linkedin_url ? 'border-red-500' : 'border-gray-600/50'\n                      }`}\n                      placeholder=\"https://linkedin.com/in/profil\"\n                      disabled={isSubmitting}\n                    />\n                  </div>\n                  {errors.linkedin_url && (\n                    <p className=\"text-red-400 text-sm mt-1\">{errors.linkedin_url}</p>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            {/* Notes */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-semibold text-white flex items-center space-x-2\">\n                <FileText className=\"w-5 h-5 text-purple-400\" />\n                <span>Notes</span>\n              </h3>\n              \n              <div>\n                <label className=\"block text-sm font-medium mb-2 text-gray-300\">Notes sur le prospect</label>\n                <textarea\n                  value={formData.notes}\n                  onChange={(e) => handleInputChange('notes', e.target.value)}\n                  className=\"w-full px-4 py-3 bg-gray-700/50 border border-gray-600/50 rounded-xl text-white placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 resize-none\"\n                  rows={4}\n                  placeholder=\"Notes, commentaires, informations importantes...\"\n                  disabled={isSubmitting}\n                />\n              </div>\n            </div>\n\n            {/* Actions */}\n            <div className=\"flex flex-col sm:flex-row justify-end space-y-3 sm:space-y-0 sm:space-x-4 pt-6 border-t border-gray-700/50\">\n              <button\n                type=\"button\"\n                onClick={handleCancel}\n                className=\"px-6 py-3 bg-gray-700/50 hover:bg-gray-600/50 text-gray-300 rounded-xl font-medium transition-all duration-200 disabled:opacity-50\"\n                disabled={isSubmitting}\n              >\n                Annuler\n              </button>\n              <button\n                type=\"submit\"\n                className=\"px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white rounded-xl font-medium transition-all duration-200 disabled:opacity-50 shadow-lg hover:shadow-xl\"\n                disabled={isSubmitting}\n              >\n                {isSubmitting ? 'Sauvegarde...' : (prospectId ? 'Mettre à jour' : 'Créer le prospect')}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProspectForm;","import { supabase } from '../lib/supabase';\nimport { EmailTemplate } from './types/emailTypes';\nimport { useErrorStore } from '../stores/errorStore';\n\n// Fonctions utilitaires\nconst generateUnsubscribeLink = (prospectId: string): string => \n  `${window.location.origin}/unsubscribe?id=${prospectId}`;\n\nconst generateBookingLink = (prospectId: string): string => \n  `${window.location.origin}/booking?prospect=${prospectId}`;\n\nconst getTemplate = async (templateKey: string): Promise<EmailTemplate | null> => {\n  const { data, error } = await supabase\n    .from('email_templates')\n    .select('*')\n    .eq('template_key', templateKey)\n    .eq('is_active', true)\n    .single();\n\n  if (error) {\n    const { handleError } = useErrorStore.getState();\n    handleError('Erreur lors de la récupération du template', error.message);\n    return null;\n  }\n  return data;\n};\n\nconst compileTemplate = (template: EmailTemplate, variables: Record<string, string>): { subject: string; content: string } => {\n  let { subject, content } = template;\n  \n  Object.entries(variables).forEach(([key, value]) => {\n    const regex = new RegExp(`{{${key}}}`, 'g');\n    subject = subject.replace(regex, value);\n    content = content.replace(regex, value);\n  });\n\n  return { subject, content };\n};\n\n// Interfaces\nexport interface SequenceStep {\n  id: string;\n  templateId: string;\n  delayDays: number;\n  condition?: 'no_response' | 'not_opened' | 'not_clicked' | 'always';\n  priority: 'high' | 'medium' | 'low';\n}\n\nexport interface EmailSequence {\n  id: string;\n  name: string;\n  description: string;\n  targetSegment: string[];\n  steps: SequenceStep[];\n  isActive: boolean;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface ScheduledEmail {\n  id: string;\n  prospectId: string;\n  sequenceId: string;\n  stepId: string;\n  templateId: string;\n  scheduledFor: string;\n  status: 'pending' | 'sent' | 'failed' | 'cancelled';\n  createdAt: string;\n  sentAt?: string;\n  errorMessage?: string;\n}\n\n// Séquences prédéfinies\nexport const emailSequences: EmailSequence[] = [\n  {\n    id: 'new_prospect_sequence',\n    name: 'Séquence Nouveau Prospect - Projets Visuels',\n    description: 'Séquence d\\'introduction pour nouveaux prospects dans l\\'audiovisuel',\n    targetSegment: ['advertising', 'music', 'luxury', 'sports'], // Segments mis à jour\n    isActive: true,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n    steps: [\n      { id: 'step_1', templateId: 'visual_intro_advertising', delayDays: 0, condition: 'always', priority: 'high' },\n      { id: 'step_2', templateId: 'portfolio_presentation_demo', delayDays: 3, condition: 'no_response', priority: 'medium' },\n      { id: 'step_3', templateId: 'advanced_follow_up_sequence_1', delayDays: 7, condition: 'no_response', priority: 'medium' },\n      { id: 'step_4', templateId: 'advanced_follow_up_sequence_2', delayDays: 14, condition: 'no_response', priority: 'low' }\n    ]\n  },\n  {\n    id: 'interested_prospect_sequence', \n    name: 'Séquence Prospect Intéressé',\n    description: 'Séquence pour prospects ayant montré de l\\'intérêt',\n    targetSegment: ['advertising', 'music', 'luxury', 'sports'], // Segments mis à jour\n    isActive: true,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n    steps: [\n      { id: 'step_1', templateId: 'detailed_commercial_proposal', delayDays: 0, condition: 'always', priority: 'high' },\n      { id: 'step_2', templateId: 'advanced_follow_up_sequence_1', delayDays: 5, condition: 'no_response', priority: 'high' },\n      { id: 'step_3', templateId: 'portfolio_presentation_demo', delayDays: 10, condition: 'no_response', priority: 'medium' }\n    ]\n  }\n];\n\n// Fonctions principales\nexport const startEmailSequence = async (prospectId: string, sequenceId: string): Promise<void> => {\n  const sequence = emailSequences.find(s => s.id === sequenceId);\n  if (!sequence) throw new Error('Séquence introuvable');\n\n  const now = new Date();\n  const scheduledEmails = sequence.steps.map(step => ({\n    prospectId,\n    sequenceId,\n    stepId: step.id,\n    templateId: step.templateId,\n    scheduledFor: new Date(now.getTime() + step.delayDays * 24 * 60 * 60 * 1000).toISOString(),\n    status: 'pending' as const,\n    createdAt: now.toISOString()\n  }));\n\n  const { error } = await supabase.from('scheduled_emails').insert(scheduledEmails);\n  if (error) throw error;\n};\n\nexport const scheduleSequenceEmails = async (prospectIds: string[], sequenceId: string): Promise<void> => {\n  await Promise.all(prospectIds.map(prospectId => startEmailSequence(prospectId, sequenceId)));\n};\n\nexport const processScheduledEmails = async (): Promise<void> => {\n  const { data: scheduledEmails, error } = await supabase\n    .from('scheduled_emails')\n    .select('*')\n    .eq('status', 'pending')\n    .lte('scheduledFor', new Date().toISOString());\n\n  if (error) throw error;\n\n  await Promise.allSettled(\n    (scheduledEmails || []).map(async (scheduledEmail) => {\n      try {\n        await sendScheduledEmail(scheduledEmail);\n      } catch (error) {\n        const { handleError } = useErrorStore.getState();\n        handleError('Erreur lors de l\\'envoi d\\'email programmé', error instanceof Error ? error.message : 'Erreur inconnue');\n        await supabase\n          .from('scheduled_emails')\n          .update({\n            status: 'failed',\n            errorMessage: error instanceof Error ? error.message : 'Erreur inconnue'\n          })\n          .eq('id', scheduledEmail.id);\n      }\n    })\n  );\n};\n\nconst sendScheduledEmail = async (scheduledEmail: ScheduledEmail): Promise<void> => {\n  const { data: prospect, error: prospectError } = await supabase\n    .from('prospects')\n    .select('*')\n    .eq('id', scheduledEmail.prospectId)\n    .single();\n\n  if (prospectError) throw prospectError;\n\n  const template = await getTemplate(scheduledEmail.templateId);\n  if (!template) throw new Error('Template introuvable');\n\n  const variables = {\n    contact_name: `${prospect.first_name || ''} ${prospect.last_name || ''}`.trim() || prospect.company_name,\n    company_name: prospect.company_name,\n    sender_name: 'Black Road Music',\n    sender_email: 'contact@blackroadmusic.com',\n    sender_phone: '+33 1 23 45 67 89',\n    portfolio_link: 'https://blackroadmusic.com/portfolio',\n    booking_link: generateBookingLink(prospect.id),\n    unsubscribe_link: generateUnsubscribeLink(prospect.id)\n  };\n\n  const compiledEmail = compileTemplate(template, variables);\n\n  // TODO: Intégrer avec le service d'email\n  // await emailService.send({\n  //   to: prospect.email,\n  //   subject: compiledEmail.subject,\n  //   html: compiledEmail.content\n  // });\n\n  const now = new Date().toISOString();\n  \n  await Promise.all([\n    supabase\n      .from('scheduled_emails')\n      .update({ status: 'sent', sentAt: now })\n      .eq('id', scheduledEmail.id),\n    supabase\n      .from('email_tracking')\n      .insert({\n        prospect_id: prospect.id,\n        template_id: scheduledEmail.templateId,\n        subject: compiledEmail.subject,\n        sent_at: now,\n        status: 'sent',\n        sequence_id: scheduledEmail.sequenceId,\n        step_id: scheduledEmail.stepId\n      })\n  ]);\n};\n\nexport const stopEmailSequence = async (prospectId: string, sequenceId: string): Promise<void> => {\n  await supabase\n    .from('scheduled_emails')\n    .update({ status: 'cancelled' })\n    .eq('prospectId', prospectId)\n    .eq('sequenceId', sequenceId)\n    .eq('status', 'pending');\n};\n\n","import { useState, useEffect, useMemo, useCallback } from 'react';\nimport { format } from 'date-fns';\nimport { fr } from 'date-fns/locale';\nimport useProspectionStore from '../../stores/prospectionStore';\nimport { useErrorStore } from '../../stores/errorStore';\nimport { supabase } from '../../lib/supabase';\nimport { emailSequences, startEmailSequence, stopEmailSequence } from '../../data/emailSequences';\nimport { \n  Mail, Phone, Building, User, Calendar, MessageSquare, History, X, \n  AlertTriangle, Play, Square, Target, BarChart3 \n} from 'lucide-react';\n\ninterface ProspectDetailsProps {\n  prospectId: string;\n  onClose: () => void;\n  onEdit: () => void;\n}\n\ninterface EmailTracking {\n  id: string;\n  template_id: string;\n  subject: string;\n  status: string;\n  sent_at: string;\n  updated_at: string;\n  opened_at?: string;\n  responded_at?: string;\n  sequence_id?: string;\n  step_id?: string;\n}\n\ninterface ProspectMetrics {\n  leadScore: number;\n  conversionProbability: number;\n  daysSinceLastContact: number;\n  emailsSent: number;\n  emailsOpened: number;\n  responseRate: number;\n  churnRisk: number;\n}\n\ntype StatusType = \"new\" | \"contacted\" | \"interested\" | \"qualified\" | \"proposal_sent\" | \"negotiation\" | \"closed_won\" | \"closed_lost\";\n\n// Constantes pour éviter la redéfinition\nconst STATUS_CONFIG = {\n  new: { color: 'bg-blue-500', label: 'Nouveau' },\n  contacted: { color: 'bg-yellow-500', label: 'Contacté' },\n  interested: { color: 'bg-green-500', label: 'Intéressé' },\n  qualified: { color: 'bg-emerald-500', label: 'Qualifié' },\n  proposal_sent: { color: 'bg-purple-500', label: 'Proposition envoyée' },\n  negotiation: { color: 'bg-orange-500', label: 'En négociation' },\n  closed_won: { color: 'bg-green-600', label: 'Gagné' },\n  closed_lost: { color: 'bg-red-500', label: 'Perdu' },\n  nurturing: { color: 'bg-indigo-500', label: 'En nurturing' }\n} as const;\n\nconst EMAIL_STATUS_COLORS = {\n  sent: 'text-blue-400',\n  delivered: 'text-green-400',\n  opened: 'text-purple-400',\n  clicked: 'text-yellow-400',\n  bounced: 'text-red-400',\n  complained: 'text-red-600'\n} as const;\n\nconst ProspectDetails = ({ prospectId, onClose, onEdit }: ProspectDetailsProps) => {\n  const { prospects, saveProspect, calculateDetailedLeadScore, enrichProspectData } = useProspectionStore();\n  const { handleError } = useErrorStore();\n  const [emailHistory, setEmailHistory] = useState<EmailTracking[]>([]);\n  const [prospectMetrics, setProspectMetrics] = useState<ProspectMetrics | null>(null);\n  const [activeSequences, setActiveSequences] = useState<string[]>([]);\n  const [isLoadingHistory, setIsLoadingHistory] = useState(true);\n  const [newNote, setNewNote] = useState('');\n  const [isAddingNote, setIsAddingNote] = useState(false);\n  const [selectedSequence, setSelectedSequence] = useState('');\n  const [isStartingSequence, setIsStartingSequence] = useState(false);\n  \n  const prospect = prospects.find(p => p.id === prospectId);\n\n  // Fonctions utilitaires mémorisées\n  const getContactName = useCallback((prospect: any) => {\n    if (prospect.first_name && prospect.last_name) {\n      return `${prospect.first_name} ${prospect.last_name}`;\n    }\n    return prospect.contact_name || 'Contact non défini';\n  }, []);\n\n  const getStatusConfig = useCallback((status: string) => {\n    return STATUS_CONFIG[status as keyof typeof STATUS_CONFIG] || { color: 'bg-gray-500', label: status };\n  }, []);\n\n  const getEmailStatusColor = useCallback((status: string) => {\n    return EMAIL_STATUS_COLORS[status as keyof typeof EMAIL_STATUS_COLORS] || 'text-gray-400';\n  }, []);\n\n  const getScoreColor = useCallback((score: number) => {\n    if (score >= 80) return 'text-green-400';\n    if (score >= 60) return 'text-yellow-400';\n    if (score >= 40) return 'text-orange-400';\n    return 'text-red-400';\n  }, []);\n\n  const getRiskColor = useCallback((risk: number) => {\n    if (risk >= 70) return 'text-red-400';\n    if (risk >= 40) return 'text-yellow-400';\n    return 'text-green-400';\n  }, []);\n\n  const loadEmailHistory = useCallback(async () => {\n    try {\n      const { data, error } = await supabase\n        .from('email_tracking')\n        .select('*')\n        .eq('prospect_id', prospectId)\n        .order('sent_at', { ascending: false });\n\n      if (error) throw error;\n      setEmailHistory(data || []);\n    } catch (error) {\n      handleError('Erreur lors du chargement de l\\'historique des emails', error instanceof Error ? error.message : 'Erreur inconnue');\n    } finally {\n      setIsLoadingHistory(false);\n    }\n  }, [prospectId, handleError]);\n\n  const calculateMetrics = useCallback(async (emailData: EmailTracking[]) => {\n    const emailsSent = emailData.length;\n    const emailsOpened = emailData.filter(e => e.opened_at).length;\n    const emailsResponded = emailData.filter(e => e.responded_at).length;\n    \n    const responseRate = emailsSent > 0 ? (emailsResponded / emailsSent) * 100 : 0;\n    const openRate = emailsSent > 0 ? (emailsOpened / emailsSent) * 100 : 0;\n    \n    const lastContact = prospect?.last_contact_date ? new Date(prospect.last_contact_date) : new Date();\n    const daysSinceLastContact = Math.floor((Date.now() - lastContact.getTime()) / (1000 * 60 * 60 * 24));\n    \n    // Calcul du score de lead\n    const leadScoreObj = await calculateDetailedLeadScore(prospectId);\n    const leadScore = typeof leadScoreObj === 'number' ? leadScoreObj : leadScoreObj.total;\n    \n    // Calcul optimisé de la probabilité de conversion\n    let conversionProbability = 0;\n    const statusBonus = {\n      interested: 40,\n      contacted: 20,\n      qualified: 60,\n      proposal_sent: 70,\n      negotiation: 80\n    };\n    \n    conversionProbability += statusBonus[prospect?.status as keyof typeof statusBonus] || 0;\n    if (responseRate > 50) conversionProbability += 30;\n    if (openRate > 70) conversionProbability += 20;\n    if (daysSinceLastContact < 7) conversionProbability += 10;\n    \n    // Calcul optimisé du risque de churn\n    let churnRisk = 0;\n    if (daysSinceLastContact > 60) churnRisk += 70;\n    else if (daysSinceLastContact > 30) churnRisk += 40;\n    if (responseRate === 0 && emailsSent > 2) churnRisk += 30;\n    \n    return {\n      leadScore,\n      conversionProbability: Math.min(conversionProbability, 100),\n      daysSinceLastContact,\n      emailsSent,\n      emailsOpened,\n      responseRate,\n      churnRisk: Math.min(churnRisk, 100)\n    };\n  }, [prospect, prospectId, calculateDetailedLeadScore]);\n\n  const loadProspectMetrics = useCallback(async () => {\n    try {\n      const emails = await supabase\n        .from('email_tracking')\n        .select('*')\n        .eq('prospect_id', prospectId);\n\n      if (emails.data) {\n        const metrics = await calculateMetrics(emails.data);\n        setProspectMetrics(metrics);\n      }\n    } catch (error) {\n      handleError('Erreur lors du calcul des métriques', error instanceof Error ? error.message : 'Erreur inconnue');\n    }\n  }, [prospectId, calculateMetrics, handleError]);\n\n  const loadActiveSequences = useCallback(async () => {\n    try {\n      const { data, error } = await supabase\n        .from('scheduled_emails')\n        .select('sequence_id')\n        .eq('prospect_id', prospectId)\n        .eq('status', 'pending');\n\n      if (error) throw error;\n      const sequences = [...new Set(data?.map(d => d.sequence_id) || [])];\n      setActiveSequences(sequences);\n    } catch (error) {\n      handleError('Erreur lors du chargement des séquences actives', error instanceof Error ? error.message : 'Erreur inconnue');\n      // Suppression de: console.error('Erreur lors du chargement des séquences actives:', error);\n    }\n  }, [prospectId, handleError]);\n\n  const enrichProspectIfNeeded = useCallback(async () => {\n    if (prospect && !prospect.enriched_data) {\n      try {\n        await enrichProspectData(prospectId);\n      } catch (error) {\n        handleError('Erreur lors de l\\'enrichissement du prospect', error instanceof Error ? error.message : 'Erreur inconnue');\n        // Suppression de: console.error('Erreur lors de l\\'enrichissement:', error);\n      }\n    }\n  }, [prospect, prospectId, enrichProspectData, handleError]);\n\n  const handleStatusChange = useCallback(async (status: string) => {\n    try {\n      await saveProspect({ \n        id: prospectId,\n        status: status as StatusType,\n        last_contact_date: new Date().toISOString()\n      });\n      loadProspectMetrics();\n    } catch (error) {\n      handleError('Erreur lors de la mise à jour du statut', error instanceof Error ? error.message : 'Erreur inconnue');\n      // Suppression de: console.error('Erreur lors de la mise à jour du statut:', error);\n    }\n  }, [prospectId, saveProspect, loadProspectMetrics, handleError]);\n\n  const handleAddNote = useCallback(async () => {\n    if (!newNote.trim()) return;\n    \n    setIsAddingNote(true);\n    try {\n      const currentNotes = prospect?.notes || '';\n      const timestamp = new Date().toLocaleString('fr-FR');\n      const updatedNotes = currentNotes \n        ? `${currentNotes}\\n\\n[${timestamp}] ${newNote}`\n        : `[${timestamp}] ${newNote}`;\n      \n      await saveProspect({ \n        id: prospectId,\n        notes: updatedNotes,\n        last_contact_date: new Date().toISOString()\n      });\n      setNewNote('');\n      loadProspectMetrics();\n    } catch (error) {\n      console.error('Erreur lors de l\\'ajout de la note:', error);\n    } finally {\n      setIsAddingNote(false);\n    }\n  }, [newNote, prospect?.notes, prospectId, saveProspect, loadProspectMetrics]);\n\n  const handleStartSequence = useCallback(async () => {\n    if (!selectedSequence) return;\n    \n    setIsStartingSequence(true);\n    try {\n      await startEmailSequence(prospectId, selectedSequence);\n      await loadActiveSequences();\n      setSelectedSequence('');\n    } catch (error) {\n      console.error('Erreur lors du démarrage de la séquence:', error);\n    } finally {\n      setIsStartingSequence(false);\n    }\n  }, [selectedSequence, prospectId, loadActiveSequences]);\n\n  const handleStopSequence = useCallback(async (sequenceId: string) => {\n    try {\n      await stopEmailSequence(prospectId, sequenceId);\n      await loadActiveSequences();\n    } catch (error) {\n      console.error('Erreur lors de l\\'arrêt de la séquence:', error);\n    }\n  }, [prospectId, loadActiveSequences]);\n\n  // Mémorisation des séquences disponibles\n  const availableSequences = useMemo(() => {\n    return emailSequences.filter(seq => !activeSequences.includes(seq.id));\n  }, [activeSequences]);\n\n  // Mémorisation du statut du prospect\n  const statusConfig = useMemo(() => {\n    return getStatusConfig(prospect?.status || 'new');\n  }, [prospect?.status, getStatusConfig]);\n\n  useEffect(() => {\n    if (prospectId) {\n      Promise.all([\n        loadEmailHistory(),\n        loadProspectMetrics(),\n        loadActiveSequences(),\n        enrichProspectIfNeeded()\n      ]);\n    }\n  }, [prospectId, loadEmailHistory, loadProspectMetrics, loadActiveSequences, enrichProspectIfNeeded]);\n\n  if (!prospect) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-gray-900 p-6 rounded-lg w-full max-w-6xl max-h-[90vh] overflow-y-auto text-white\">\n        <div className=\"flex justify-between items-start mb-6\">\n          <div className=\"flex items-center space-x-3\">\n            <h2 className=\"text-2xl font-bold text-white\">{prospect.company_name}</h2>\n            <span className={`px-3 py-1 rounded-full text-sm font-medium text-white ${statusConfig.color}`}>\n              {statusConfig.label}\n            </span>\n            {prospectMetrics && prospectMetrics.churnRisk > 70 && (\n              <span className=\"px-2 py-1 bg-red-600 text-white text-xs rounded-full flex items-center space-x-1\">\n                <AlertTriangle className=\"w-3 h-3\" />\n                <span>Risque élevé</span>\n              </span>\n            )}\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={onEdit}\n              className=\"px-3 py-1 bg-blue-600 hover:bg-blue-500 rounded text-sm transition-colors text-white\"\n            >\n              Modifier\n            </button>\n            <button\n              onClick={onClose}\n              className=\"p-2 rounded hover:bg-gray-700 transition-colors text-white\"\n            >\n              <X className=\"w-5 h-5\" />\n            </button>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Informations du prospect */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold mb-3 text-white\">Informations</h3>\n            \n            <div className=\"space-y-3\">\n              <div className=\"flex items-center space-x-3\">\n                <Building className=\"w-5 h-5 text-gray-400\" />\n                <span className=\"text-gray-200\">{prospect.company_name}</span>\n              </div>\n              <div className=\"flex items-center space-x-3\">\n                <User className=\"w-5 h-5 text-gray-400\" />\n                <span className=\"text-gray-200\">{getContactName(prospect)}</span>\n              </div>\n              <div className=\"flex items-center space-x-3\">\n                <Mail className=\"w-5 h-5 text-gray-400\" />\n                <a href={`mailto:${prospect.email}`} className=\"text-blue-400 hover:underline\">\n                  {prospect.email}\n                </a>\n              </div>\n              {prospect.phone && (\n                <div className=\"flex items-center space-x-3\">\n                  <Phone className=\"w-5 h-5 text-gray-400\" />\n                  <a href={`tel:${prospect.phone}`} className=\"text-blue-400 hover:underline\">\n                    {prospect.phone}\n                  </a>\n                </div>\n              )}\n              <div className=\"flex items-center space-x-3\">\n                <Calendar className=\"w-5 h-5 text-gray-400\" />\n                <span className=\"text-gray-200\">\n                  Dernier contact: {prospect.last_contact_date \n                    ? format(new Date(prospect.last_contact_date), 'PPP à HH:mm', { locale: fr })\n                    : 'Aucun contact enregistré'\n                  }\n                </span>\n              </div>\n            </div>\n\n            {/* Métriques du prospect */}\n            {prospectMetrics && (\n              <div className=\"bg-gray-800 p-4 rounded border border-gray-700\">\n                <div className=\"flex items-center space-x-2 mb-3\">\n                  <BarChart3 className=\"w-5 h-5 text-gray-400\" />\n                  <h4 className=\"font-semibold text-white\">Métriques</h4>\n                </div>\n                <div className=\"grid grid-cols-2 gap-3 text-sm\">\n                  <div>\n                    <span className=\"text-gray-400\">Score Lead:</span>\n                    <span className={`ml-2 font-medium ${getScoreColor(prospectMetrics.leadScore)}`}>\n                      {prospectMetrics.leadScore}/100\n                    </span>\n                  </div>\n                  <div>\n                    <span className=\"text-gray-400\">Conversion:</span>\n                    <span className={`ml-2 font-medium ${getScoreColor(prospectMetrics.conversionProbability)}`}>\n                      {prospectMetrics.conversionProbability}%\n                    </span>\n                  </div>\n                  <div>\n                    <span className=\"text-gray-400\">Emails envoyés:</span>\n                    <span className=\"ml-2 font-medium text-blue-400\">\n                      {prospectMetrics.emailsSent}\n                    </span>\n                  </div>\n                  <div>\n                    <span className=\"text-gray-400\">Taux réponse:</span>\n                    <span className={`ml-2 font-medium ${getScoreColor(prospectMetrics.responseRate)}`}>\n                      {prospectMetrics.responseRate.toFixed(1)}%\n                    </span>\n                  </div>\n                  <div>\n                    <span className=\"text-gray-400\">Risque churn:</span>\n                    <span className={`ml-2 font-medium ${getRiskColor(prospectMetrics.churnRisk)}`}>\n                      {prospectMetrics.churnRisk}%\n                    </span>\n                  </div>\n                  <div>\n                    <span className=\"text-gray-400\">Jours silence:</span>\n                    <span className={`ml-2 font-medium ${\n                      prospectMetrics.daysSinceLastContact > 30 ? 'text-red-400' : \n                      prospectMetrics.daysSinceLastContact > 14 ? 'text-yellow-400' : 'text-green-400'\n                    }`}>\n                      {prospectMetrics.daysSinceLastContact}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Changement de statut */}\n            <div className=\"space-y-2\">\n              <label className=\"block text-sm font-medium text-white\">Statut</label>\n              <select\n                value={prospect.status}\n                onChange={(e) => handleStatusChange(e.target.value)}\n                className=\"w-full p-2 rounded bg-gray-800 border border-gray-700 focus:border-blue-500 focus:outline-none text-white\"\n              >\n                {Object.entries(STATUS_CONFIG).map(([key, config]) => (\n                  <option key={key} value={key}>{config.label}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          {/* Séquences d'emails */}\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Target className=\"w-5 h-5 text-gray-400\" />\n              <h3 className=\"text-lg font-semibold text-white\">Séquences d'emails</h3>\n            </div>\n            \n            {/* Séquences actives */}\n            {activeSequences.length > 0 && (\n              <div className=\"space-y-2\">\n                <h4 className=\"text-sm font-medium text-green-400\">Séquences actives</h4>\n                {activeSequences.map(sequenceId => {\n                  const sequence = emailSequences.find(s => s.id === sequenceId);\n                  return (\n                    <div key={sequenceId} className=\"bg-green-900/20 border border-green-700 p-3 rounded\">\n                      <div className=\"flex items-center justify-between\">\n                        <span className=\"text-sm font-medium text-white\">{sequence?.name || sequenceId}</span>\n                        <button\n                          onClick={() => handleStopSequence(sequenceId)}\n                          className=\"p-1 text-red-400 hover:text-red-300 transition-colors\"\n                          title=\"Arrêter la séquence\"\n                        >\n                          <Square className=\"w-4 h-4\" />\n                        </button>\n                      </div>\n                      <p className=\"text-xs text-gray-400 mt-1\">{sequence?.description}</p>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n            \n            {/* Démarrer une nouvelle séquence */}\n            <div className=\"space-y-2\">\n              <h4 className=\"text-sm font-medium text-white\">Démarrer une séquence</h4>\n              <select\n                value={selectedSequence}\n                onChange={(e) => setSelectedSequence(e.target.value)}\n                className=\"w-full p-2 rounded bg-gray-800 border border-gray-700 focus:border-blue-500 focus:outline-none text-sm text-white\"\n              >\n                <option value=\"\">Sélectionner une séquence...</option>\n                {availableSequences.map(sequence => (\n                  <option key={sequence.id} value={sequence.id}>\n                    {sequence.name}\n                  </option>\n                ))}\n              </select>\n              <button\n                onClick={handleStartSequence}\n                disabled={!selectedSequence || isStartingSequence}\n                className=\"w-full px-3 py-2 bg-blue-600 hover:bg-blue-500 rounded text-sm transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2 text-white\"\n              >\n                <Play className=\"w-4 h-4\" />\n                <span>{isStartingSequence ? 'Démarrage...' : 'Démarrer la séquence'}</span>\n              </button>\n            </div>\n          </div>\n\n          {/* Historique des emails */}\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center space-x-2\">\n              <History className=\"w-5 h-5 text-gray-400\" />\n              <h3 className=\"text-lg font-semibold text-white\">Historique des emails ({emailHistory.length})</h3>\n            </div>\n            \n            {isLoadingHistory ? (\n              <div className=\"flex items-center justify-center py-8\">\n                <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-500\"></div>\n              </div>\n            ) : emailHistory.length === 0 ? (\n              <p className=\"text-gray-400 text-sm py-4\">Aucun email envoyé pour le moment.</p>\n            ) : (\n              <div className=\"space-y-3 max-h-64 overflow-y-auto\">\n                {emailHistory.map(email => (\n                  <div key={email.id} className=\"bg-gray-800 p-3 rounded border border-gray-700\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <h4 className=\"font-medium text-sm text-white\">{email.subject}</h4>\n                      <div className=\"flex items-center space-x-2\">\n                        {email.sequence_id && (\n                          <span className=\"text-xs bg-blue-600 text-white px-2 py-1 rounded\">\n                            Séquence\n                          </span>\n                        )}\n                        <span className={`text-xs font-medium ${getEmailStatusColor(email.status)}`}>\n                          {email.status}\n                        </span>\n                      </div>\n                    </div>\n                    <p className=\"text-xs text-gray-400\">\n                      {format(new Date(email.sent_at), 'PPP à HH:mm', { locale: fr })}\n                    </p>\n                    {email.opened_at && (\n                      <p className=\"text-xs text-purple-400 mt-1\">\n                        Ouvert le {format(new Date(email.opened_at), 'PPP à HH:mm', { locale: fr })}\n                      </p>\n                    )}\n                    {email.responded_at && (\n                      <p className=\"text-xs text-green-400 mt-1\">\n                        Répondu le {format(new Date(email.responded_at), 'PPP à HH:mm', { locale: fr })}\n                      </p>\n                    )}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Section Notes */}\n        <div className=\"mt-6 space-y-4\">\n          <div className=\"flex items-center space-x-2\">\n            <MessageSquare className=\"w-5 h-5 text-gray-400\" />\n            <h3 className=\"text-lg font-semibold text-white\">Notes</h3>\n          </div>\n          \n          {/* Ajouter une note */}\n          <div className=\"space-y-2\">\n            <textarea\n              value={newNote}\n              onChange={(e) => setNewNote(e.target.value)}\n              placeholder=\"Ajouter une note...\"\n              className=\"w-full p-3 rounded bg-gray-800 border border-gray-700 focus:border-blue-500 focus:outline-none text-white resize-none\"\n              rows={3}\n            />\n            <button\n              onClick={handleAddNote}\n              disabled={!newNote.trim() || isAddingNote}\n              className=\"px-4 py-2 bg-blue-600 hover:bg-blue-500 rounded text-sm transition-colors disabled:opacity-50 disabled:cursor-not-allowed text-white\"\n            >\n              {isAddingNote ? 'Ajout...' : 'Ajouter la note'}\n            </button>\n          </div>\n          \n          {/* Affichage des notes existantes */}\n          {prospect.notes && (\n            <div className=\"bg-gray-800 p-4 rounded border border-gray-700\">\n              <pre className=\"text-sm text-gray-200 whitespace-pre-wrap font-sans\">\n                {prospect.notes}\n              </pre>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProspectDetails;","import { useState, useEffect } from 'react';\nimport useProspectionStore from '../../stores/prospectionStore';\nimport { supabase } from '../../lib/supabase';\nimport { EmailTemplate } from '../../data/types/emailTypes';\nimport { useErrorStore, errorUtils } from '../../stores/errorStore';\n\n// Types\ninterface SendResult {\n  success: boolean;\n  error?: string;\n  messageId?: string;\n}\n\ninterface EmailVariables {\n  contact_name: string;\n  sender_name: string;\n  company_name: string;\n  project_name: string;\n  unsubscribe_link: string;\n}\n\ninterface CompiledEmail {\n  subject: string;\n  content: string;\n}\n\n// Utilitaires\nconst getContactName = (prospect: any): string => {\n  const fullName = `${prospect.first_name || ''} ${prospect.last_name || ''}`.trim();\n  return fullName || prospect.company_name;\n};\n\nconst isValidEmail = (email: string): boolean => {\n  if (!email) return false;\n  return email.includes('@') && email.includes('.');\n};\n\nconst compileTemplate = (template: EmailTemplate, variables: EmailVariables): CompiledEmail => {\n  let compiledSubject = template.subject;\n  let compiledContent = template.content;\n\n  Object.entries(variables).forEach(([key, value]) => {\n    const regex = new RegExp(`{{${key}}}`, 'g');\n    compiledSubject = compiledSubject.replace(regex, value);\n    compiledContent = compiledContent.replace(regex, value);\n  });\n\n  return {\n    subject: compiledSubject,\n    content: compiledContent\n  };\n};\n\nconst generateUnsubscribeLink = (prospectId: string): string => {\n  return `${window.location.origin}/unsubscribe?id=${prospectId}`;\n};\n\nconst generateEmailVariables = (prospect: any): EmailVariables => ({\n  contact_name: getContactName(prospect),\n  sender_name: 'Black Road Music',\n  company_name: prospect.company_name || '',\n  project_name: 'Votre Projet',\n  unsubscribe_link: generateUnsubscribeLink(prospect.id)\n});\n\n// Service d'envoi d'email\nclass EmailService {\n  static async sendEmail({\n    to,\n    subject,\n    body,\n    templateId,\n    prospectId,\n    campaignId\n  }: {\n    to: string;\n    subject: string;\n    body: string;\n    templateId: string;\n    prospectId: string;\n    campaignId: string;\n  }): Promise<SendResult> {\n    return await errorUtils.withErrorHandling(\n      async () => {\n        const response = await fetch('/api/send-email', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            to,\n            subject,\n            body,\n            templateId,\n            prospectId,\n            campaignId\n          })\n        });\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const result = await response.json();\n        \n        if (result.success) {\n          // Enregistrer le tracking\n          await this.saveEmailTracking({\n            prospectId,\n            templateId,\n            campaignId,\n            subject,\n            messageId: result.messageId\n          });\n\n          // Mettre à jour le prospect\n          await this.updateProspectStatus(prospectId);\n        }\n        \n        return result;\n      },\n      `Erreur lors de l'envoi de l'email`\n    ) || { success: false, error: 'Erreur inconnue' };\n  }\n\n  private static async saveEmailTracking({\n    prospectId,\n    templateId,\n    campaignId,\n    subject,\n    messageId\n  }: {\n    prospectId: string;\n    templateId: string;\n    campaignId: string;\n    subject: string;\n    messageId: string;\n  }): Promise<void> {\n    await supabase.from('email_tracking').insert({\n      prospect_id: prospectId,\n      template_id: templateId,\n      campaign_id: campaignId,\n      email_status: 'sent',\n      sent_at: new Date().toISOString(),\n      subject: subject,\n      message_id: messageId\n    });\n  }\n\n  private static async updateProspectStatus(prospectId: string): Promise<void> {\n    await supabase.from('prospects')\n      .update({ \n        last_email_sent: new Date().toISOString(),\n        status: 'contacted'\n      })\n      .eq('id', prospectId);\n  }\n}\n\n// Hook personnalisé pour la gestion des templates\nconst useEmailTemplates = () => {\n  const [templates, setTemplates] = useState<EmailTemplate[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  const loadTemplates = async () => {\n    const result = await errorUtils.withErrorHandling(\n      async () => {\n        const { data, error } = await supabase\n          .from('email_templates')\n          .select('*')\n          .eq('is_active', true)\n          .order('priority', { ascending: false })\n          .order('name');\n  \n        if (error) throw error;\n        // Ensure is_active is properly typed as boolean\n        return (data || []).map(template => ({\n          ...template,\n          is_active: Boolean(template.is_active)\n        })) as EmailTemplate[];\n      },\n      'Erreur lors du chargement des templates'\n    );\n  \n    if (result) {\n      setTemplates(result);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    loadTemplates();\n  }, []);\n\n  const getTemplate = (templateKey: string): EmailTemplate | undefined => {\n    return templates.find(t => t.template_key === templateKey && t.is_active);\n  };\n\n  return { templates, loading, getTemplate };\n};\n\n// Hook pour la gestion de l'envoi d'emails\nconst useEmailSender = () => {\n  const [sending, setSending] = useState(false);\n  const [sendResults, setSendResults] = useState<{ success: number; failed: number }>({ success: 0, failed: 0 });\n  const { handleSuccess, handleError } = useErrorStore.getState();\n\n  const sendEmailToProspect = async (\n    prospect: any,\n    template: EmailTemplate,\n    campaignId: string\n  ): Promise<boolean> => {\n    if (!isValidEmail(prospect.email)) {\n      handleError(\n        new Error('Email invalide'),\n        `Email invalide pour ${getContactName(prospect)}`\n      );\n      return false;\n    }\n\n    const variables = generateEmailVariables(prospect);\n    const compiledEmail = compileTemplate(template, variables);\n\n    const result = await EmailService.sendEmail({\n      to: prospect.email,\n      subject: compiledEmail.subject,\n      body: compiledEmail.content,\n      templateId: template.template_key,\n      prospectId: prospect.id,\n      campaignId\n    });\n\n    if (result.success) {\n      handleSuccess(`Email envoyé avec succès à ${getContactName(prospect)}`);\n      return true;\n    } else {\n      handleError(\n        new Error(result.error || 'Erreur inconnue'),\n        `Échec envoi email pour ${getContactName(prospect)}`\n      );\n      return false;\n    }\n  };\n\n  const sendBulkEmails = async (\n    prospects: any[],\n    template: EmailTemplate\n  ): Promise<void> => {\n    setSending(true);\n    setSendResults({ success: 0, failed: 0 });\n    \n    const campaignId = `campaign_${Date.now()}`;\n\n    for (const prospect of prospects) {\n      const success = await sendEmailToProspect(prospect, template, campaignId);\n      \n      setSendResults(prev => ({\n        success: prev.success + (success ? 1 : 0),\n        failed: prev.failed + (success ? 0 : 1)\n      }));\n    }\n\n    setSending(false);\n  };\n\n  return {\n    sending,\n    sendResults,\n    sendBulkEmails\n  };\n};\n\n// Composant principal\nconst EmailCampaign = () => {\n  const { prospects } = useProspectionStore();\n  const { templates, loading, getTemplate } = useEmailTemplates();\n  const { sending, sendResults, sendBulkEmails } = useEmailSender();\n  \n  const [selectedTemplate, setSelectedTemplate] = useState('');\n  const [selectedProspects, setSelectedProspects] = useState<string[]>([]);\n  const [previewEmail, setPreviewEmail] = useState<CompiledEmail | null>(null);\n\n  const availableProspects = prospects.filter(p => \n    p.status === 'new' || p.status === 'contacted' || p.status === 'interested'\n  );\n\n  const handlePreview = () => {\n    const template = getTemplate(selectedTemplate);\n    if (!template) return;\n\n    const prospect = prospects.find(p => p.id === selectedProspects[0]);\n    if (!prospect) return;\n\n    const variables = generateEmailVariables(prospect);\n    const compiledEmail = compileTemplate(template, variables);\n    setPreviewEmail(compiledEmail);\n  };\n\n  const handleSend = async () => {\n    const template = getTemplate(selectedTemplate);\n    if (!template) return;\n\n    const selectedProspectObjects = prospects.filter(p => \n      selectedProspects.includes(p.id)\n    );\n\n    await sendBulkEmails(selectedProspectObjects, template);\n  };\n\n  const toggleProspectSelection = (prospectId: string) => {\n    setSelectedProspects(prev => \n      prev.includes(prospectId)\n        ? prev.filter(id => id !== prospectId)\n        : [...prev, prospectId]\n    );\n  };\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        <h2 className=\"text-2xl font-bold text-gray-900\">Campagne Email</h2>\n        <div className=\"flex items-center justify-center p-8\">\n          <div className=\"text-gray-500\">Chargement des templates...</div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold text-gray-900\">Campagne Email</h2>\n      \n      {/* Template Selection */}\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n          Sélectionner un template ({templates.length} disponibles)\n        </label>\n        <select \n          value={selectedTemplate} \n          onChange={(e) => setSelectedTemplate(e.target.value)}\n          className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent\"\n        >\n          <option value=\"\">Choisir un template...</option>\n          {templates.map(template => (\n            <option key={template.template_key} value={template.template_key}>\n              {template.name} ({template.category})\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {/* Prospect Selection */}\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n          Sélectionner les prospects ({selectedProspects.length} sélectionnés)\n        </label>\n        <div className=\"max-h-60 overflow-y-auto border border-gray-300 rounded-lg\">\n          {availableProspects.map(prospect => (\n            <label key={prospect.id} className=\"flex items-center p-3 hover:bg-gray-50 cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                checked={selectedProspects.includes(prospect.id)}\n                onChange={() => toggleProspectSelection(prospect.id)}\n                className=\"mr-3\"\n              />\n              <div>\n                <div className=\"font-medium\">{getContactName(prospect)}</div>\n                <div className=\"text-sm text-gray-500\">{prospect.email}</div>\n                <div className=\"text-xs text-gray-400\">{prospect.company_name}</div>\n              </div>\n            </label>\n          ))}\n        </div>\n      </div>\n\n      {/* Actions */}\n      <div className=\"flex space-x-4\">\n        <button\n          onClick={handlePreview}\n          disabled={!selectedTemplate || selectedProspects.length === 0}\n          className=\"px-6 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          Aperçu\n        </button>\n        <button\n          onClick={handleSend}\n          disabled={!selectedTemplate || selectedProspects.length === 0 || sending}\n          className=\"px-6 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          {sending ? 'Envoi en cours...' : `Envoyer (${selectedProspects.length})`}\n        </button>\n      </div>\n\n      {/* Send Results */}\n      {(sendResults.success > 0 || sendResults.failed > 0) && (\n        <div className=\"p-4 bg-gray-50 rounded-lg\">\n          <h3 className=\"font-medium mb-2\">Résultats de l'envoi :</h3>\n          <div className=\"text-sm\">\n            <div className=\"text-green-600\">✓ {sendResults.success} emails envoyés avec succès</div>\n            {sendResults.failed > 0 && (\n              <div className=\"text-red-600\">✗ {sendResults.failed} emails en échec</div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Email Preview */}\n      {previewEmail && (\n        <div className=\"border border-gray-300 rounded-lg p-4\">\n          <h3 className=\"font-medium mb-2\">Aperçu de l'email :</h3>\n          <div className=\"bg-gray-50 p-4 rounded\">\n            <div className=\"mb-2\">\n              <strong>Sujet :</strong> {previewEmail.subject}\n            </div>\n            <div className=\"whitespace-pre-wrap text-sm text-black\">{previewEmail.content}</div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EmailCampaign;","import { useState, useEffect, useCallback } from 'react';\nimport { useErrorStore } from '../../stores/errorStore';\nimport { supabase } from '../../lib/supabase';\nimport { Mail, TrendingUp, AlertTriangle, Eye, MousePointer } from 'lucide-react';\n\ninterface EmailStats {\n  total_sent: number;\n  total_delivered: number;\n  total_opened: number;\n  total_clicked: number;\n  total_bounced: number;\n  total_complained: number;\n  delivery_rate: number;\n  open_rate: number;\n  click_rate: number;\n  bounce_rate: number;\n}\n\ninterface RecentEmail {\n  id: string;\n  subject: string;\n  status: string;\n  sent_at: string;\n  prospect_company: string;\n}\n\ninterface EmailTrackingData {\n  id: string;\n  subject: string | null;\n  email_status: string;\n  sent_at: string;\n  prospects: { company_name: string }[] | null; // Changed from single object to array\n}\n\nconst EmailStatsDashboard = () => {\n  const { handleError } = useErrorStore();\n  const [stats, setStats] = useState<EmailStats | null>(null);\n  const [recentEmails, setRecentEmails] = useState<RecentEmail[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  // Suppression de: const [error, setError] = useState<string | null>(null);\n  const [dateRange, setDateRange] = useState('30');\n\n  const loadStats = useCallback(async () => {\n    try {\n      const dateFilter = new Date();\n      dateFilter.setDate(dateFilter.getDate() - parseInt(dateRange));\n\n      const { data, error } = await supabase\n        .from('email_tracking')\n        .select('email_status')\n        .gte('sent_at', dateFilter.toISOString());\n\n      if (error) throw error;\n\n      if (!data || data.length === 0) {\n        setStats({\n          total_sent: 0,\n          total_delivered: 0,\n          total_opened: 0,\n          total_clicked: 0,\n          total_bounced: 0,\n          total_complained: 0,\n          delivery_rate: 0,\n          open_rate: 0,\n          click_rate: 0,\n          bounce_rate: 0,\n        });\n        return;\n      }\n\n      const statusCounts = data.reduce((acc, email) => {\n        acc[email.email_status] = (acc[email.email_status] || 0) + 1;\n        return acc;\n      }, {} as Record<string, number>);\n\n      const total_sent = data.length;\n      const total_delivered = statusCounts.delivered || 0;\n      const total_opened = statusCounts.opened || 0;\n      const total_clicked = statusCounts.clicked || 0;\n      const total_bounced = statusCounts.bounced || 0;\n      const total_complained = statusCounts.complained || 0;\n\n      setStats({\n        total_sent,\n        total_delivered,\n        total_opened,\n        total_clicked,\n        total_bounced,\n        total_complained,\n        delivery_rate: total_sent > 0 ? (total_delivered / total_sent) * 100 : 0,\n        open_rate: total_delivered > 0 ? (total_opened / total_delivered) * 100 : 0,\n        click_rate: total_opened > 0 ? (total_clicked / total_opened) * 100 : 0,\n        bounce_rate: total_sent > 0 ? (total_bounced / total_sent) * 100 : 0,\n      });\n    } catch (error) {\n      handleError('Erreur lors du chargement des statistiques', error instanceof Error ? error.message : 'Erreur inconnue');\n      // Suppression de: setError('Erreur lors du chargement des statistiques');\n    }\n  }, [dateRange, handleError]);\n\n  const loadRecentEmails = useCallback(async () => {\n    try {\n      const { data, error } = await supabase\n        .from('email_tracking')\n        .select(`\n          id,\n          subject,\n          email_status,\n          sent_at,\n          prospects!inner(\n            company_name\n          )\n        `)\n        .order('sent_at', { ascending: false })\n        .limit(10);\n  \n      if (error) throw error;\n  \n      if (!data || data.length === 0) {\n        setRecentEmails([]);\n        return;\n      }\n  \n      const formattedData = (data as EmailTrackingData[]).map(email => ({\n        id: email.id,\n        subject: email.subject || 'Sans objet',\n        status: email.email_status,\n        sent_at: email.sent_at,\n        prospect_company: email.prospects?.[0]?.company_name || 'Entreprise inconnue'\n      }));\n  \n      setRecentEmails(formattedData);\n    } catch (error) {\n      handleError('Erreur lors du chargement des emails récents', error instanceof Error ? error.message : 'Erreur inconnue');\n      // Suppression de: console.error('Erreur lors du chargement des emails récents:', error);\n      // Suppression de: setError('Erreur lors du chargement des emails récents');\n    }\n  }, [handleError]);\n\n  useEffect(() => {\n    const loadData = async () => {\n      setIsLoading(true);\n      // Suppression de: setError(null);\n      try {\n        await Promise.all([loadStats(), loadRecentEmails()]);\n      } catch (err) {\n        handleError('Erreur lors du chargement des données', err instanceof Error ? err.message : 'Erreur inconnue');\n        // Suppression de: console.error('Erreur lors du chargement des données:', err);\n        // Suppression de: setError('Erreur lors du chargement des données');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    loadData();\n  }, [loadStats, loadRecentEmails, handleError]);\n\n  const getStatusColor = useCallback((status: string) => {\n    switch (status) {\n      case 'sent': return 'text-blue-400';\n      case 'delivered': return 'text-green-400';\n      case 'opened': return 'text-purple-400';\n      case 'clicked': return 'text-yellow-400';\n      case 'bounced': return 'text-red-400';\n      case 'complained': return 'text-red-600';\n      default: return 'text-gray-400';\n    }\n  }, []);\n\n  // Suppression de la fonction handleRetry non utilisée\n  // const handleRetry = useCallback(() => { ... }, [loadStats, loadRecentEmails, handleError]);\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\"></div>\n      </div>\n    );\n  }\n\n  // Suppression complète du bloc d'erreur car géré par les toasts\n  // if (error) { ... }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-2xl font-bold\">Statistiques Email</h2>\n        <select\n          value={dateRange}\n          onChange={(e) => setDateRange(e.target.value)}\n          className=\"px-3 py-2 bg-gray-700 border border-gray-600 rounded focus:border-blue-500 focus:outline-none\"\n        >\n          <option value=\"7\">7 derniers jours</option>\n          <option value=\"30\">30 derniers jours</option>\n          <option value=\"90\">90 derniers jours</option>\n          <option value=\"365\">Année complète</option>\n        </select>\n      </div>\n\n      {stats && (\n        <>\n          {/* Cartes de statistiques principales */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <div className=\"bg-gray-700 p-4 rounded-lg\">\n              <div className=\"flex items-center space-x-3\">\n                <Mail className=\"w-8 h-8 text-blue-400\" />\n                <div>\n                  <p className=\"text-2xl font-bold\">{stats.total_sent}</p>\n                  <p className=\"text-gray-400 text-sm\">Emails envoyés</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-gray-700 p-4 rounded-lg\">\n              <div className=\"flex items-center space-x-3\">\n                <TrendingUp className=\"w-8 h-8 text-green-400\" />\n                <div>\n                  <p className=\"text-2xl font-bold\">{stats.delivery_rate.toFixed(1)}%</p>\n                  <p className=\"text-gray-400 text-sm\">Taux de livraison</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-gray-700 p-4 rounded-lg\">\n              <div className=\"flex items-center space-x-3\">\n                <Eye className=\"w-8 h-8 text-purple-400\" />\n                <div>\n                  <p className=\"text-2xl font-bold\">{stats.open_rate.toFixed(1)}%</p>\n                  <p className=\"text-gray-400 text-sm\">Taux d'ouverture</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-gray-700 p-4 rounded-lg\">\n              <div className=\"flex items-center space-x-3\">\n                <MousePointer className=\"w-8 h-8 text-yellow-400\" />\n                <div>\n                  <p className=\"text-2xl font-bold\">{stats.click_rate.toFixed(1)}%</p>\n                  <p className=\"text-gray-400 text-sm\">Taux de clic</p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Statistiques détaillées */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"bg-gray-700 p-4 rounded-lg\">\n              <h3 className=\"text-lg font-semibold mb-4\">Détails des envois</h3>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-400\">Livrés:</span>\n                  <span className=\"text-green-400\">{stats.total_delivered}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-400\">Ouverts:</span>\n                  <span className=\"text-purple-400\">{stats.total_opened}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-400\">Cliqués:</span>\n                  <span className=\"text-yellow-400\">{stats.total_clicked}</span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-gray-700 p-4 rounded-lg\">\n              <h3 className=\"text-lg font-semibold mb-4\">Problèmes</h3>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-400\">Rebonds:</span>\n                  <span className=\"text-red-400\">{stats.total_bounced}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-400\">Plaintes:</span>\n                  <span className=\"text-red-600\">{stats.total_complained}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-400\">Taux de rebond:</span>\n                  <span className=\"text-red-400\">{stats.bounce_rate.toFixed(1)}%</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Alertes */}\n          {(stats.bounce_rate > 5 || stats.delivery_rate < 95) && (\n            <div className=\"bg-yellow-900 border border-yellow-700 text-yellow-100 px-4 py-3 rounded\">\n              <div className=\"flex items-center space-x-2\">\n                <AlertTriangle className=\"w-5 h-5\" />\n                <span className=\"font-medium\">Attention</span>\n              </div>\n              <div className=\"mt-2 text-sm\">\n                {stats.bounce_rate > 5 && (\n                  <p>• Taux de rebond élevé ({stats.bounce_rate.toFixed(1)}%) - Vérifiez la qualité de vos listes</p>\n                )}\n                {stats.delivery_rate < 95 && (\n                  <p>• Taux de livraison faible ({stats.delivery_rate.toFixed(1)}%) - Vérifiez votre réputation d'expéditeur</p>\n                )}\n              </div>\n            </div>\n          )}\n        </>\n      )}\n\n      {/* Emails récents */}\n      <div className=\"bg-gray-700 p-4 rounded-lg\">\n        <h3 className=\"text-lg font-semibold mb-4\">Emails récents</h3>\n        {recentEmails.length === 0 ? (\n          <p className=\"text-gray-400 text-sm\">Aucun email récent</p>\n        ) : (\n          <div className=\"space-y-2\">\n            {recentEmails.map(email => (\n              <div key={email.id} className=\"flex items-center justify-between p-2 bg-gray-800 rounded\">\n                <div className=\"flex-1\">\n                  <p className=\"font-medium truncate\">{email.subject}</p>\n                  <p className=\"text-sm text-gray-400\">{email.prospect_company}</p>\n                </div>\n                <div className=\"text-right\">\n                  <p className={`text-sm font-medium ${getStatusColor(email.status)}`}>\n                    {email.status}\n                  </p>\n                  <p className=\"text-xs text-gray-500\">\n                    {new Date(email.sent_at).toLocaleDateString('fr-FR')}\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EmailStatsDashboard;","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { supabase } from '../../lib/supabase';\nimport { Plus, Edit, Trash2, Eye, X, Save, AlertCircle, FileText, Copy } from 'lucide-react';\nimport { useErrorStore } from '../../stores/errorStore';\n\ninterface TemplateFormData {\n  id?: string;\n  name: string;\n  subject: string;\n  content: string;\n  category: string;\n  priority: 'high' | 'medium' | 'low';\n  variables: Record<string, string>;\n  segment_targeting: Record<string, string>;\n  template_key: string;\n  ab_test_variant?: 'A' | 'B' | 'C';\n}\n\ninterface Category {\n  value: string;\n  label: string;\n}\n\ninterface Priority {\n  value: 'high' | 'medium' | 'low';\n  label: string;\n}\n\ninterface EmailTemplate extends TemplateFormData {\n  id: string;\n  created_at: string;\n  updated_at: string;\n  is_active: boolean;\n  performance_metrics: Record<string, number | string>;\n}\n\ntype TemplateTab = 'list' | 'form' | 'preview';\n\ninterface TemplateManagerProps {\n  activeTab?: TemplateTab;\n  onTabChange?: (tab: TemplateTab) => void;\n  editingTemplateId?: string | null;\n  onCloseForm?: () => void;\n  onEditTemplate?: (templateId: string) => void;\n  onAddTemplate?: () => void;\n}\n\nconst TemplateManager: React.FC<TemplateManagerProps> = ({\n  activeTab: externalActiveTab,\n  onTabChange,\n  editingTemplateId: externalEditingTemplateId,\n  onCloseForm\n}) => {\n  const { handleError, handleWarning } = useErrorStore();\n  \n  const [internalActiveTab, setInternalActiveTab] = useState<TemplateTab>('list');\n  const [internalEditingTemplateId, setInternalEditingTemplateId] = useState<string | null>(null);\n  \n  // Utiliser les props externes si disponibles, sinon les états internes\n  const activeTab = externalActiveTab || internalActiveTab;\n  const editingTemplateId = externalEditingTemplateId || internalEditingTemplateId;\n  \n  // Supprimer cette fonction si elle n'est pas utilisée\n  // const handleTabChange = useCallback((tab: TemplateTab) => {\n  //   if (onTabChange) {\n  //     onTabChange(tab);\n  //   } else {\n  //     setInternalActiveTab(tab);\n  //   }\n  // }, [onTabChange]);\n  \n  const handleEditTemplate = useCallback((templateId: string) => {\n    if (onTabChange) {\n      // Mode externe - laisser le parent gérer\n      onTabChange('form');\n    } else {\n      setInternalEditingTemplateId(templateId);\n      setInternalActiveTab('form');\n    }\n  }, [onTabChange]); // Retirer handleTabChange des dépendances\n  \n  const handleAddTemplate = useCallback(() => {\n    if (onTabChange) {\n      onTabChange('form');\n    } else {\n      setInternalEditingTemplateId(null);\n      setInternalActiveTab('form');\n    }\n  }, [onTabChange]); // Retirer handleTabChange des dépendances\n  \n  const handleCloseForm = useCallback(() => {\n    if (onCloseForm) {\n      onCloseForm();\n    } else {\n      setInternalEditingTemplateId(null);\n      setInternalActiveTab('list');\n    }\n  }, [onCloseForm]); // Retirer handleTabChange des dépendances\n\n  const [templates, setTemplates] = useState<EmailTemplate[]>([]);\n  const [loading, setLoading] = useState(true);\n  // Suppression de: const [error, setError] = useState<string | null>(null);\n  const [saving, setSaving] = useState(false);\n  const [previewTemplate, setPreviewTemplate] = useState<EmailTemplate | null>(null);\n  const [isPreviewOpen, setIsPreviewOpen] = useState(false);\n\n  const [formData, setFormData] = useState<TemplateFormData>({\n    name: '',\n    subject: '',\n    content: '',\n    category: 'prospection',\n    priority: 'medium',\n    variables: {},\n    segment_targeting: {},\n    template_key: '',\n    ab_test_variant: 'A'\n  });\n\n  // Charger les templates\n  const loadTemplates = useCallback(async () => {\n    try {\n      setLoading(true);\n      const { data, error } = await supabase\n        .from('email_templates')\n        .select('*')\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      setTemplates(data || []);\n    } catch (err) {\n      handleError(err, 'Erreur lors du chargement des templates');\n    } finally {\n      setLoading(false);\n    }\n  }, [handleError]);\n\n  useEffect(() => {\n    loadTemplates();\n  }, [loadTemplates]);\n\n  // Charger le template à éditer\n  useEffect(() => {\n    if (editingTemplateId && activeTab === 'form') {\n      const template = templates.find(t => t.id === editingTemplateId);\n      if (template) {\n        setFormData({\n          id: template.id,\n          name: template.name,\n          subject: template.subject,\n          content: template.content,\n          category: template.category,\n          priority: template.priority,\n          variables: template.variables || {},\n          segment_targeting: template.segment_targeting || {},\n          template_key: template.template_key,\n          ab_test_variant: template.ab_test_variant || 'A'\n        });\n      }\n    } else if (!editingTemplateId && activeTab === 'form') {\n      // Reset pour nouveau template\n      setFormData({\n        name: '',\n        subject: '',\n        content: '',\n        category: 'prospection',\n        priority: 'medium',\n        variables: {},\n        segment_targeting: {},\n        template_key: '',\n        ab_test_variant: 'A'\n      });\n    }\n  }, [editingTemplateId, templates, activeTab]);\n\n  // Fonction pour extraire les variables du contenu\n  const extractVariables = useCallback((content: string): Record<string, string> => {\n    const variableRegex = /\\{\\{([^}]+)\\}\\}/g;\n    const variables: Record<string, string> = {};\n    let match;\n    \n    while ((match = variableRegex.exec(content)) !== null) {\n      const variableName = match[1].trim();\n      if (!variables[variableName]) {\n        variables[variableName] = '';\n      }\n    }\n    \n    return variables;\n  }, []);\n\n  // Mettre à jour les variables quand le contenu change\n  const updateVariables = useCallback((content: string) => {\n    const detectedVariables = extractVariables(content);\n    setFormData(prev => ({\n      ...prev,\n      variables: { ...prev.variables, ...detectedVariables }\n    }));\n  }, [extractVariables]);\n\n  useEffect(() => {\n    if (formData.content) {\n      updateVariables(formData.content);\n    }\n  }, [formData.content, updateVariables]);\n\n  const handleVariableChange = useCallback((variableName: string, value: string) => {\n    setFormData(prev => ({\n      ...prev,\n      variables: { ...prev.variables, [variableName]: value }\n    }));\n  }, []);\n\n  // Catégories disponibles\n  const categories = useMemo((): Category[] => [\n    { value: 'prospection', label: 'Prospection' },\n    { value: 'follow_up', label: 'Relance' },\n    { value: 'closing', label: 'Closing' },\n    { value: 'nurturing', label: 'Nurturing' }\n  ], []);\n\n  // Priorités disponibles\n  const priorities = useMemo((): Priority[] => [\n    { value: 'high', label: 'Haute' },\n    { value: 'medium', label: 'Moyenne' },\n    { value: 'low', label: 'Basse' }\n  ], []);\n\n  // Handlers pour les champs du formulaire\n  const handleNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const name = e.target.value;\n    setFormData(prev => ({\n      ...prev,\n      name,\n      template_key: name.toLowerCase().replace(/[^a-z0-9]/g, '_')\n    }));\n  }, []);\n\n  const handleSubjectChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData(prev => ({ ...prev, subject: e.target.value }));\n  }, []);\n\n  const handleContentChange = useCallback((e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setFormData(prev => ({ ...prev, content: e.target.value }));\n  }, []);\n\n  const handleCategoryChange = useCallback((e: React.ChangeEvent<HTMLSelectElement>) => {\n    setFormData(prev => ({ ...prev, category: e.target.value }));\n  }, []);\n\n  const handlePriorityChange = useCallback((e: React.ChangeEvent<HTMLSelectElement>) => {\n    setFormData(prev => ({ ...prev, priority: e.target.value as 'high' | 'medium' | 'low' }));\n  }, []);\n\n  // Sauvegarder le template\n  const handleSaveTemplate = useCallback(async () => {\n    if (!formData.name.trim() || !formData.subject.trim() || !formData.content.trim()) {\n      handleWarning('Veuillez remplir tous les champs obligatoires');\n      // Suppression de: setError('Veuillez remplir tous les champs obligatoires');\n      return;\n    }\n\n    try {\n      setSaving(true);\n      // Suppression de: setError(null);\n\n      const templateData = {\n        name: formData.name.trim(),\n        subject: formData.subject.trim(),\n        content: formData.content.trim(),\n        category: formData.category,\n        priority: formData.priority,\n        variables: formData.variables,\n        segment_targeting: formData.segment_targeting,\n        template_key: formData.template_key,\n        ab_test_variant: formData.ab_test_variant,\n        is_active: true,\n        performance_metrics: {}\n      };\n\n      if (editingTemplateId) {\n        const { error } = await supabase\n          .from('email_templates')\n          .update(templateData)\n          .eq('id', editingTemplateId);\n        \n        if (error) throw error;\n        handleError('Template mis à jour avec succès');\n      } else {\n        const { error } = await supabase\n          .from('email_templates')\n          .insert([templateData]);\n        \n        if (error) throw error;\n        handleError('Template créé avec succès');\n      }\n\n      await loadTemplates();\n      handleCloseForm();\n    } catch (err) {\n      handleError('Erreur lors de la sauvegarde du template', err instanceof Error ? err.message : 'Erreur inconnue');\n      // Suppression de: setError('Erreur lors de la sauvegarde du template');\n    } finally {\n      setSaving(false);\n    }\n  }, [formData, editingTemplateId, loadTemplates, handleCloseForm, handleError]);\n\n  // Supprimer un template\n  const handleDeleteTemplate = useCallback(async (templateId: string, templateName: string) => {\n    if (!confirm(`Êtes-vous sûr de vouloir supprimer le template \"${templateName}\" ?`)) {\n      return;\n    }\n\n    try {\n      const { error } = await supabase\n        .from('email_templates')\n        .delete()\n        .eq('id', templateId);\n\n      if (error) throw error;\n      await loadTemplates();\n      handleError(`Template \"${templateName}\" supprimé avec succès`);\n    } catch (err) {\n      handleError('Erreur lors de la suppression du template', err instanceof Error ? err.message : 'Erreur inconnue');\n      // Suppression de: setError('Erreur lors de la suppression du template');\n    }\n  }, [loadTemplates, handleError]);\n\n  // Dupliquer un template\n  const handleDuplicateTemplate = useCallback(async (template: EmailTemplate) => {\n    try {\n      const duplicatedTemplate = {\n        name: `${template.name} (Copie)`,\n        subject: template.subject,\n        content: template.content,\n        category: template.category,\n        priority: template.priority,\n        variables: template.variables,\n        segment_targeting: template.segment_targeting,\n        template_key: `${template.template_key}_copy_${Date.now()}`,\n        ab_test_variant: template.ab_test_variant,\n        is_active: true,\n        performance_metrics: {}\n      };\n\n      const { error } = await supabase\n        .from('email_templates')\n        .insert([duplicatedTemplate]);\n\n      if (error) throw error;\n      await loadTemplates();\n      handleError('Template dupliqué avec succès');\n    } catch (err) {\n      handleError('Erreur lors de la duplication du template', err instanceof Error ? err.message : 'Erreur inconnue');\n      // Suppression de: setError('Erreur lors de la duplication du template');\n    }\n  }, [loadTemplates, handleError]);\n\n  // Aperçu d'un template\n  const handlePreviewTemplate = useCallback((template: EmailTemplate) => {\n    setPreviewTemplate(template);\n    setIsPreviewOpen(true);\n  }, []);\n\n  // Filtrage des templates\n  const filteredTemplates = useMemo(() => templates, [templates]);\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center p-8\">\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-400\"></div>\n          <div className=\"text-gray-300\">Chargement des templates...</div>\n        </div>\n      </div>\n    );\n  }\n\n  // Rendu de la liste des templates\n  if (activeTab === 'list') {\n    return (\n      <div className=\"space-y-6\">\n        {/* Header avec design cohérent */}\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center space-y-4 sm:space-y-0\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-white mb-2 flex items-center space-x-3\">\n              <div className=\"p-2 bg-gradient-to-r from-purple-600 to-blue-600 rounded-lg\">\n                <FileText className=\"w-6 h-6 text-white\" />\n              </div>\n              <span>Gestion des Templates</span>\n            </h2>\n            <p className=\"text-gray-400\">Créez et gérez vos templates d'emails de prospection</p>\n          </div>\n          \n          <button\n            onClick={handleAddTemplate}\n            className=\"flex items-center space-x-2 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white px-6 py-3 rounded-xl font-medium transition-all duration-200 shadow-lg hover:shadow-xl\"\n          >\n            <Plus className=\"w-5 h-5\" />\n            <span>Nouveau Template</span>\n          </button>\n        </div>\n        \n        {/* Liste des templates avec design sombre */}\n        <div className=\"grid gap-4\">\n          {filteredTemplates.map((template) => (\n            <div key={template.id} className=\"bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-xl p-6 hover:border-gray-600/50 transition-all duration-200\">\n              <div className=\"flex justify-between items-start\">\n                <div className=\"flex-1\">\n                  <h3 className=\"text-lg font-semibold text-white mb-2\">{template.name}</h3>\n                  <p className=\"text-gray-300 mb-3\">{template.subject}</p>\n                  <div className=\"flex flex-wrap items-center gap-4\">\n                    <span className=\"inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-blue-600/20 text-blue-300 border border-blue-500/30\">\n                      {template.category}\n                    </span>\n                    <span className={`inline-flex items-center px-3 py-1 rounded-full text-xs font-medium border ${\n                      template.priority === 'high' \n                        ? 'bg-red-600/20 text-red-300 border-red-500/30'\n                        : template.priority === 'medium'\n                        ? 'bg-yellow-600/20 text-yellow-300 border-yellow-500/30'\n                        : 'bg-green-600/20 text-green-300 border-green-500/30'\n                    }`}>\n                      Priorité {template.priority === 'high' ? 'Haute' : template.priority === 'medium' ? 'Moyenne' : 'Basse'}\n                    </span>\n                    <span className=\"inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-purple-600/20 text-purple-300 border border-purple-500/30\">\n                      Variant {template.ab_test_variant}\n                    </span>\n                  </div>\n                </div>\n                \n                {/* Boutons d'action avec design cohérent */}\n                <div className=\"flex items-center gap-2 ml-4\">\n                  <button\n                    onClick={() => handlePreviewTemplate(template)}\n                    className=\"p-2 text-blue-400 hover:text-blue-300 hover:bg-blue-900/20 rounded-lg transition-all duration-200\"\n                    title=\"Aperçu\"\n                  >\n                    <Eye className=\"w-4 h-4\" />\n                  </button>\n                  <button\n                    onClick={() => handleEditTemplate(template.id)}\n                    className=\"p-2 text-green-400 hover:text-green-300 hover:bg-green-900/20 rounded-lg transition-all duration-200\"\n                    title=\"Modifier\"\n                  >\n                    <Edit className=\"w-4 h-4\" />\n                  </button>\n                  <button\n                    onClick={() => handleDuplicateTemplate(template)}\n                    className=\"p-2 text-yellow-400 hover:text-yellow-300 hover:bg-yellow-900/20 rounded-lg transition-all duration-200\"\n                    title=\"Dupliquer\"\n                  >\n                    <Copy className=\"w-4 h-4\" />\n                  </button>\n                  <button\n                    onClick={() => handleDeleteTemplate(template.id, template.name)}\n                    className=\"p-2 text-red-400 hover:text-red-300 hover:bg-red-900/20 rounded-lg transition-all duration-200\"\n                    title=\"Supprimer\"\n                  >\n                    <Trash2 className=\"w-4 h-4\" />\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n\n          {filteredTemplates.length === 0 && (\n            <div className=\"text-center py-12 text-gray-400 bg-gray-800/30 rounded-xl border border-gray-700/50\">\n              <FileText className=\"w-12 h-12 text-gray-500 mx-auto mb-4\" />\n              <p className=\"text-lg font-medium mb-2\">Aucun template trouvé</p>\n              <p className=\"text-sm\">Créez votre premier template pour commencer.</p>\n            </div>\n          )}\n        </div>\n\n        {/* Modal d'aperçu avec design sombre */}\n        {isPreviewOpen && previewTemplate && (\n          <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm flex items-center justify-center z-50 p-4\">\n            <div className=\"bg-gray-800/95 backdrop-blur-sm border border-gray-700/50 rounded-2xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n              <div className=\"p-6\">\n                <div className=\"flex justify-between items-center mb-6\">\n                  <h3 className=\"text-xl font-semibold text-white\">Aperçu du Template</h3>\n                  <button\n                    onClick={() => setIsPreviewOpen(false)}\n                    className=\"p-2 text-gray-400 hover:text-white hover:bg-gray-700 rounded-lg transition-all duration-200\"\n                  >\n                    <X className=\"h-6 w-6\" />\n                  </button>\n                </div>\n\n                <div className=\"space-y-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <h4 className=\"font-medium text-gray-300 mb-2\">Nom:</h4>\n                      <p className=\"text-white bg-gray-700/50 p-3 rounded-lg\">{previewTemplate.name}</p>\n                    </div>\n                    <div>\n                      <h4 className=\"font-medium text-gray-300 mb-2\">Catégorie:</h4>\n                      <p className=\"text-white bg-gray-700/50 p-3 rounded-lg\">{previewTemplate.category}</p>\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"font-medium text-gray-300 mb-2\">Sujet:</h4>\n                    <p className=\"text-white bg-gray-700/50 p-3 rounded-lg\">{previewTemplate.subject}</p>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"font-medium text-gray-300 mb-2\">Contenu:</h4>\n                    <div className=\"bg-gray-700/50 p-4 rounded-lg text-white whitespace-pre-wrap max-h-64 overflow-y-auto\">\n                      {previewTemplate.content}\n                    </div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <h4 className=\"font-medium text-gray-300 mb-2\">Priorité:</h4>\n                      <span className={`inline-flex items-center px-3 py-1 rounded-full text-xs font-medium ${\n                        previewTemplate.priority === 'high' \n                          ? 'bg-red-600/20 text-red-300 border border-red-500/30'\n                          : previewTemplate.priority === 'medium'\n                          ? 'bg-yellow-600/20 text-yellow-300 border border-yellow-500/30'\n                          : 'bg-green-600/20 text-green-300 border border-green-500/30'\n                      }`}>\n                        {previewTemplate.priority === 'high' ? 'Haute' : previewTemplate.priority === 'medium' ? 'Moyenne' : 'Basse'}\n                      </span>\n                    </div>\n                    <div>\n                      <h4 className=\"font-medium text-gray-300 mb-2\">Variant A/B:</h4>\n                      <span className=\"inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-purple-600/20 text-purple-300 border border-purple-500/30\">\n                        Variant {previewTemplate.ab_test_variant}\n                      </span>\n                    </div>\n                  </div>\n                  \n                  {Object.keys(previewTemplate.variables).length > 0 && (\n                    <div>\n                      <h4 className=\"font-medium text-gray-300 mb-3\">Variables:</h4>\n                      <div className=\"grid grid-cols-2 gap-3\">\n                        {Object.entries(previewTemplate.variables).map(([key, value]) => (\n                          <div key={key} className=\"bg-gray-700/50 p-3 rounded-lg\">\n                            <span className=\"text-blue-300 font-medium\">{key}:</span>\n                            <span className=\"text-gray-300 ml-2\">{value || '(vide)'}</span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  // Rendu du formulaire de création/modification\n  if (activeTab === 'form') {\n    return (\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"mb-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"p-3 bg-gradient-to-r from-blue-600 to-purple-600 rounded-xl\">\n                <FileText className=\"w-8 h-8 text-white\" />\n              </div>\n              <div>\n                <h2 className=\"text-2xl font-bold text-white mb-2\">\n                  {editingTemplateId ? 'Modifier le template' : 'Nouveau template'}\n                </h2>\n                <p className=\"text-gray-400\">\n                  {editingTemplateId ? 'Mettez à jour les informations du template' : 'Créez un nouveau template pour vos campagnes'}\n                </p>\n              </div>\n            </div>\n            \n            <button\n              onClick={handleCloseForm}\n              className=\"p-2 text-gray-400 hover:text-white hover:bg-gray-800 rounded-lg transition-all duration-200\"\n              disabled={saving}\n            >\n              <X className=\"w-6 h-6\" />\n            </button>\n          </div>\n        </div>\n\n        {/* Message d'erreur */}\n        {/* Suppression complète du bloc d'erreur car géré par les toasts */}\n        {/* {error && (\n          <div className=\"bg-red-900/20 border border-red-500/30 rounded-xl p-4 flex items-center gap-3\">\n            <AlertCircle className=\"h-5 w-5 text-red-400 flex-shrink-0\" />\n            <span className=\"text-red-300\">{error}</span>\n          </div>\n        )} */}\n\n        {/* Formulaire */}\n        <div className=\"bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 sm:p-8\">\n          <form onSubmit={(e) => { e.preventDefault(); handleSaveTemplate(); }} className=\"space-y-6\">\n            {/* Informations générales */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-semibold text-white flex items-center space-x-2\">\n                <FileText className=\"w-5 h-5 text-blue-400\" />\n                <span>Informations générales</span>\n              </h3>\n              \n              <div>\n                <label className=\"block text-sm font-medium mb-2 text-gray-300\">Nom du template *</label>\n                <input\n                  type=\"text\"\n                  value={formData.name}\n                  onChange={handleNameChange}\n                  className=\"w-full px-4 py-3 bg-gray-700/50 border border-gray-600/50 rounded-xl text-white placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                  placeholder=\"Nom du template\"\n                  disabled={saving}\n                  required\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-2 text-gray-300\">Sujet de l'email *</label>\n                <input\n                  type=\"text\"\n                  value={formData.subject}\n                  onChange={handleSubjectChange}\n                  className=\"w-full px-4 py-3 bg-gray-700/50 border border-gray-600/50 rounded-xl text-white placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                  placeholder=\"Sujet de votre email\"\n                  disabled={saving}\n                  required\n                />\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium mb-2 text-gray-300\">Catégorie</label>\n                  <select\n                    value={formData.category}\n                    onChange={handleCategoryChange}\n                    className=\"w-full px-4 py-3 bg-gray-700/50 border border-gray-600/50 rounded-xl text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                    disabled={saving}\n                  >\n                    {categories.map(category => (\n                      <option key={category.value} value={category.value}>\n                        {category.label}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium mb-2 text-gray-300\">Priorité</label>\n                  <select\n                    value={formData.priority}\n                    onChange={handlePriorityChange}\n                    className=\"w-full px-4 py-3 bg-gray-700/50 border border-gray-600/50 rounded-xl text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                    disabled={saving}\n                  >\n                    {priorities.map(priority => (\n                      <option key={priority.value} value={priority.value}>\n                        {priority.label}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium mb-2 text-gray-300\">Variant A/B</label>\n                  <select\n                    value={formData.ab_test_variant || 'A'}\n                    onChange={(e) => setFormData(prev => ({ ...prev, ab_test_variant: e.target.value as 'A' | 'B' | 'C' }))}\n                    className=\"w-full px-4 py-3 bg-gray-700/50 border border-gray-600/50 rounded-xl text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                    disabled={saving}\n                  >\n                    <option value=\"A\">Variant A</option>\n                    <option value=\"B\">Variant B</option>\n                    <option value=\"C\">Variant C</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            {/* Contenu du template */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-semibold text-white flex items-center space-x-2\">\n                <Edit className=\"w-5 h-5 text-green-400\" />\n                <span>Contenu du template</span>\n              </h3>\n              \n              <div>\n                <label className=\"block text-sm font-medium mb-2 text-gray-300\">Contenu de l'email *</label>\n                <textarea\n                  value={formData.content}\n                  onChange={handleContentChange}\n                  rows={8}\n                  className=\"w-full px-4 py-3 bg-gray-700/50 border border-gray-600/50 rounded-xl text-white placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 resize-none\"\n                  placeholder=\"Contenu de votre template email...\"\n                  disabled={saving}\n                  required\n                />\n                <p className=\"text-sm text-gray-400 mt-2\">\n                  Utilisez {`{{variables}}`} pour insérer des variables dynamiques\n                </p>\n              </div>\n            </div>\n\n            {/* Variables détectées */}\n            {Object.keys(formData.variables).length > 0 && (\n              <div className=\"space-y-4\">\n                <h3 className=\"text-lg font-semibold text-white flex items-center space-x-2\">\n                  <AlertCircle className=\"w-5 h-5 text-purple-400\" />\n                  <span>Variables détectées ({Object.keys(formData.variables).length})</span>\n                </h3>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  {Object.keys(formData.variables).map((variableName: string) => (\n                    <div key={variableName}>\n                      <label className=\"block text-sm font-medium mb-2 text-gray-300\">\n                        Variable: {variableName}\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={formData.variables[variableName]}\n                        onChange={(e) => handleVariableChange(variableName, e.target.value)}\n                        className=\"w-full px-4 py-3 bg-gray-700/50 border border-gray-600/50 rounded-xl text-white placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\n                        placeholder={`Valeur par défaut pour ${variableName}`}\n                        disabled={saving}\n                      />\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Actions */}\n            <div className=\"flex flex-col sm:flex-row justify-end space-y-3 sm:space-y-0 sm:space-x-4 pt-6 border-t border-gray-700/50\">\n              <button\n                type=\"button\"\n                onClick={handleCloseForm}\n                className=\"px-6 py-3 bg-gray-700/50 hover:bg-gray-600/50 text-gray-300 rounded-xl font-medium transition-all duration-200 disabled:opacity-50\"\n                disabled={saving}\n              >\n                Annuler\n              </button>\n              <button\n                type=\"submit\"\n                className=\"px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white rounded-xl font-medium transition-all duration-200 disabled:opacity-50 shadow-lg hover:shadow-xl flex items-center justify-center space-x-2\"\n                disabled={saving || !formData.name.trim() || !formData.subject.trim() || !formData.content.trim()}\n              >\n                {saving ? (\n                  <>\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\n                    <span>Sauvegarde...</span>\n                  </>\n                ) : (\n                  <>\n                    <Save className=\"h-4 w-4\" />\n                    <span>{editingTemplateId ? 'Mettre à jour' : 'Créer le template'}</span>\n                  </>\n                )}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default TemplateManager;","interface N8nPayload {\n  action: string;\n  data: Record<string, unknown>;\n  timestamp: number;\n}\n\ninterface BatchWorkflowAction {\n  workflowId: string;\n  data?: Record<string, unknown>;\n  priority?: 'high' | 'normal' | 'low';\n}\n\ninterface N8nResponse {\n  success: boolean;\n  data?: Record<string, unknown>;\n  error?: string;\n}\n\ninterface AutomationConfig {\n  workflowId: string;\n  isActive: boolean;\n  settings?: Record<string, unknown>;\n}\n\nclass N8nService {\n  private async fetchWithTimeout(input: RequestInfo, init: RequestInit = {}, timeoutMs = 10000): Promise<Response> {\n    const controller = new AbortController();\n    const id = setTimeout(() => controller.abort(), timeoutMs);\n    try {\n      const resp = await fetch(input, { ...init, signal: controller.signal });\n      clearTimeout(id);\n      return resp;\n    } catch (err) {\n      clearTimeout(id);\n      throw err;\n    }\n  }\n\n  private async generateSignature(payload: N8nPayload, timeoutMs = 5000): Promise<string> {\n    const resp = await this.fetchWithTimeout('/api/generate-signature', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(payload)\n    }, timeoutMs);\n\n    if (!resp.ok) {\n      const text = await resp.text().catch(() => '');\n      throw new Error(`Signature service failed: ${resp.status} ${text}`);\n    }\n\n    const json = await resp.json().catch(() => null);\n    if (!json || !json.signature) throw new Error('Invalid response from signature service');\n    return json.signature;\n  }\n\n  private nowTs = (): number => Math.floor(Date.now() / 1000);\n\n  async triggerWorkflow(workflowId: string, data: Record<string, unknown> = {}, opts = { timeoutMs: 15000 }): Promise<N8nResponse | null> {\n    const payload: N8nPayload = {\n      action: 'trigger_workflow',\n      data: { workflowId, ...data },\n      timestamp: this.nowTs()\n    };\n\n    const signature = await this.generateSignature(payload, 8000);\n\n    const resp = await this.fetchWithTimeout('/api/webhook-n8n', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ ...payload, signature })\n    }, opts.timeoutMs);\n\n    if (!resp.ok) {\n      const contentType = resp.headers.get('content-type') || '';\n      const errText = contentType.includes('application/json') \n        ? JSON.stringify(await resp.json().catch(() => ({}))) \n        : await resp.text().catch(() => '');\n      throw new Error(`n8n trigger failed: ${resp.status} ${errText}`);\n    }\n\n    return await resp.json().catch(() => null);\n  }\n\n  async batchTriggerWorkflows(actions: BatchWorkflowAction[], opts = { timeoutMs: 30000 }): Promise<N8nResponse | null> {\n    if (!Array.isArray(actions) || actions.length === 0) {\n      throw new Error('Aucune action fournie pour batchTriggerWorkflows');\n    }\n\n    const payload: N8nPayload = {\n      action: 'batch_trigger',\n      data: { items: actions },\n      timestamp: this.nowTs()\n    };\n\n    const signature = await this.generateSignature(payload, 8000);\n\n    const resp = await this.fetchWithTimeout('/api/webhook-n8n', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ ...payload, signature })\n    }, opts.timeoutMs);\n\n    if (!resp.ok) {\n      const ct = resp.headers.get('content-type') || '';\n      const errText = ct.includes('application/json') \n        ? JSON.stringify(await resp.json().catch(() => ({}))) \n        : await resp.text().catch(() => '');\n      throw new Error(`Batch trigger failed: ${resp.status} ${errText}`);\n    }\n\n    return await resp.json().catch(() => null);\n  }\n\n  async toggleAutomation(isActive: boolean, config: AutomationConfig): Promise<N8nResponse | null> {\n    const action = isActive ? 'start_automation' : 'stop_automation';\n    const payload: N8nPayload = {\n      action,\n      data: { config },\n      timestamp: this.nowTs()\n    };\n\n    const signature = await this.generateSignature(payload, 8000);\n\n    const resp = await this.fetchWithTimeout('/api/webhook-n8n', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ ...payload, signature })\n    }, 12000);\n\n    if (!resp.ok) {\n      const text = await resp.text().catch(() => '');\n      throw new Error(`n8n API error: ${resp.status} ${text}`);\n    }\n\n    return await resp.json().catch(() => null);\n  }\n\n  async syncAutomationStatus(config: AutomationConfig): Promise<N8nResponse | null> {\n    const payload: N8nPayload = {\n      action: 'sync_automation_status',\n      data: { config },\n      timestamp: this.nowTs()\n    };\n\n    const signature = await this.generateSignature(payload, 8000);\n    \n    const resp = await this.fetchWithTimeout('/api/webhook-n8n', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ ...payload, signature })\n    }, 15000);\n\n    if (!resp.ok) {\n      const text = await resp.text().catch(() => '');\n      throw new Error(`Sync failed: ${resp.status} ${text}`);\n    }\n\n    return await resp.json().catch(() => null);\n  }\n\n  async fetchStats(): Promise<Record<string, unknown>> {\n    const resp = await this.fetchWithTimeout('/api/automation/stats', {}, 12000);\n    if (!resp.ok) {\n      const text = await resp.text().catch(() => '');\n      throw new Error(`Stats fetch failed: ${resp.status} ${text}`);\n    }\n    return await resp.json();\n  }\n}\n\nexport const n8nService = new N8nService();","import { supabase } from './supabase';\nimport type { Prospect, Project, Artist, Service } from './types';\nimport type { Database } from './database.types';\n\nclass SupabaseService {\n  // ========== PROSPECTS ==========\n  async getProspects() {\n    const { data, error } = await supabase\n      .from('prospects')\n      .select('*')\n      .order('created_at', { ascending: false });\n    \n    if (error) throw new Error(`Erreur chargement prospects: ${error.message}`);\n    return data || [];\n  }\n\n  async saveProspect(prospect: Partial<Prospect>) {\n    const now = new Date().toISOString();\n    const prospectData = prospect.id \n      ? { ...prospect, updated_at: now }\n      : { ...prospect, created_at: now, updated_at: now };\n\n    const { data, error } = prospect.id \n      ? await supabase.from('prospects').update(prospectData).eq('id', prospect.id).select().single()\n      : await supabase.from('prospects').insert([prospectData]).select().single();\n    \n    if (error) throw new Error(`Erreur sauvegarde prospect: ${error.message}`);\n    return data;\n  }\n\n  async deleteProspect(id: string) {\n    const { error } = await supabase\n      .from('prospects')\n      .delete()\n      .eq('id', id);\n    \n    if (error) throw new Error(`Erreur suppression prospect: ${error.message}`);\n  }\n\n  async updateProspectSegment(prospectId: string, segmentId: string) {\n    const { error } = await supabase\n      .from('prospects')\n      .update({ segment_targeting: [segmentId] })\n      .eq('id', prospectId);\n    \n    if (error) throw new Error(`Erreur mise à jour segment: ${error.message}`);\n  }\n\n  async bulkUpdateProspectStatus(prospectIds: string[], status: Prospect['status']) {\n    const { error } = await supabase\n      .from('prospects')\n      .update({ status, updated_at: new Date().toISOString() })\n      .in('id', prospectIds);\n    \n    if (error) throw new Error(`Erreur mise à jour statut en masse: ${error.message}`);\n  }\n\n  // ========== PROJECTS ==========\n  async getProjects() {\n    const { data, error } = await supabase\n      .from('projects')\n      .select('*')\n      .order('display_order', { ascending: true });\n    \n    if (error) throw new Error(`Erreur chargement projets: ${error.message}`);\n    return data || [];\n  }\n\n  async saveProject(project: Partial<Project>) {\n    const { data, error } = project.id\n      ? await supabase.from('projects').update(project).eq('id', project.id).select().single()\n      : await supabase.from('projects').insert([project]).select().single();\n    \n    if (error) throw new Error(`Erreur sauvegarde projet: ${error.message}`);\n    return data;\n  }\n\n  async deleteProject(id: string) {\n    const { error } = await supabase\n      .from('projects')\n      .delete()\n      .eq('id', id);\n    \n    if (error) throw new Error(`Erreur suppression projet: ${error.message}`);\n  }\n\n  // ========== ARTISTS ==========\n  async getArtists() {\n    const { data, error } = await supabase\n      .from('artists')\n      .select('*')\n      .order('display_order', { ascending: true });\n    \n    if (error) throw new Error(`Erreur chargement artistes: ${error.message}`);\n    return data || [];\n  }\n\n  async saveArtist(artist: Partial<Artist>) {\n    const { data, error } = artist.id\n      ? await supabase.from('artists').update(artist).eq('id', artist.id).select().single()\n      : await supabase.from('artists').insert([artist]).select().single();\n    \n    if (error) throw new Error(`Erreur sauvegarde artiste: ${error.message}`);\n    return data;\n  }\n\n  async deleteArtist(id: string) {\n    const { error } = await supabase\n      .from('artists')\n      .delete()\n      .eq('id', id);\n    \n    if (error) throw new Error(`Erreur suppression artiste: ${error.message}`);\n  }\n\n  // ========== SERVICES ==========\n  async getServices() {\n    const { data: services, error: servicesError } = await supabase\n      .from('services')\n      .select('*')\n      .order('display_order', { ascending: true });\n\n    if (servicesError) throw new Error(`Erreur chargement services: ${servicesError.message}`);\n\n    const { data: features, error: featuresError } = await supabase\n      .from('service_features')\n      .select('*');\n\n    if (featuresError) throw new Error(`Erreur chargement features: ${featuresError.message}`);\n\n    return (services || []).map(service => ({\n      ...service,\n      features: (features || [])\n        .filter(f => f.service_id === service.id)\n        .map(f => f.feature)\n    }));\n  }\n\n  // ========== METRICS ==========\n  async getProspectionMetrics() {\n    const { data: prospects, error } = await supabase\n      .from('prospects')\n      .select('status, created_at, lead_score, conversion_probability');\n    \n    if (error) throw new Error(`Erreur chargement métriques: ${error.message}`);\n    \n    const total = prospects?.length || 0;\n    const qualified = prospects?.filter(p => p.lead_score && p.lead_score > 70).length || 0;\n    const thisMonth = new Date();\n    thisMonth.setDate(1);\n    const monthlyProspects = prospects?.filter(p => new Date(p.created_at) >= thisMonth).length || 0;\n    \n    return {\n      total_prospects: total,\n      qualified_prospects: qualified,\n      monthly_growth: monthlyProspects,\n      conversion_rate: total > 0 ? (qualified / total) * 100 : 0\n    };\n  }\n\n  // ========== AUTH ==========\n  async signIn(email: string, password: string) {\n    const { data: { user }, error } = await supabase.auth.signInWithPassword({\n      email,\n      password,\n    });\n\n    if (error) throw error;\n    if (!user) throw new Error('No user returned after sign in');\n\n    const isAdmin = user.app_metadata?.role === 'admin';\n    if (!isAdmin) {\n      await supabase.auth.signOut();\n      throw new Error('Accès non autorisé. Seuls les administrateurs peuvent se connecter.');\n    }\n\n    return { user, isAdmin };\n  }\n\n  async signOut() {\n    const { error } = await supabase.auth.signOut();\n    if (error) throw error;\n  }\n\n  async getSession() {\n    const { data: { session } } = await supabase.auth.getSession();\n    return session;\n  }\n\n  onAuthStateChange(callback: (event: string, session: any) => void) {\n    return supabase.auth.onAuthStateChange(callback);\n  }\n\n  // ========== AUTOMATION CONFIG ==========\n  async getAutomationConfig() {\n    const { data, error } = await supabase\n      .from('automation_config')\n      .select('*')\n      .eq('id', 'main')\n      .single();\n    \n    if (error && error.code !== 'PGRST116') { // PGRST116 = no rows found\n      throw new Error(`Erreur chargement config automation: ${error.message}`);\n    }\n    \n    return data;\n  }\n  \n  async saveAutomationConfig(isActive: boolean, config: any) {\n    const { data, error } = await supabase\n      .from('automation_config')\n      .upsert({\n        id: 'main',\n        is_active: isActive,\n        config: config,\n        updated_at: new Date().toISOString()\n      })\n      .select()\n      .single();\n    \n    if (error) throw new Error(`Erreur sauvegarde config automation: ${error.message}`);\n    return data;\n  }\n}\n\nexport const supabaseService = new SupabaseService();","import { create } from 'zustand';\nimport { n8nService } from '../lib/n8nService';\nimport { supabaseService } from '../lib/supabaseService';\nimport { useErrorStore, errorUtils } from './errorStore';\nimport { AutomationStats, AutomationConfig } from '../components/admin/types/automation.types';\n\n// ---------- Types locaux ----------\ninterface BatchWorkflowAction {\n  workflowId: string;\n  data?: Record<string, any>;\n  priority?: 'high' | 'normal' | 'low';\n}\n\ninterface AutomationState {\n  isActive: boolean;\n  stats: AutomationStats | null;\n  config: AutomationConfig;\n  isLoading: boolean;\n  isInitialized: boolean;\n}\n\ninterface AutomationActions {\n  initializeConfig: () => Promise<void>;\n  toggleAutomation: () => Promise<void>;\n  updateConfig: (config: Partial<AutomationConfig>) => Promise<void>;\n  fetchStats: () => Promise<void>;\n  triggerN8nWorkflow: (workflowId: string, data?: Record<string, any>, opts?: { timeoutMs?: number }) => Promise<any>;\n  batchTriggerWorkflows: (actions: BatchWorkflowAction[], opts?: { timeoutMs?: number }) => Promise<any>;\n  syncWithN8n: () => Promise<any>;\n  startProspectionCampaign: () => Promise<any>;\n}\n\n// Type combiné pour le store\ntype AutomationStore = AutomationState & AutomationActions;\n\n// ---------- Configuration par défaut ----------\nconst defaultConfig: AutomationConfig = {\n  isActive: false,\n  dailyLimit: 50,\n  followUpDelay: 5,\n  workingHours: { start: '09:00', end: '18:00' },\n  workingDays: ['monday', 'tuesday', 'wednesday', 'thursday', 'friday'],\n  activityTimeoutMinutes: 60,\n  statsTimeframeDays: 30,\n  recentActivityHours: 24,\n  performanceThresholds: {\n    openRate: { excellent: 25, good: 15 },\n    responseRate: { excellent: 5, good: 2 }\n  }\n};\n\n// ---------- Store Zustand ----------\nexport const useAutomationStore = create<AutomationStore>()((set, get) => ({\n  // État initial\n  isActive: false,\n  stats: null,\n  config: defaultConfig,\n  isLoading: false,\n  isInitialized: false,\n\n  // Initialisation de la configuration\n  initializeConfig: async () => {\n    if (get().isInitialized) return;\n    \n    set({ isLoading: true });\n    \n    await errorUtils.withErrorHandling(\n      async () => {\n        // Essayer de charger depuis Supabase\n        const supabaseConfig = await supabaseService.getAutomationConfig();\n        \n        if (supabaseConfig) {\n          // Utiliser la config de Supabase MAIS forcer isActive à false\n          const mergedConfig: AutomationConfig = {\n            ...defaultConfig,\n            ...supabaseConfig.config,\n            isActive: false // Toujours démarrer inactif\n          };\n          \n          set({\n            isActive: false,\n            config: mergedConfig,\n            isInitialized: true\n          });\n          \n          // Synchroniser avec localStorage (forcer false)\n          try {\n            localStorage.setItem('automation_active', JSON.stringify(false));\n            localStorage.setItem('automation_config', JSON.stringify(mergedConfig));\n          } catch (error) {\n            console.warn('Erreur localStorage:', error);\n          }\n        } else {\n          // Fallback sur localStorage puis défaut\n          let persistedConfig: Partial<AutomationConfig> | null = null;\n          \n          try {\n            if (typeof window !== 'undefined') {\n              const rawConfig = localStorage.getItem('automation_config');\n              if (rawConfig) persistedConfig = JSON.parse(rawConfig);\n            }\n          } catch (error) {\n            console.warn('Erreur lecture localStorage:', error);\n          }\n          \n          const finalConfig: AutomationConfig = {\n            ...defaultConfig,\n            ...persistedConfig,\n            isActive: false // Toujours démarrer inactif\n          };\n          \n          set({\n            isActive: false,\n            config: finalConfig,\n            isInitialized: true\n          });\n          \n          // Sauvegarder dans Supabase pour la prochaine fois\n          try {\n            await supabaseService.saveAutomationConfig(false, finalConfig);\n          } catch (err) {\n            useErrorStore.getState().handleWarning('Impossible de sauvegarder la config initiale dans Supabase');\n          }\n        }\n      },\n      'Erreur lors de l\\'initialisation de la configuration'\n    );\n    \n    set({ isLoading: false });\n  },\n\n  // Mise à jour de la configuration\n  updateConfig: async (configUpdate: Partial<AutomationConfig>) => {\n    const currentConfig = get().config;\n    const newConfig: AutomationConfig = { ...currentConfig, ...configUpdate };\n    \n    set({ config: newConfig });\n    \n    // Sauvegarder dans localStorage\n    try { \n      localStorage.setItem('automation_config', JSON.stringify(newConfig)); \n    } catch (error) {\n      console.warn('Erreur sauvegarde localStorage:', error);\n    }\n    \n    // Sauvegarder dans Supabase\n    await errorUtils.withErrorHandling(\n      () => supabaseService.saveAutomationConfig(get().isActive, newConfig),\n      'Erreur sauvegarde config dans Supabase'\n    );\n  },\n\n  // Basculer l'état de l'automation\n  toggleAutomation: async () => {\n    set({ isLoading: true });\n    \n    await errorUtils.withErrorHandling(\n      async () => {\n        const current = get().isActive;\n        const newState = !current;\n        const config = get().config;\n        \n        // Créer la config compatible avec n8nService\n        const n8nConfig = {\n          workflowId: 'automation-main', // ID par défaut\n          isActive: newState,\n          settings: {\n            dailyLimit: config.dailyLimit,\n            followUpDelay: config.followUpDelay,\n            workingHours: config.workingHours,\n            workingDays: config.workingDays\n          }\n        };\n        \n        await n8nService.toggleAutomation(newState, n8nConfig);\n        set({ isActive: newState });\n        \n        // Sauvegarder dans localStorage\n        try { \n          localStorage.setItem('automation_active', JSON.stringify(newState)); \n        } catch (error) {\n          console.warn('Erreur sauvegarde localStorage:', error);\n        }\n        \n        // Sauvegarder dans Supabase\n        await supabaseService.saveAutomationConfig(newState, config);\n        \n        useErrorStore.getState().handleSuccess(\n          `Automation ${newState ? 'activée' : 'désactivée'}`\n        );\n      },\n      'Erreur lors du basculement de l\\'automation'\n    );\n    \n    set({ isLoading: false });\n  },\n\n  // Déclencher un workflow n8n\n  triggerN8nWorkflow: async (\n    workflowId: string, \n    data = {}, \n    opts = { timeoutMs: 15000 }\n  ) => {\n    set({ isLoading: true });\n    \n    const result = await errorUtils.withErrorHandling(\n      async () => {\n        return await n8nService.triggerWorkflow(workflowId, data, { \n          timeoutMs: opts.timeoutMs || 15000 \n        });\n      },\n      'Erreur lors du déclenchement du workflow'\n    );\n    \n    set({ isLoading: false });\n    return result;\n  },\n\n  // Déclencher plusieurs workflows en lot\n  batchTriggerWorkflows: async (\n    actions: BatchWorkflowAction[], \n    opts = { timeoutMs: 30000 }\n  ) => {\n    set({ isLoading: true });\n    \n    const result = await errorUtils.withErrorHandling(\n      async () => {\n        return await n8nService.batchTriggerWorkflows(actions, { \n          timeoutMs: opts.timeoutMs || 30000 \n        });\n      },\n      'Erreur lors du déclenchement des workflows en lot'\n    );\n    \n    set({ isLoading: false });\n    return result;\n  },\n\n  // Récupérer les statistiques\n  fetchStats: async () => {\n    set({ isLoading: true });\n    \n    await errorUtils.withErrorHandling(\n      async () => {\n        const rawStats = await n8nService.fetchStats();\n        \n        // Convertir les stats brutes en AutomationStats typées\n        const stats: AutomationStats = {\n          prospectsAdded: Number(rawStats.prospectsAdded) || 0,\n          emailsSent: Number(rawStats.emailsSent) || 0,\n          openRate: Number(rawStats.openRate) || 0,\n          responseRate: Number(rawStats.responseRate) || 0,\n          conversionRate: Number(rawStats.conversionRate) || 0,\n          activeSequences: Number(rawStats.activeSequences) || 0,\n          scheduledEmails: Number(rawStats.scheduledEmails) || 0,\n          lastUpdate: new Date().toISOString(),\n          prospectsAddedTrend: Number(rawStats.prospectsAddedTrend) || 0,\n          emailsSentTrend: Number(rawStats.emailsSentTrend) || 0,\n          openRateTrend: Number(rawStats.openRateTrend) || 0,\n          responseRateTrend: Number(rawStats.responseRateTrend) || 0\n        };\n        \n        set({ stats });\n      },\n      'Erreur lors de la récupération des statistiques'\n    );\n    \n    set({ isLoading: false });\n  },\n\n  // Synchroniser avec n8n\n  syncWithN8n: async () => {\n    set({ isLoading: true });\n    \n    const result = await errorUtils.withErrorHandling(\n      async () => {\n        const config = get().config;\n        \n        // Créer la config compatible avec n8nService\n        const n8nConfig = {\n          workflowId: 'automation-main',\n          isActive: get().isActive,\n          settings: {\n            dailyLimit: config.dailyLimit,\n            followUpDelay: config.followUpDelay,\n            workingHours: config.workingHours,\n            workingDays: config.workingDays\n          }\n        };\n        \n        const syncResult = await n8nService.syncAutomationStatus(n8nConfig);\n        \n        // Mettre à jour les stats si disponibles\n        if (syncResult?.data?.stats) {\n          const rawStats = syncResult.data.stats as Record<string, unknown>;\n          const stats: AutomationStats = {\n            prospectsAdded: Number(rawStats.prospectsAdded) || 0,\n            emailsSent: Number(rawStats.emailsSent) || 0,\n            openRate: Number(rawStats.openRate) || 0,\n            responseRate: Number(rawStats.responseRate) || 0,\n            conversionRate: Number(rawStats.conversionRate) || 0,\n            activeSequences: Number(rawStats.activeSequences) || 0,\n            scheduledEmails: Number(rawStats.scheduledEmails) || 0,\n            lastUpdate: new Date().toISOString(),\n            prospectsAddedTrend: Number(rawStats.prospectsAddedTrend) || 0,\n            emailsSentTrend: Number(rawStats.emailsSentTrend) || 0,\n            openRateTrend: Number(rawStats.openRateTrend) || 0,\n            responseRateTrend: Number(rawStats.responseRateTrend) || 0\n          };\n          set({ stats });\n        }\n        \n        return syncResult;\n      },\n      'Erreur de synchronisation avec N8N'\n    );\n    \n    set({ isLoading: false });\n    return result;\n  },\n\n  // Démarrer une campagne de prospection\n  startProspectionCampaign: async () => {\n    set({ isLoading: true });\n    \n    const result = await errorUtils.withErrorHandling(\n      async () => {\n        const config = get().config;\n        \n        return await n8nService.triggerWorkflow('prospect_enrichment', {\n          campaignType: 'prospection',\n          config: {\n            dailyLimit: config.dailyLimit,\n            followUpDelay: config.followUpDelay,\n            workingHours: config.workingHours,\n            workingDays: config.workingDays\n          }\n        }, { timeoutMs: 30000 });\n      },\n      'Erreur lors du lancement de la campagne de prospection'\n    );\n    \n    set({ isLoading: false });\n    return result;\n  }\n}));\n","import { supabase } from '../../../lib/supabase';\nimport { AutomationConfig, AutomationStats, RecentActivity, EmailTrackingData, SystemHealth } from '../types/automation.types';\nimport { errorUtils } from '../../../stores/errorStore';\n\nexport class AutomationService {\n  static async fetchAutomationConfig(): Promise<AutomationConfig | null> {\n    return await errorUtils.withErrorHandling(\n      async () => {\n        const { data, error } = await supabase\n          .from('automation_config')\n          .select('*')\n          .eq('id', 'main')\n          .single();\n\n        if (error && error.code !== 'PGRST116') {\n          throw error;\n        }\n\n        if (data) {\n          const dbConfig = data.config as any;\n          return {\n            isActive: data.is_active,\n            dailyLimit: dbConfig.dailyLimit || 50,\n            followUpDelay: dbConfig.followUpDelay || 5,\n            workingHours: dbConfig.workingHours || { start: '09:00', end: '18:00' },\n            workingDays: dbConfig.workingDays || ['monday', 'tuesday', 'wednesday', 'thursday', 'friday'],\n            activityTimeoutMinutes: dbConfig.activityTimeoutMinutes || 60,\n            statsTimeframeDays: dbConfig.statsTimeframeDays || 30,\n            recentActivityHours: dbConfig.recentActivityHours || 24,\n            performanceThresholds: dbConfig.performanceThresholds || {\n              openRate: { excellent: 25, good: 15 },\n              responseRate: { excellent: 5, good: 2 }\n            }\n          };\n        }\n\n        return await this.createDefaultConfig();\n      },\n      'Erreur lors de la récupération de la configuration'\n    );\n  }\n\n  private static async createDefaultConfig(): Promise<AutomationConfig> {\n    const defaultConfig: AutomationConfig = {\n      isActive: false,\n      dailyLimit: 50,\n      followUpDelay: 5,\n      workingHours: { start: '09:00', end: '18:00' },\n      workingDays: ['monday', 'tuesday', 'wednesday', 'thursday', 'friday'],\n      activityTimeoutMinutes: 60,\n      statsTimeframeDays: 30,\n      recentActivityHours: 24,\n      performanceThresholds: {\n        openRate: { excellent: 25, good: 15 },\n        responseRate: { excellent: 5, good: 2 }\n      }\n    };\n    \n    await supabase.from('automation_config').insert({\n      id: 'main',\n      is_active: false,\n      config: defaultConfig\n    });\n    \n    return defaultConfig;\n  }\n\n  static async updateConfig(config: AutomationConfig): Promise<void> {\n    try {\n      await supabase\n        .from('automation_config')\n        .upsert({\n          id: 'main',\n          is_active: config.isActive,\n          config: config,\n          updated_at: new Date().toISOString()\n        });\n    } catch (error) {\n      console.error('Erreur lors de la mise à jour de la configuration:', error);\n      throw error;\n    }\n  }\n\n  static async fetchAutomationStats(config: AutomationConfig): Promise<AutomationStats | null> {\n    try {\n      const timeframeDays = config.statsTimeframeDays;\n      const currentPeriodStart = new Date(Date.now() - timeframeDays * 24 * 60 * 60 * 1000).toISOString();\n      const previousPeriodStart = new Date(Date.now() - timeframeDays * 2 * 24 * 60 * 60 * 1000).toISOString();\n      const previousPeriodEnd = currentPeriodStart;\n      \n      // Requêtes parallèles pour la période actuelle\n      const [prospectsResult, emailsResult, sequencesResult, scheduledResult] = await Promise.all([\n        supabase.from('prospects').select('id').gte('created_at', currentPeriodStart),\n        supabase.from('email_tracking').select('opened_at, responded_at, email_status').gte('sent_at', currentPeriodStart),\n        supabase.from('automated_sequences').select('id').eq('is_active', true),\n        supabase.from('prospects').select('id').not('next_follow_up', 'is', null).gte('next_follow_up', new Date().toISOString())\n      ]);\n\n      // Requêtes pour la période précédente\n      const [prevProspectsResult, prevEmailsResult] = await Promise.all([\n        supabase.from('prospects').select('id').gte('created_at', previousPeriodStart).lt('created_at', previousPeriodEnd),\n        supabase.from('email_tracking').select('opened_at, responded_at, email_status').gte('sent_at', previousPeriodStart).lt('sent_at', previousPeriodEnd)\n      ]);\n\n      // Calculs\n      const totalSent = emailsResult.data?.length || 0;\n      const opened = emailsResult.data?.filter(e => e.opened_at).length || 0;\n      const responded = emailsResult.data?.filter(e => e.responded_at).length || 0;\n      const converted = emailsResult.data?.filter(e => e.email_status === 'converted').length || 0;\n      const prospectsAdded = prospectsResult.data?.length || 0;\n\n      const prevTotalSent = prevEmailsResult.data?.length || 0;\n      const prevOpened = prevEmailsResult.data?.filter(e => e.opened_at).length || 0;\n      const prevResponded = prevEmailsResult.data?.filter(e => e.responded_at).length || 0;\n      const prevProspectsAdded = prevProspectsResult.data?.length || 0;\n\n      const calculateTrend = (current: number, previous: number) => {\n        if (previous === 0) return current > 0 ? 100 : 0;\n        return ((current - previous) / previous) * 100;\n      };\n\n      const currentOpenRate = totalSent > 0 ? (opened / totalSent) * 100 : 0;\n      const prevOpenRate = prevTotalSent > 0 ? (prevOpened / prevTotalSent) * 100 : 0;\n      const currentResponseRate = totalSent > 0 ? (responded / totalSent) * 100 : 0;\n      const prevResponseRate = prevTotalSent > 0 ? (prevResponded / prevTotalSent) * 100 : 0;\n\n      return {\n        prospectsAdded,\n        emailsSent: totalSent,\n        openRate: currentOpenRate,\n        responseRate: currentResponseRate,\n        conversionRate: totalSent > 0 ? (converted / totalSent) * 100 : 0,\n        activeSequences: sequencesResult.data?.length || 0,\n        scheduledEmails: scheduledResult.data?.length || 0,\n        lastUpdate: new Date().toISOString(),\n        prospectsAddedTrend: calculateTrend(prospectsAdded, prevProspectsAdded),\n        emailsSentTrend: calculateTrend(totalSent, prevTotalSent),\n        openRateTrend: calculateTrend(currentOpenRate, prevOpenRate),\n        responseRateTrend: calculateTrend(currentResponseRate, prevResponseRate)\n      };\n    } catch (error) {\n      console.error('Erreur lors de la récupération des stats:', error);\n      return null;\n    }\n  }\n\n  static async fetchRecentActivity(config: AutomationConfig): Promise<RecentActivity[]> {\n    try {\n      const activities: RecentActivity[] = [];\n      const recentHours = config.recentActivityHours;\n      const timeThreshold = new Date(Date.now() - recentHours * 60 * 60 * 1000).toISOString();\n\n      // Prospects récents\n      const { data: recentProspects } = await supabase\n        .from('prospects')\n        .select('id, company_name, created_at')\n        .gte('created_at', timeThreshold)\n        .order('created_at', { ascending: false })\n        .limit(5);\n\n      recentProspects?.forEach(prospect => {\n        activities.push({\n          id: `prospect-${prospect.id}`,\n          type: 'prospect_added',\n          description: `Nouveau prospect ajouté: ${prospect.company_name}`,\n          timestamp: prospect.created_at,\n          status: 'success'\n        });\n      });\n\n      // Emails récents\n      const { data: recentEmails } = await supabase\n        .from('email_tracking')\n        .select(`\n          id, \n          subject, \n          sent_at, \n          opened_at, \n          responded_at,\n          prospects!inner(\n            company_name\n          )\n        `)\n        .gte('sent_at', timeThreshold)\n        .order('sent_at', { ascending: false })\n        .limit(10) as { data: EmailTrackingData[] | null };\n\n      recentEmails?.forEach(email => {\n        const companyName = email.prospects?.company_name || 'prospect';\n        \n        activities.push({\n          id: `email-sent-${email.id}`,\n          type: 'email_sent',\n          description: `Email envoyé à ${companyName}: ${email.subject}`,\n          timestamp: email.sent_at,\n          status: 'success'\n        });\n        \n        if (email.opened_at) {\n          activities.push({\n            id: `email-opened-${email.id}`,\n            type: 'email_opened',\n            description: `Email ouvert par ${companyName}`,\n            timestamp: email.opened_at,\n            status: 'success'\n          });\n        }\n        \n        if (email.responded_at) {\n          activities.push({\n            id: `email-replied-${email.id}`,\n            type: 'email_replied',\n            description: `Réponse reçue de ${companyName}`,\n            timestamp: email.responded_at,\n            status: 'success'\n          });\n        }\n      });\n\n      activities.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n      return activities.slice(0, 10);\n    } catch (error) {\n      console.error('Erreur lors de la récupération des activités:', error);\n      return [];\n    }\n  }\n\n  static async checkSystemHealth(config: AutomationConfig | null, isActive: boolean, error: string | null): Promise<SystemHealth> {\n    try {\n      // Vérifier la connexion à la base de données\n      const { error: dbError } = await supabase.from('automation_config').select('id').limit(1);\n      const databaseConnected = !dbError;\n\n      // Vérifier la connexion n8n\n      let n8nConnected = false;\n      try {\n        const response = await fetch('/api/webhook-n8n', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            action: 'health_check',\n            timestamp: Math.floor(Date.now() / 1000)\n          })\n        });\n        n8nConnected = response.ok;\n      } catch {\n        n8nConnected = false;\n      }\n\n      // Récupérer la dernière activité réelle\n      const { data: lastActivityData } = await supabase\n        .from('email_tracking')\n        .select('sent_at')\n        .order('sent_at', { ascending: false })\n        .limit(1);\n\n      const lastActivity = lastActivityData?.[0]?.sent_at \n        ? new Date(lastActivityData[0].sent_at) \n        : null;\n\n      // Déterminer le statut du système\n      if (!databaseConnected || !n8nConnected) {\n        return {\n          status: 'disconnected',\n          color: 'red',\n          label: 'Déconnecté',\n          lastActivity,\n          n8nConnected,\n          databaseConnected\n        };\n      }\n\n      if (error) {\n        return {\n          status: 'error',\n          color: 'red',\n          label: 'Erreur',\n          lastActivity,\n          n8nConnected,\n          databaseConnected\n        };\n      }\n\n      if (!isActive) {\n        return {\n          status: 'paused',\n          color: 'yellow',\n          label: 'En pause',\n          lastActivity,\n          n8nConnected,\n          databaseConnected\n        };\n      }\n\n      // Vérifier si le système est actif basé sur la configuration réelle\n      const activityTimeoutMs = (config?.activityTimeoutMinutes || 60) * 60 * 1000;\n      if (lastActivity && Date.now() - lastActivity.getTime() < activityTimeoutMs) {\n        return {\n          status: 'active',\n          color: 'green',\n          label: 'Actif',\n          lastActivity,\n          n8nConnected,\n          databaseConnected\n        };\n      }\n\n      return {\n        status: 'idle',\n        color: 'blue',\n        label: 'Inactif',\n        lastActivity,\n        n8nConnected,\n        databaseConnected\n      };\n    } catch (error) {\n      console.error('Erreur lors de la vérification de la santé du système:', error);\n      return {\n        status: 'error',\n        color: 'red',\n        label: 'Erreur de vérification',\n        lastActivity: null,\n        n8nConnected: false,\n        databaseConnected: false\n      };\n    }\n  }\n}\n\nexport const automationService = {\n  async getConfiguration() {\n    return await errorUtils.withErrorHandling(\n      async () => {\n        const response = await fetch('/api/automation/config');\n        if (!response.ok) throw new Error(`HTTP ${response.status}`);\n        return await response.json();\n      },\n      'Erreur lors de la récupération de la configuration'\n    );\n  },\n\n  async updateConfiguration(config: any) {\n    return await errorUtils.withErrorHandling(\n      async () => {\n        const response = await fetch('/api/automation/config', {\n          method: 'PUT',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(config)\n        });\n        if (!response.ok) throw new Error(`HTTP ${response.status}`);\n        return await response.json();\n      },\n      'Erreur lors de la mise à jour de la configuration'\n    );\n  },\n\n  async getStats() {\n    return await errorUtils.withErrorHandling(\n      async () => {\n        const response = await fetch('/api/automation/stats');\n        if (!response.ok) throw new Error(`HTTP ${response.status}`);\n        return await response.json();\n      },\n      'Erreur lors de la récupération des stats'\n    );\n  },\n\n  async getRecentActivity() {\n    return await errorUtils.withErrorHandling(\n      async () => {\n        const response = await fetch('/api/automation/activity');\n        if (!response.ok) throw new Error(`HTTP ${response.status}`);\n        return await response.json();\n      },\n      'Erreur lors de la récupération des activités'\n    );\n  },\n\n  async checkSystemHealth() {\n    return await errorUtils.withErrorHandling(\n      async () => {\n        const response = await fetch('/api/automation/health');\n        if (!response.ok) throw new Error(`HTTP ${response.status}`);\n        return await response.json();\n      },\n      'Erreur lors de la vérification de la santé du système'\n    );\n  }\n};","import { useState, useEffect, useCallback } from 'react';\nimport { useAutomationStore } from '../../../stores/automationStore';\nimport { AutomationService } from '../services/automationService';\nimport { AutomationStats, RecentActivity, AutomationConfig, SystemHealth } from '../types/automation.types';\nimport { useErrorStore } from '../../../stores/errorStore';\n\nexport const useAutomationDashboard = () => {\n  const {\n    isActive,\n    error,\n    toggleAutomation,\n    updateConfig: updateStoreConfig,\n    triggerN8nWorkflow,\n    syncWithN8n,\n    startProspectionCampaign,\n    isLoading: storeLoading,\n    initializeConfig\n  } = useAutomationStore();\n\n  const { handleError, handleSuccess } = useErrorStore();\n\n  const [stats, setStats] = useState<AutomationStats | null>(null);\n  const [recentActivity, setRecentActivity] = useState<RecentActivity[]>([]);\n  const [config, setConfig] = useState<AutomationConfig | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSyncing, setIsSyncing] = useState(false);\n  const [systemHealth, setSystemHealth] = useState<SystemHealth>({\n    status: 'disconnected',\n    color: 'red',\n    label: 'Vérification...',\n    n8nConnected: false,\n    databaseConnected: false\n  });\n\n  const fetchAutomationConfig = useCallback(async () => {\n    const configData = await AutomationService.fetchAutomationConfig();\n    if (configData) {\n      setConfig(configData);\n    }\n  }, []);\n\n  const fetchAutomationStats = useCallback(async () => {\n    if (!config) return;\n    \n    const statsData = await AutomationService.fetchAutomationStats(config);\n    if (statsData) {\n      setStats(statsData);\n    }\n    setIsLoading(false);\n  }, [config]);\n\n  const fetchRecentActivity = useCallback(async () => {\n    if (!config) return;\n    \n    const activities = await AutomationService.fetchRecentActivity(config);\n    setRecentActivity(activities);\n  }, [config]);\n\n  const checkSystemHealth = useCallback(async () => {\n    const health = await AutomationService.checkSystemHealth(config, isActive, error);\n    setSystemHealth(health);\n  }, [config, isActive, error]);\n\n  const updateConfig = useCallback(async (newConfig: Partial<AutomationConfig>) => {\n    if (!config) {\n      handleError('Configuration non initialisée', 'Impossible de mettre à jour une configuration non chargée');\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      const fullConfig: AutomationConfig = { ...config, ...newConfig };\n      await AutomationService.updateConfig(fullConfig);\n      setConfig(fullConfig);\n      handleSuccess('Configuration mise à jour avec succès');\n    } catch (error) {\n      handleError('Erreur lors de la mise à jour de la configuration', error instanceof Error ? error.message : 'Erreur inconnue');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [config, handleError, handleSuccess]);\n\n  const updateScores = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      await triggerN8nWorkflow('update-scores');\n      await fetchAutomationStats();\n      handleSuccess('Scores mis à jour avec succès');\n    } catch (error) {\n      handleError('Erreur lors de la mise à jour des scores', error instanceof Error ? error.message : 'Erreur inconnue');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [triggerN8nWorkflow, fetchAutomationStats, handleError, handleSuccess]);\n\n  // Ajouter un useEffect pour initialiser la configuration au montage\n  useEffect(() => {\n    initializeConfig();\n  }, [initializeConfig]);\n\n  useEffect(() => {\n    fetchAutomationConfig();\n  }, [fetchAutomationConfig]);\n\n  useEffect(() => {\n    if (config) {\n      fetchAutomationStats();\n      fetchRecentActivity();\n    }\n  }, [config, fetchAutomationStats, fetchRecentActivity]);\n\n  useEffect(() => {\n    checkSystemHealth();\n    const interval = setInterval(checkSystemHealth, 30000);\n    return () => clearInterval(interval);\n  }, [checkSystemHealth]);\n\n  const handleSyncWithN8n = useCallback(async () => {\n    setIsSyncing(true);\n    try {\n      await syncWithN8n();\n    } finally {\n      setIsSyncing(false);\n    }\n  }, [syncWithN8n]);\n  \n  return {\n    // État\n    stats,\n    recentActivity,\n    config,\n    isLoading: isLoading || storeLoading,\n    isSyncing,\n    systemHealth,\n    isActive,\n    error,\n    \n    // Actions\n    toggleAutomation,\n    updateConfig,\n    updateScores,\n    syncWithN8n: handleSyncWithN8n,\n    startProspectionCampaign,\n    \n    // Fonctions de rafraîchissement\n    refreshStats: fetchAutomationStats,\n    refreshActivity: fetchRecentActivity,\n    refreshHealth: checkSystemHealth\n  };\n};\n","import React from 'react';\nimport { Wifi, WifiOff } from 'lucide-react';\nimport { SystemHealth } from '../types/automation.types';\n\ninterface SystemHealthIndicatorProps {\n  systemHealth: SystemHealth;\n}\n\nexport const SystemHealthIndicator: React.FC<SystemHealthIndicatorProps> = ({ systemHealth }) => {\n  return (\n    <div className=\"bg-gray-800/50 border border-gray-700/50 rounded-xl p-4\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <div className={`w-3 h-3 rounded-full bg-${systemHealth.color}-400 animate-pulse`} />\n          {systemHealth.n8nConnected ? \n            <Wifi className=\"w-4 h-4 text-green-400\" /> : \n            <WifiOff className=\"w-4 h-4 text-red-400\" />\n          }\n          <span className=\"text-white font-medium\">\n            Système: {systemHealth.label}\n          </span>\n          <div className=\"flex items-center space-x-2 text-xs text-gray-400\">\n            <span>DB: {systemHealth.databaseConnected ? '✓' : '✗'}</span>\n            <span>n8n: {systemHealth.n8nConnected ? '✓' : '✗'}</span>\n          </div>\n        </div>\n        {systemHealth.lastActivity && (\n          <span className=\"text-gray-400 text-sm\">\n            Dernière activité: {systemHealth.lastActivity.toLocaleTimeString()}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};","import { RecentActivity, AutomationConfig } from '../types/automation.types';\n\n// Formatage des nombres\nexport const formatNumber = (num: number): string => {\n  if (num >= 1000000) {\n    return `${(num / 1000000).toFixed(1)}M`;\n  }\n  if (num >= 1000) {\n    return `${(num / 1000).toFixed(1)}K`;\n  }\n  return num.toString();\n};\n\n// Formatage des pourcentages\nexport const formatPercentage = (rate: number): string => {\n  return `${(rate * 100).toFixed(1)}%`;\n};\n\n// Configuration des couleurs pour éviter le hardcoding\nexport const STAT_COLORS = {\n  blue: 'from-blue-600 to-blue-700 text-blue-100',\n  green: 'from-green-600 to-green-700 text-green-100',\n  purple: 'from-purple-600 to-purple-700 text-purple-100',\n  orange: 'from-orange-600 to-orange-700 text-orange-100',\n  red: 'from-red-600 to-red-700 text-red-100',\n  indigo: 'from-indigo-600 to-indigo-700 text-indigo-100'\n} as const;\n\n// Configuration des statuts pour éviter le hardcoding\nexport const STATUS_COLORS = {\n  success: 'text-green-400',\n  warning: 'text-yellow-400',\n  error: 'text-red-400',\n  default: 'text-gray-400'\n} as const;\n\nexport const STATUS_LABELS = {\n  success: 'Succès',\n  warning: 'Attention',\n  error: 'Erreur'\n} as const;\n\nexport const STATUS_BACKGROUNDS = {\n  success: 'bg-green-900/30 text-green-400',\n  warning: 'bg-yellow-900/30 text-yellow-400',\n  error: 'bg-red-900/30 text-red-400'\n} as const;\n\n// Configuration des jours de travail\nexport const WORKING_DAYS_OPTIONS = [\n  { value: 'monday', label: 'Lundi' },\n  { value: 'tuesday', label: 'Mardi' },\n  { value: 'wednesday', label: 'Mercredi' },\n  { value: 'thursday', label: 'Jeudi' },\n  { value: 'friday', label: 'Vendredi' },\n  { value: 'saturday', label: 'Samedi' },\n  { value: 'sunday', label: 'Dimanche' }\n] as const;\n\nexport const getPerformanceLabel = (rate: number, type: 'openRate' | 'responseRate', config: AutomationConfig | null) => {\n  if (!config) return 'N/A';\n  \n  const thresholds = config.performanceThresholds[type];\n  if (rate >= thresholds.excellent) return '↗ Excellent';\n  if (rate >= thresholds.good) return '→ Correct';\n  return '↘ À améliorer';\n};\n\nexport const formatTrend = (trend: number) => {\n  const sign = trend >= 0 ? '+' : '';\n  return `${sign}${trend.toFixed(1)}%`;\n};\n\nexport const getTrendColor = (trend: number) => {\n  if (trend > 0) return 'text-green-300';\n  if (trend < 0) return 'text-red-300';\n  return 'text-gray-300';\n};\n\n// Retourne le nom de l'icône au lieu du composant JSX\nexport const getActivityIcon = (type: RecentActivity['type']): string => {\n  const iconMap = {\n    prospect_added: '👤',\n    email_sent: '📧',\n    email_opened: '👁️',\n    email_replied: '💬',\n    sequence_started: '🚀'\n  } as const;\n  \n  return iconMap[type] || '📋';\n};\n\nexport const formatTimeAgo = (timestamp: string) => {\n  const now = new Date();\n  const time = new Date(timestamp);\n  const diffInHours = Math.floor((now.getTime() - time.getTime()) / (1000 * 60 * 60));\n  \n  if (diffInHours < 1) return 'Il y a moins d\\'1h';\n  if (diffInHours < 24) return `Il y a ${diffInHours}h`;\n  return `Il y a ${Math.floor(diffInHours / 24)}j`;\n};\n\n// Fonction utilitaire pour obtenir les classes de couleur\nexport const getColorClasses = (color: keyof typeof STAT_COLORS) => {\n  return STAT_COLORS[color] || STAT_COLORS.blue;\n};\n\n// Fonction utilitaire pour obtenir la couleur de statut\nexport const getStatusColor = (status: RecentActivity['status']) => {\n  return STATUS_COLORS[status] || STATUS_COLORS.default;\n};\n\n// Fonction utilitaire pour obtenir le label de statut\nexport const getStatusLabel = (status: RecentActivity['status']) => {\n  return STATUS_LABELS[status] || status;\n};\n\n// Fonction utilitaire pour obtenir le background de statut\nexport const getStatusBackground = (status: RecentActivity['status']) => {\n  return STATUS_BACKGROUNDS[status] || 'bg-gray-900/30 text-gray-400';\n};","import React from 'react';\nimport { TrendingUp, TrendingDown, Users, Mail, Eye, MessageCircle, Target, Clock } from 'lucide-react';\nimport { AutomationStats, AutomationConfig } from '../types/automation.types';\nimport { formatNumber, formatPercentage, getColorClasses, STAT_COLORS } from '../utils/automationUtils';\n\ninterface StatsGridProps {\n  stats: AutomationStats;\n  config: AutomationConfig;\n}\n\ninterface StatCard {\n  title: string;\n  value: string;\n  trend: number;\n  icon: React.ComponentType<{ className?: string }>;\n  color: keyof typeof STAT_COLORS;\n}\n\nexport const StatsGrid: React.FC<StatsGridProps> = ({ stats, config }) => {\n  const statCards: StatCard[] = [\n    {\n      title: 'Prospects ajoutés',\n      value: formatNumber(stats.prospectsAdded),\n      trend: stats.prospectsAddedTrend,\n      icon: Users,\n      color: 'blue'\n    },\n    {\n      title: 'E-mails envoyés',\n      value: formatNumber(stats.emailsSent),\n      trend: stats.emailsSentTrend,\n      icon: Mail,\n      color: 'green'\n    },\n    {\n      title: 'Taux d\\'ouverture',\n      value: formatPercentage(stats.openRate),\n      trend: stats.openRateTrend,\n      icon: Eye,\n      color: 'purple'\n    },\n    {\n      title: 'Taux de réponse',\n      value: formatPercentage(stats.responseRate),\n      trend: stats.responseRateTrend,\n      icon: MessageCircle,\n      color: 'orange'\n    },\n    {\n      title: 'Taux de conversion',\n      value: formatPercentage(stats.conversionRate),\n      trend: 0,\n      icon: Target,\n      color: 'red'\n    },\n    {\n      title: 'Séquences actives',\n      value: formatNumber(stats.activeSequences),\n      trend: 0,\n      icon: Clock,\n      color: 'indigo'\n    }\n  ];\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n      {statCards.map((stat, index) => {\n        const Icon = stat.icon;\n        const isPositiveTrend = stat.trend > 0;\n        const TrendIcon = isPositiveTrend ? TrendingUp : TrendingDown;\n        \n        return (\n          <div key={index} className=\"bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-xl p-6 hover:bg-gray-800/70 transition-all duration-200\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className={`p-3 rounded-lg bg-gradient-to-r ${getColorClasses(stat.color)}`}>\n                <Icon className=\"w-6 h-6\" />\n              </div>\n              {stat.trend !== 0 && (\n                <div className={`flex items-center space-x-1 text-sm ${\n                  isPositiveTrend ? 'text-green-400' : 'text-red-400'\n                }`}>\n                  <TrendIcon className=\"w-4 h-4\" />\n                  <span>{Math.abs(stat.trend)}%</span>\n                </div>\n              )}\n            </div>\n            <div>\n              <p className=\"text-2xl font-bold text-white mb-1\">{stat.value}</p>\n              <p className=\"text-gray-400 text-sm\">{stat.title}</p>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};","import React from 'react';\nimport { RefreshCw, Play, Clock } from 'lucide-react';\nimport { RecentActivity } from '../types/automation.types';\nimport { getActivityIcon, formatTimeAgo, getStatusColor, getStatusLabel, getStatusBackground } from '../utils/automationUtils';\n\ninterface RecentActivityPanelProps {\n  activities: RecentActivity[];\n  onUpdateScores: () => Promise<void>;\n  onStartCampaign: () => Promise<void>;\n}\n\nexport const RecentActivityPanel: React.FC<RecentActivityPanelProps> = ({\n  activities,\n  onUpdateScores,\n  onStartCampaign\n}) => {\n  const [isUpdatingScores, setIsUpdatingScores] = React.useState(false);\n  const [isStartingCampaign, setIsStartingCampaign] = React.useState(false);\n\n  const handleUpdateScores = async () => {\n    setIsUpdatingScores(true);\n    try {\n      await onUpdateScores();\n    } finally {\n      setIsUpdatingScores(false);\n    }\n  };\n\n  const handleStartCampaign = async () => {\n    setIsStartingCampaign(true);\n    try {\n      await onStartCampaign();\n    } finally {\n      setIsStartingCampaign(false);\n    }\n  };\n\n  return (\n    <div className=\"bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-xl p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h3 className=\"text-xl font-semibold text-white\">Activité récente</h3>\n        <div className=\"flex space-x-2\">\n          <button\n            onClick={handleUpdateScores}\n            disabled={isUpdatingScores}\n            className=\"flex items-center space-x-2 px-3 py-2 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-800 text-white rounded-lg transition-colors text-sm\"\n          >\n            <RefreshCw className={`w-4 h-4 ${isUpdatingScores ? 'animate-spin' : ''}`} />\n            <span>{isUpdatingScores ? 'Mise à jour...' : 'Actualiser'}</span>\n          </button>\n          <button\n            onClick={handleStartCampaign}\n            disabled={isStartingCampaign}\n            className=\"flex items-center space-x-2 px-3 py-2 bg-green-600 hover:bg-green-700 disabled:bg-green-800 text-white rounded-lg transition-colors text-sm\"\n          >\n            <Play className={`w-4 h-4 ${isStartingCampaign ? 'animate-pulse' : ''}`} />\n            <span>{isStartingCampaign ? 'Démarrage...' : 'Campagne'}</span>\n          </button>\n        </div>\n      </div>\n\n      <div className=\"space-y-4 max-h-96 overflow-y-auto\">\n        {activities.length === 0 ? (\n          <div className=\"text-center py-8\">\n            <Clock className=\"w-12 h-12 text-gray-600 mx-auto mb-3\" />\n            <p className=\"text-gray-400\">Aucune activité récente</p>\n          </div>\n        ) : (\n          activities.map((activity) => {\n            const activityIcon = getActivityIcon(activity.type);\n            \n            return (\n              <div key={activity.id} className=\"flex items-start space-x-3 p-3 bg-gray-900/30 rounded-lg\">\n                <div className={`p-2 rounded-lg bg-gray-700 ${getStatusColor(activity.status)}`}>\n                  <span className=\"text-sm\">{activityIcon}</span>\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <p className=\"text-white text-sm font-medium\">{activity.description}</p>\n                  <p className=\"text-gray-400 text-xs mt-1\">{formatTimeAgo(activity.timestamp)}</p>\n                </div>\n                <div className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusBackground(activity.status)}`}>\n                  {getStatusLabel(activity.status)}\n                </div>\n              </div>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n};","import React, { useState, useEffect } from 'react';\nimport { Settings, Save, Clock, Calendar, Target } from 'lucide-react';\nimport { AutomationConfig } from '../types/automation.types';\nimport { WORKING_DAYS_OPTIONS } from '../utils/automationUtils';\n\ninterface ConfigurationPanelProps {\n  config: AutomationConfig;\n  onUpdateConfig: (config: Partial<AutomationConfig>) => Promise<void>;\n}\n\nexport const ConfigurationPanel: React.FC<ConfigurationPanelProps> = ({\n  config,\n  onUpdateConfig\n}) => {\n  const [localConfig, setLocalConfig] = useState(config);\n  const [isSaving, setIsSaving] = useState(false);\n  const [hasChanges, setHasChanges] = useState(false);\n\n  // Synchroniser avec les changements de config externe\n  useEffect(() => {\n    setLocalConfig(config);\n    setHasChanges(false);\n  }, [config]);\n\n  const handleConfigChange = (field: keyof AutomationConfig, value: any) => {\n    setLocalConfig(prev => ({\n      ...prev,\n      [field]: value\n    }));\n    setHasChanges(true);\n  };\n\n  // Correction du typage pour éviter l'erreur TypeScript\n  const handleNestedConfigChange = (parent: string, field: string, value: any) => {\n    setLocalConfig(prev => {\n      const parentValue = prev[parent as keyof AutomationConfig];\n      \n      // Vérifier que la valeur parent est un objet avant de faire le spread\n      if (typeof parentValue === 'object' && parentValue !== null) {\n        return {\n          ...prev,\n          [parent]: {\n            ...parentValue,\n            [field]: value\n          }\n        };\n      }\n      \n      // Fallback si ce n'est pas un objet\n      return {\n        ...prev,\n        [parent]: {\n          [field]: value\n        }\n      };\n    });\n    setHasChanges(true);\n  };\n\n  const handleSave = async () => {\n    setIsSaving(true);\n    try {\n      await onUpdateConfig(localConfig);\n      setHasChanges(false);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const handleWorkingDaysChange = (dayValue: string, checked: boolean) => {\n    const newDays = checked\n      ? [...localConfig.workingDays, dayValue]\n      : localConfig.workingDays.filter(d => d !== dayValue);\n    handleConfigChange('workingDays', newDays);\n  };\n\n  return (\n    <div className=\"bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-xl p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <Settings className=\"w-6 h-6 text-blue-400\" />\n          <h3 className=\"text-xl font-semibold text-white\">Configuration</h3>\n        </div>\n        {hasChanges && (\n          <button\n            onClick={handleSave}\n            disabled={isSaving}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-green-600 hover:bg-green-700 disabled:bg-green-800 text-white rounded-lg transition-colors\"\n          >\n            <Save className={`w-4 h-4 ${isSaving ? 'animate-pulse' : ''}`} />\n            <span>{isSaving ? 'Sauvegarde...' : 'Sauvegarder'}</span>\n          </button>\n        )}\n      </div>\n\n      <div className=\"space-y-6\">\n        {/* Limites et délais */}\n        <div className=\"space-y-4\">\n          <h4 className=\"text-lg font-medium text-white flex items-center space-x-2\">\n            <Target className=\"w-5 h-5 text-blue-400\" />\n            <span>Limites et délais</span>\n          </h4>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Limite quotidienne d'e-mails\n              </label>\n              <input\n                type=\"number\"\n                value={localConfig.dailyLimit}\n                onChange={(e) => handleConfigChange('dailyLimit', parseInt(e.target.value) || 0)}\n                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                min=\"1\"\n                max=\"1000\"\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Délai de suivi (heures)\n              </label>\n              <input\n                type=\"number\"\n                value={localConfig.followUpDelay}\n                onChange={(e) => handleConfigChange('followUpDelay', parseInt(e.target.value) || 0)}\n                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                min=\"1\"\n                max=\"168\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Heures de travail */}\n        <div className=\"space-y-4\">\n          <h4 className=\"text-lg font-medium text-white flex items-center space-x-2\">\n            <Clock className=\"w-5 h-5 text-blue-400\" />\n            <span>Heures de travail</span>\n          </h4>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Heure de début\n              </label>\n              <input\n                type=\"time\"\n                value={localConfig.workingHours.start}\n                onChange={(e) => handleNestedConfigChange('workingHours', 'start', e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Heure de fin\n              </label>\n              <input\n                type=\"time\"\n                value={localConfig.workingHours.end}\n                onChange={(e) => handleNestedConfigChange('workingHours', 'end', e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Jours de travail */}\n        <div className=\"space-y-4\">\n          <h4 className=\"text-lg font-medium text-white flex items-center space-x-2\">\n            <Calendar className=\"w-5 h-5 text-blue-400\" />\n            <span>Jours de travail</span>\n          </h4>\n          \n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\n            {WORKING_DAYS_OPTIONS.map((day) => (\n              <label key={day.value} className=\"flex items-center space-x-2 cursor-pointer\">\n                <input\n                  type=\"checkbox\"\n                  checked={localConfig.workingDays.includes(day.value)}\n                  onChange={(e) => handleWorkingDaysChange(day.value, e.target.checked)}\n                  className=\"w-4 h-4 text-blue-600 bg-gray-700 border-gray-600 rounded focus:ring-blue-500\"\n                />\n                <span className=\"text-sm text-gray-300\">{day.label}</span>\n              </label>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};","import { Bot, Play, Pause, RefreshCw, AlertTriangle } from 'lucide-react';\nimport { useAutomationDashboard } from './hooks/useAutomationDashboard';\nimport { SystemHealthIndicator } from './components/SystemHealthIndicator';\nimport { StatsGrid } from './components/StatsGrid';\nimport { RecentActivityPanel } from './components/RecentActivityPanel';\nimport { ConfigurationPanel } from './components/ConfigurationPanel';\n\nexport default function AutomationDashboard() {\n  const {\n    stats,\n    recentActivity,\n    config,\n    isLoading,\n    isSyncing,\n    systemHealth,\n    isActive,\n    error,\n    toggleAutomation,\n    updateConfig,\n    updateScores,\n    syncWithN8n,\n    startProspectionCampaign\n  } = useAutomationDashboard();\n\n  if (isLoading || !config) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <RefreshCw className=\"w-8 h-8 animate-spin text-blue-400\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Afficher les erreurs */}\n      {error && (\n        <div className=\"bg-red-900/20 border border-red-500/30 rounded-xl p-4\">\n          <div className=\"flex items-center space-x-2\">\n            <AlertTriangle className=\"w-5 h-5 text-red-400\" />\n            <span className=\"text-red-300\">{error}</span>\n          </div>\n        </div>\n      )}\n\n      {/* Indicateur de santé système */}\n      <SystemHealthIndicator systemHealth={systemHealth} />\n\n      {/* Header avec contrôles */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"p-3 bg-gradient-to-r from-purple-600 to-blue-600 rounded-xl\">\n            <Bot className=\"w-8 h-8 text-white\" />\n          </div>\n          <div>\n            <h2 className=\"text-3xl font-bold text-white\">Automation Dashboard</h2>\n            <p className=\"text-gray-400\">Pilotez votre prospection automatisée avec n8n</p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-4\">\n          {/* Indicateur de statut */}\n          <div className={`flex items-center space-x-2 px-4 py-2 rounded-lg ${\n            isActive ? 'bg-green-900/20 border border-green-500/30' : 'bg-red-900/20 border border-red-500/30'\n          }`}>\n            <div className={`w-2 h-2 rounded-full ${isActive ? 'bg-green-400' : 'bg-red-400'}`} />\n            <span className={`text-sm font-medium ${isActive ? 'text-green-300' : 'text-red-300'}`}>\n              {isActive ? 'Actif' : 'Inactif'}\n            </span>\n          </div>\n          \n          {/* Bouton de synchronisation */}\n          <button\n            onClick={syncWithN8n}\n            disabled={isSyncing}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-800 text-white rounded-lg transition-colors\"\n          >\n            <RefreshCw className={`w-4 h-4 ${isSyncing ? 'animate-spin' : ''}`} />\n            <span>{isSyncing ? 'Sync...' : 'Sync n8n'}</span>\n          </button>\n          \n          {/* Bouton principal */}\n          <button\n            onClick={toggleAutomation}\n            disabled={isLoading}\n            className={`flex items-center space-x-2 px-6 py-3 rounded-xl font-medium transition-all duration-200 disabled:opacity-50 ${\n              isActive\n                ? 'bg-red-600 hover:bg-red-700 text-white'\n                : 'bg-green-600 hover:bg-green-700 text-white'\n            }`}\n          >\n            {isActive ? <Pause className=\"w-5 h-5\" /> : <Play className=\"w-5 h-5\" />}\n            <span>{isActive ? 'Suspendre' : 'Activer'}</span>\n          </button>\n        </div>\n      </div>\n\n      {/* Grille des statistiques */}\n      {stats && <StatsGrid stats={stats} config={config} />}\n\n      {/* Panneaux d'activité et configuration */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        <RecentActivityPanel \n          activities={recentActivity} \n          onUpdateScores={updateScores}\n          onStartCampaign={startProspectionCampaign}\n        />\n        <ConfigurationPanel \n          config={config} \n          onUpdateConfig={updateConfig} \n        />\n      </div>\n    </div>\n  );\n}","import { useState, useEffect } from 'react';\nimport { ProspectApiService } from '../../lib/prospectApiService';\nimport { type ProspectSearchCriteria } from '../../lib/types/hunterTypes';\nimport useProspectionStore, { type Prospect } from '../../stores/prospectionStore';\nimport { useErrorStore } from '../../stores/errorStore';\nimport { Search, Download, Zap, RefreshCw } from 'lucide-react';\n\n// Interface pour typer les prospects retournés par l'API (étendue)\ninterface ProspectData {\n  email: string;\n  first_name?: string;\n  last_name?: string;\n  company_name?: string;\n  position?: string;\n  source?: string;\n  status?: Prospect['status'];\n  lead_score?: number;\n  // Nouvelles propriétés enrichies\n  company_industry?: string;\n  company_size?: string;\n  company_location?: string;\n}\n\n// Interface pour les options dynamiques\ninterface FilterOptions {\n  industries: Array<{ value: string; label: string }>;\n  locations: Array<{ value: string; label: string }>;\n  companySizes: Array<{ value: string; label: string }>;\n}\n\nconst AutoProspectionPanel = () => {\n  const { saveProspect } = useProspectionStore();\n  const { handleSuccess, handleError } = useErrorStore();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadingOptions, setIsLoadingOptions] = useState(true);\n  const [criteria, setCriteria] = useState<ProspectSearchCriteria>({\n    limit: 25,\n    quickFilters: {\n      industry: '',\n      location: '',\n      companySize: ''\n    }\n  });\n  const [previewProspects, setPreviewProspects] = useState<ProspectData[]>([]);\n  const [showPreview, setShowPreview] = useState(false);\n  const [filterOptions, setFilterOptions] = useState<FilterOptions>({\n    industries: [],\n    locations: [],\n    companySizes: []\n  });\n\n  // Chargement des options dynamiques au montage du composant\n  useEffect(() => {\n    loadFilterOptions();\n  }, []);\n\n  const loadFilterOptions = async () => {\n    setIsLoadingOptions(true);\n    try {\n      // Initialisation du service pour charger les mappings\n      await ProspectApiService.initialize();\n      \n      // Options de fallback basées sur les mappings par défaut du service\n      setFilterOptions({\n        industries: [\n          { value: 'music', label: 'Musique' },\n          { value: 'media', label: 'Médias' },\n          { value: 'advertising', label: 'Publicité' },\n          { value: 'luxury', label: 'Luxe' },\n          { value: 'sports', label: 'Sports' }\n        ],\n        locations: [\n          { value: 'france', label: 'France' },\n          { value: 'europe', label: 'Europe' },\n          { value: 'international', label: 'International' }\n        ],\n        companySizes: [\n          { value: 'startup', label: '1-10 employés' },\n          { value: 'small', label: '11-50 employés' },\n          { value: 'medium', label: '51-200 employés' },\n          { value: 'large', label: '200+ employés' }\n        ]\n      });\n    } catch (error) {\n      console.error('Erreur lors du chargement des options:', error);\n      handleError('Erreur de configuration', 'Impossible de charger les options de filtrage');\n    } finally {\n      setIsLoadingOptions(false);\n    }\n  };\n\n  const handleSearch = async () => {\n    setIsLoading(true);\n    try {\n      const prospects = await ProspectApiService.fetchProspects(criteria);\n  \n      const transformedProspects: ProspectData[] = prospects.map(prospect => ({\n        email: prospect.email,\n        first_name: prospect.first_name,\n        last_name: prospect.last_name,\n        company_name: prospect.company,\n        position: prospect.position,\n        source: 'api_import',\n        status: 'new' as Prospect['status'],\n        lead_score: prospect.score || 50,\n        company_industry: prospect.industry,\n        company_size: prospect.company_size,\n        company_location: prospect.company\n      }));\n  \n      setPreviewProspects(transformedProspects);\n      setShowPreview(true);\n      handleSuccess(`${transformedProspects.length} prospects trouvés`);\n    } catch (error: unknown) {\n      const errorMessage = error instanceof Error ? error.message : 'Erreur inconnue';\n      handleError('Erreur lors de la recherche', errorMessage);\n      console.error('Détails de l\\'erreur:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleImport = async (selectedProspects: ProspectData[]) => {\n    setIsLoading(true);\n    try {\n      for (const prospect of selectedProspects) {\n        const prospectToSave: Partial<Prospect> = {\n          email: prospect.email,\n          first_name: prospect.first_name,\n          last_name: prospect.last_name,\n          company_name: prospect.company_name,\n          position: prospect.position,\n          source: prospect.source || 'api_import',\n          status: prospect.status || 'new',\n          lead_score: prospect.lead_score || 50,\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        };\n        \n        await saveProspect(prospectToSave);\n      }\n      handleSuccess(`${selectedProspects.length} prospects importés avec succès`);\n      setShowPreview(false);\n      setPreviewProspects([]);\n    } catch (error: unknown) {\n      const errorMessage = error instanceof Error ? error.message : 'Erreur inconnue';\n      handleError('Erreur lors de l\\'importation', errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Suppression de handleRefreshOptions car elle fait doublon avec loadFilterOptions\n\n  if (isLoadingOptions) {\n    return (\n      <div className=\"bg-gray-800/50 backdrop-blur-sm rounded-2xl border border-gray-700/50 p-6\">\n        <div className=\"flex items-center justify-center py-12\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-6 h-6 border-2 border-purple-600 border-t-transparent rounded-full animate-spin\" />\n            <span className=\"text-gray-400\">Chargement des options...</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-gray-800/50 backdrop-blur-sm rounded-2xl border border-gray-700/50 p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"p-2 bg-gradient-to-r from-purple-600 to-blue-600 rounded-lg\">\n            <Zap className=\"w-5 h-5 text-white\" />\n          </div>\n          <div>\n            <h3 className=\"text-xl font-bold text-white\">Prospection Automatisée</h3>\n            <p className=\"text-gray-400 text-sm\">Importez des prospects via APIs publiques</p>\n          </div>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={loadFilterOptions}\n            className=\"p-2 text-gray-400 hover:text-white transition-colors\"\n            title=\"Actualiser les options\"\n          >\n            <RefreshCw className=\"w-4 h-4\" />\n          </button>\n          <span className=\"text-xs text-green-400 bg-green-900/20 px-2 py-1 rounded-full\">\n            APIs Dynamiques\n          </span>\n        </div>\n      </div>\n\n      {/* Critères de recherche */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n            Industrie\n          </label>\n          <select\n            value={criteria.quickFilters?.industry || ''}\n            onChange={(e) => setCriteria({\n              ...criteria,\n              quickFilters: {\n                ...criteria.quickFilters,\n                industry: e.target.value || undefined\n              }\n            })}\n            className=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-3 py-2 text-white\"\n          >\n            <option value=\"\">Toutes les industries</option>\n            {filterOptions.industries.map(option => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n            Localisation\n          </label>\n          <select\n            value={criteria.quickFilters?.location || ''}\n            onChange={(e) => setCriteria({\n              ...criteria,\n              quickFilters: {\n                ...criteria.quickFilters,\n                location: e.target.value || undefined\n              }\n            })}\n            className=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-3 py-2 text-white\"\n          >\n            <option value=\"\">Toutes les localisations</option>\n            {filterOptions.locations.map(option => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n            Taille d'entreprise\n          </label>\n          <select\n            value={criteria.quickFilters?.companySize || ''}\n            onChange={(e) => setCriteria({\n              ...criteria,\n              quickFilters: {\n                ...criteria.quickFilters,\n                companySize: e.target.value || undefined\n              }\n            })}\n            className=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-3 py-2 text-white\"\n          >\n            <option value=\"\">Toutes les tailles</option>\n            {filterOptions.companySizes.map(option => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n            Limite\n          </label>\n          <select\n            value={criteria.limit}\n            onChange={(e) => setCriteria({...criteria, limit: parseInt(e.target.value)})}\n            className=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-3 py-2 text-white\"\n          >\n            <option value={10}>10 prospects</option>\n            <option value={25}>25 prospects</option>\n            <option value={50}>50 prospects</option>\n            <option value={100}>100 prospects</option>\n          </select>\n        </div>\n      </div>\n\n      {/* Champs de recherche avancée */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n            Mots-clés (optionnel)\n          </label>\n          <input\n            type=\"text\"\n            value={criteria.keywords?.join(', ') || ''}\n            onChange={(e) => setCriteria({\n              ...criteria,\n              keywords: e.target.value ? e.target.value.split(',').map(k => k.trim()) : undefined\n            })}\n            placeholder=\"Ex: marketing, design, startup...\"\n            className=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-3 py-2 text-white placeholder-gray-400\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n            Nom d'entreprise (optionnel)\n          </label>\n          <input\n            type=\"text\"\n            value={criteria.companyName || ''}\n            onChange={(e) => setCriteria({\n              ...criteria,\n              companyName: e.target.value || undefined\n            })}\n            placeholder=\"Ex: Google, Microsoft...\"\n            className=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-3 py-2 text-white placeholder-gray-400\"\n          />\n        </div>\n      </div>\n\n      {/* Recherche en langage naturel */}\n      <div className=\"mb-6\">\n        <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n          Recherche en langage naturel (optionnel)\n        </label>\n        <textarea\n          value={criteria.naturalLanguageQuery || ''}\n          onChange={(e) => setCriteria({\n            ...criteria,\n            naturalLanguageQuery: e.target.value || undefined\n          })}\n          placeholder=\"Ex: Startups françaises dans le domaine de la tech avec moins de 50 employés...\"\n          rows={3}\n          className=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-3 py-2 text-white placeholder-gray-400 resize-none\"\n        />\n      </div>\n\n      {/* Actions */}\n      <div className=\"flex items-center justify-between\">\n        <button\n          onClick={handleSearch}\n          disabled={isLoading}\n          className=\"flex items-center space-x-2 bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 disabled:opacity-50 text-white px-6 py-3 rounded-lg font-medium transition-all\"\n        >\n          {isLoading ? (\n            <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n          ) : (\n            <Search className=\"w-4 h-4\" />\n          )}\n          <span>{isLoading ? 'Recherche...' : 'Rechercher des Prospects'}</span>\n        </button>\n\n        <div className=\"text-sm text-gray-400\">\n          Recherche dynamique via APIs configurables\n        </div>\n      </div>\n\n      {/* Prévisualisation */}\n      {showPreview && (\n        <ProspectPreview\n          prospects={previewProspects}\n          onImport={handleImport}\n          onCancel={() => setShowPreview(false)}\n          isLoading={isLoading}\n        />\n      )}\n    </div>\n  );\n};\n\ninterface ProspectPreviewProps {\n  prospects: ProspectData[];\n  onImport: (selected: ProspectData[]) => void;\n  onCancel: () => void;\n  isLoading: boolean;\n}\n\nconst ProspectPreview = ({ prospects, onImport, onCancel, isLoading }: ProspectPreviewProps) => {\n  const [selectedProspects, setSelectedProspects] = useState<ProspectData[]>(prospects);\n\n  const toggleProspect = (prospect: ProspectData) => {\n    setSelectedProspects(prev => \n      prev.includes(prospect) \n        ? prev.filter(p => p !== prospect)\n        : [...prev, prospect]\n    );\n  };\n\n  return (\n    <div className=\"mt-6 border-t border-gray-700 pt-6\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h4 className=\"text-lg font-semibold text-white\">\n          Prévisualisation ({prospects.length} prospects trouvés)\n        </h4>\n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={() => setSelectedProspects(prospects)}\n            className=\"text-sm text-blue-400 hover:text-blue-300\"\n          >\n            Tout sélectionner\n          </button>\n          <button\n            onClick={() => setSelectedProspects([])}\n            className=\"text-sm text-gray-400 hover:text-gray-300\"\n          >\n            Tout désélectionner\n          </button>\n        </div>\n      </div>\n\n      <div className=\"max-h-96 overflow-y-auto space-y-2 mb-4\">\n        {prospects.map((prospect, index) => (\n          <div\n            key={`${prospect.email}-${index}`}\n            className={`p-3 rounded-lg border cursor-pointer transition-all ${\n              selectedProspects.includes(prospect)\n                ? 'bg-blue-900/20 border-blue-500/50'\n                : 'bg-gray-700/30 border-gray-600 hover:border-gray-500'\n            }`}\n            onClick={() => toggleProspect(prospect)}\n          >\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <div className=\"font-medium text-white\">\n                  {prospect.first_name} {prospect.last_name}\n                </div>\n                <div className=\"text-sm text-gray-400\">\n                  {prospect.position} chez {prospect.company_name}\n                </div>\n                <div className=\"text-xs text-gray-500\">{prospect.email}</div>\n                {/* Affichage des données enrichies */}\n                {(prospect.company_industry || prospect.company_size || prospect.company_location) && (\n                  <div className=\"flex items-center space-x-2 mt-1\">\n                    {prospect.company_industry && (\n                      <span className=\"text-xs bg-purple-900/20 text-purple-400 px-2 py-1 rounded-full\">\n                        {prospect.company_industry}\n                      </span>\n                    )}\n                    {prospect.company_size && (\n                      <span className=\"text-xs bg-blue-900/20 text-blue-400 px-2 py-1 rounded-full\">\n                        {prospect.company_size}\n                      </span>\n                    )}\n                    {prospect.company_location && (\n                      <span className=\"text-xs bg-green-900/20 text-green-400 px-2 py-1 rounded-full\">\n                        {prospect.company_location}\n                      </span>\n                    )}\n                  </div>\n                )}\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-xs bg-green-900/20 text-green-400 px-2 py-1 rounded-full\">\n                  Score: {prospect.lead_score}\n                </span>\n                <input\n                  type=\"checkbox\"\n                  checked={selectedProspects.includes(prospect)}\n                  onChange={() => toggleProspect(prospect)}\n                  className=\"w-4 h-4 text-blue-600 bg-gray-700 border-gray-600 rounded\"\n                />\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"flex items-center justify-between\">\n        <div className=\"text-sm text-gray-400\">\n          {selectedProspects.length} prospects sélectionnés\n        </div>\n        <div className=\"flex items-center space-x-3\">\n          <button\n            onClick={onCancel}\n            className=\"px-4 py-2 text-gray-400 hover:text-white transition-colors\"\n          >\n            Annuler\n          </button>\n          <button\n            onClick={() => onImport(selectedProspects)}\n            disabled={selectedProspects.length === 0 || isLoading}\n            className=\"flex items-center space-x-2 bg-green-600 hover:bg-green-700 disabled:opacity-50 text-white px-6 py-2 rounded-lg font-medium transition-all\"\n          >\n            {isLoading ? (\n              <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n            ) : (\n              <Download className=\"w-4 h-4\" />\n            )}\n            <span>Importer {selectedProspects.length} prospects</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AutoProspectionPanel;\n","import { useState, useEffect } from 'react';\nimport useProspectionStore from '../../stores/prospectionStore';\nimport ProspectsList from './ProspectsList';\nimport ProspectForm from './ProspectForm';\nimport ProspectDetails from './ProspectDetails';\nimport EmailCampaign from './EmailCampaign';\nimport EmailStatsDashboard from './EmailStatsDashboard';\nimport TemplateManager from './TemplateManager';\nimport AutomationDashboard from '../admin/AutomationDashboard';\nimport { \n  Users, Mail, BarChart3, FileText, Menu, X, \n  TrendingUp, Target, Zap, Bell, Bot \n} from 'lucide-react';\nimport AutoProspectionPanel from './AutoProspectionPanel';\n\ntype ActiveTab = 'list' | 'form' | 'details' | 'campaign' | 'stats' | 'templates' | 'template-form' | 'automation' | 'import';\n\nconst ProspectionDashboard = () => {\n  const { loadProspects, prospects } = useProspectionStore();\n  const [activeTab, setActiveTab] = useState<ActiveTab>('list');\n  const [selectedProspectId, setSelectedProspectId] = useState<string | null>(null);\n  const [editingProspectId, setEditingProspectId] = useState<string | null>(null);\n  const [editingTemplateId, setEditingTemplateId] = useState<string | null>(null);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  useEffect(() => {\n    loadProspects();\n  }, [loadProspects]);\n\n  const handleViewDetails = (prospectId: string) => {\n    setSelectedProspectId(prospectId);\n    setActiveTab('details');\n  };\n\n  const handleEditProspect = (prospectId: string) => {\n    setEditingProspectId(prospectId);\n    setActiveTab('form');\n  };\n\n  const handleAddProspect = () => {\n    setEditingProspectId(null);\n    setActiveTab('form');\n  };\n\n  const handleCloseForm = () => {\n    setEditingProspectId(null);\n    setActiveTab('list');\n  };\n\n  const handleCloseDetails = () => {\n    setSelectedProspectId(null);\n    setActiveTab('list');\n  };\n\n  const handleEditFromDetails = () => {\n    if (selectedProspectId) {\n      setEditingProspectId(selectedProspectId);\n      setActiveTab('form');\n    }\n  };\n\n  const handleAddTemplate = () => {\n    setEditingTemplateId(null);\n    setActiveTab('template-form');\n  };\n\n  const handleEditTemplate = (templateId: string) => {\n    setEditingTemplateId(templateId);\n    setActiveTab('template-form');\n  };\n\n  const handleCloseTemplateForm = () => {\n    setEditingTemplateId(null);\n    setActiveTab('templates');\n  };\n\n  const handleTabChange = (tabId: ActiveTab) => {\n    setActiveTab(tabId);\n    setIsMobileMenuOpen(false);\n  };\n\n  const tabs = [\n    { id: 'list', label: 'Prospects', icon: Users },\n    { id: 'import', label: 'Import Auto', icon: Zap }, // Nouveau tab\n    { id: 'campaign', label: 'Campagnes', icon: Mail },\n    { id: 'stats', label: 'Statistiques', icon: BarChart3 },\n    { id: 'templates', label: 'Templates', icon: FileText },\n    { id: 'automation', label: 'Automation', icon: Bot },\n  ];\n\n  // Calculer les notifications de suivi\n  const upcomingFollowUps = prospects.filter(p => {\n    if (!p.next_follow_up) return false;\n    const followUpDate = new Date(p.next_follow_up);\n    const today = new Date();\n    return followUpDate <= today;\n  });\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-black to-gray-900 pt-20\">\n      <div className=\"container mx-auto px-4 py-4 sm:py-8\">\n        {/* Header amélioré */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"p-3 bg-gradient-to-r from-blue-600 to-purple-600 rounded-xl\">\n                <Target className=\"w-8 h-8 text-white\" />\n              </div>\n              <div>\n                <h1 className=\"text-3xl sm:text-4xl font-bold bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent\">\n                  Prospection Hub\n                </h1>\n                <p className=\"text-gray-400 text-sm sm:text-base mt-1\">\n                  Gérez vos prospects avec intelligence et efficacité\n                </p>\n              </div>\n            </div>\n            \n            {/* Notifications */}\n            {upcomingFollowUps.length > 0 && (\n              <div className=\"hidden md:flex items-center space-x-2 bg-orange-900/20 border border-orange-500/30 rounded-lg px-4 py-2\">\n                <Bell className=\"w-5 h-5 text-orange-400\" />\n                <span className=\"text-orange-300 text-sm\">\n                  {upcomingFollowUps.length} suivi{upcomingFollowUps.length > 1 ? 's' : ''} en attente\n                </span>\n              </div>\n            )}\n            \n            {/* Menu burger mobile */}\n            <button\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n              className=\"md:hidden p-3 rounded-xl bg-gray-800 text-gray-300 hover:text-white hover:bg-gray-700 transition-all duration-200\"\n            >\n              {isMobileMenuOpen ? <X className=\"w-6 h-6\" /> : <Menu className=\"w-6 h-6\" />}\n            </button>\n          </div>\n\n          {/* Métriques rapides */}\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n            <div className=\"bg-gradient-to-r from-blue-600/20 to-blue-800/20 border border-blue-500/30 rounded-xl p-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-blue-300 text-sm font-medium\">Total Prospects</p>\n                  <p className=\"text-2xl font-bold text-white\">{prospects.length}</p>\n                </div>\n                <Users className=\"w-8 h-8 text-blue-400\" />\n              </div>\n            </div>\n            \n            <div className=\"bg-gradient-to-r from-green-600/20 to-green-800/20 border border-green-500/30 rounded-xl p-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-green-300 text-sm font-medium\">Qualifiés</p>\n                  <p className=\"text-2xl font-bold text-white\">\n                    {prospects.filter(p => p.status === 'qualified').length}\n                  </p>\n                </div>\n                <TrendingUp className=\"w-8 h-8 text-green-400\" />\n              </div>\n            </div>\n            \n            <div className=\"bg-gradient-to-r from-purple-600/20 to-purple-800/20 border border-purple-500/30 rounded-xl p-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-purple-300 text-sm font-medium\">Gagnés</p>\n                  <p className=\"text-2xl font-bold text-white\">\n                    {prospects.filter(p => p.status === 'closed_won').length}\n                  </p>\n                </div>\n                <Target className=\"w-8 h-8 text-purple-400\" />\n              </div>\n            </div>\n            \n            <div className=\"bg-gradient-to-r from-orange-600/20 to-orange-800/20 border border-orange-500/30 rounded-xl p-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-orange-300 text-sm font-medium\">Score Moyen</p>\n                  <p className=\"text-2xl font-bold text-white\">\n                    {prospects.length > 0 \n                      ? Math.round(prospects.reduce((acc, p) => acc + (p.lead_score || 0), 0) / prospects.length)\n                      : 0\n                    }\n                  </p>\n                </div>\n                <Zap className=\"w-8 h-8 text-orange-400\" />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Navigation améliorée */}\n        {(activeTab === 'list' || activeTab === 'campaign' || activeTab === 'stats' || activeTab === 'templates' || activeTab === 'automation' || activeTab === 'import') && (\n          <>\n            {/* Navigation desktop */}\n            <div className=\"hidden md:flex space-x-2 mb-8 bg-gray-800/50 backdrop-blur-sm p-2 rounded-2xl border border-gray-700/50\">\n              {tabs.map(tab => {\n                const Icon = tab.icon;\n                const isActive = activeTab === tab.id;\n                return (\n                  <button\n                    key={tab.id}\n                    onClick={() => handleTabChange(tab.id as ActiveTab)}\n                    className={`flex items-center space-x-3 px-6 py-3 rounded-xl transition-all duration-200 font-medium ${\n                      isActive\n                        ? 'bg-blue-600 text-white shadow-lg'\n                        : 'text-gray-400 hover:text-white hover:bg-gray-700/50'\n                    }`}\n                  >\n                    <Icon className=\"w-5 h-5\" />\n                    <span>{tab.label}</span>\n                    {tab.id === 'automation' && (\n                      <span className=\"bg-green-500 text-xs px-2 py-1 rounded-full\">NEW</span>\n                    )}\n                  </button>\n                );\n              })}\n            </div>\n\n            {/* Navigation mobile */}\n            {isMobileMenuOpen && (\n              <div className=\"md:hidden mb-6 bg-gray-800/95 backdrop-blur-sm rounded-2xl border border-gray-700/50 overflow-hidden\">\n                <div className=\"p-2 space-y-1\">\n                  {tabs.map(tab => {\n                    const Icon = tab.icon;\n                    const isActive = activeTab === tab.id;\n                    return (\n                      <button\n                        key={tab.id}\n                        onClick={() => handleTabChange(tab.id as ActiveTab)}\n                        className={`w-full flex items-center justify-between px-4 py-4 rounded-xl text-left transition-all duration-200 ${\n                          isActive\n                            ? 'bg-blue-600 text-white'\n                            : 'text-gray-300 hover:text-white hover:bg-gray-700/50'\n                        }`}\n                      >\n                        <div className=\"flex items-center space-x-4\">\n                          <Icon className=\"w-6 h-6\" />\n                          <span className=\"font-medium\">{tab.label}</span>\n                        </div>\n                        {tab.id === 'automation' && (\n                          <span className=\"bg-green-500 text-xs px-2 py-1 rounded-full\">NEW</span>\n                        )}\n                      </button>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n          </>\n        )}\n\n        {/* Contenu principal */}\n        <div className=\"bg-gray-800/30 backdrop-blur-sm rounded-2xl border border-gray-700/50 overflow-hidden\">\n          <div className=\"p-6\">\n            {activeTab === 'list' && (\n              <div>\n                <ProspectsList\n                  onViewDetails={handleViewDetails}\n                  onEditProspect={handleEditProspect}\n                  onAddProspect={handleAddProspect}\n                />\n              </div>\n            )}\n            \n            {activeTab === 'import' && (\n              <div>\n                <div className=\"mb-6\">\n                  <h2 className=\"text-2xl font-bold text-white mb-2\">\n                    Prospection Automatisée\n                  </h2>\n                  <p className=\"text-gray-400\">\n                    Importez automatiquement des prospects qualifiés via des APIs publiques gratuites\n                  </p>\n                </div>\n                <AutoProspectionPanel />\n              </div>\n            )}\n            \n            {activeTab === 'form' && (\n              <div className=\"p-6\">\n                <div className=\"mb-6\">\n                  <h2 className=\"text-2xl font-bold text-white mb-2\">\n                    {editingProspectId ? 'Modifier le prospect' : 'Ajouter un prospect'}\n                  </h2>\n                  <p className=\"text-gray-400\">\n                    {editingProspectId ? 'Mettez à jour les informations du prospect' : 'Créez un nouveau prospect dans votre pipeline'}\n                  </p>\n                </div>\n                <ProspectForm\n                  prospectId={editingProspectId || undefined}\n                  onClose={handleCloseForm}\n                />\n              </div>\n            )}\n            \n            {activeTab === 'details' && selectedProspectId && (\n              <div className=\"p-6\">\n                <ProspectDetails\n                  prospectId={selectedProspectId}\n                  onClose={handleCloseDetails}\n                  onEdit={handleEditFromDetails}\n                />\n              </div>\n            )}\n            \n            {activeTab === 'campaign' && (\n              <div className=\"p-6\">\n                <EmailCampaign />\n              </div>\n            )}\n            \n            {activeTab === 'stats' && (\n              <div className=\"p-6\">\n                <EmailStatsDashboard />\n              </div>\n            )}\n            \n            {activeTab === 'templates' && (\n              <div className=\"p-6\">\n                <TemplateManager \n                  activeTab=\"list\"\n                  onTabChange={(tab) => {\n                    if (tab === 'form') {\n                      setActiveTab('template-form');\n                    }\n                  }}\n                  onEditTemplate={handleEditTemplate}\n                  onAddTemplate={handleAddTemplate}\n                />\n              </div>\n            )}\n            \n            {activeTab === 'template-form' && (\n              <div className=\"p-6\">\n                <TemplateManager \n                  activeTab=\"form\"\n                  editingTemplateId={editingTemplateId}\n                  onCloseForm={handleCloseTemplateForm}\n                />\n              </div>\n            )}\n\n            {activeTab === 'automation' && (\n              <div className=\"p-6\">\n                <AutomationDashboard />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProspectionDashboard;"],"names":["BarChart3","createLucideIcon","Bell","Bot","Building","Copy","Download","Eye","FileText","Filter","Globe","History","Linkedin","MessageSquare","MousePointer","Pause","Phone","RefreshCw","Search","SquarePen","Square","Tag","Target","TrendingDown","WifiOff","Wifi","Zap","STATUS_CONFIG","ProspectsList","onViewDetails","onEditProspect","onAddProspect","prospects","loading","deleteProspect","useProspectionStore","handleError","handleSuccess","useErrorStore","searchTerm","setSearchTerm","useState","statusFilter","setStatusFilter","currentPage","setCurrentPage","itemsPerPage","handleDelete","useCallback","prospectId","companyName","newTotalPages","error","filteredProspects","useMemo","prospect","searchLower","fullName","matchesSearch","matchesStatus","totalPages","paginatedProspects","startIndex","handleSearchChange","value","handleStatusFilterChange","getStatusConfig","status","jsx","jsxs","Plus","e","key","config","statusConfig","Edit","Trash2","ChevronLeft","ChevronRight","ProspectForm","onClose","saveProspect","formData","setFormData","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","p","validateForm","newErrors","emailRegex","handleInputChange","field","prev","handleSubmit","trimmedData","handleCancel","User","X","Mail","emailSequences","startEmailSequence","sequenceId","sequence","s","now","scheduledEmails","step","supabase","stopEmailSequence","EMAIL_STATUS_COLORS","ProspectDetails","onEdit","calculateDetailedLeadScore","enrichProspectData","emailHistory","setEmailHistory","prospectMetrics","setProspectMetrics","activeSequences","setActiveSequences","isLoadingHistory","setIsLoadingHistory","newNote","setNewNote","isAddingNote","setIsAddingNote","selectedSequence","setSelectedSequence","isStartingSequence","setIsStartingSequence","getContactName","getEmailStatusColor","getScoreColor","score","getRiskColor","risk","loadEmailHistory","data","calculateMetrics","emailData","emailsSent","emailsOpened","emailsResponded","responseRate","openRate","lastContact","daysSinceLastContact","leadScoreObj","leadScore","conversionProbability","churnRisk","loadProspectMetrics","emails","metrics","loadActiveSequences","sequences","d","enrichProspectIfNeeded","handleStatusChange","handleAddNote","currentNotes","timestamp","updatedNotes","handleStartSequence","handleStopSequence","availableSequences","seq","AlertTriangle","Calendar","format","fr","Play","email","isValidEmail","compileTemplate","template","variables","compiledSubject","compiledContent","regex","generateUnsubscribeLink","generateEmailVariables","EmailService","to","subject","body","templateId","campaignId","errorUtils","response","result","messageId","useEmailTemplates","templates","setTemplates","setLoading","loadTemplates","templateKey","t","useEmailSender","sending","setSending","sendResults","setSendResults","sendEmailToProspect","compiledEmail","success","EmailCampaign","getTemplate","sendBulkEmails","selectedTemplate","setSelectedTemplate","selectedProspects","setSelectedProspects","previewEmail","setPreviewEmail","availableProspects","handlePreview","handleSend","selectedProspectObjects","toggleProspectSelection","id","EmailStatsDashboard","stats","setStats","recentEmails","setRecentEmails","isLoading","setIsLoading","dateRange","setDateRange","loadStats","dateFilter","statusCounts","acc","total_sent","total_delivered","total_opened","total_clicked","total_bounced","total_complained","loadRecentEmails","formattedData","_b","_a","err","getStatusColor","Fragment","TrendingUp","TemplateManager","externalActiveTab","onTabChange","externalEditingTemplateId","onCloseForm","handleWarning","internalActiveTab","setInternalActiveTab","internalEditingTemplateId","setInternalEditingTemplateId","activeTab","editingTemplateId","handleEditTemplate","handleAddTemplate","handleCloseForm","saving","setSaving","previewTemplate","setPreviewTemplate","isPreviewOpen","setIsPreviewOpen","extractVariables","content","variableRegex","match","variableName","updateVariables","detectedVariables","handleVariableChange","categories","priorities","handleNameChange","name","handleSubjectChange","handleContentChange","handleCategoryChange","handlePriorityChange","handleSaveTemplate","templateData","handleDeleteTemplate","templateName","handleDuplicateTemplate","duplicatedTemplate","handlePreviewTemplate","filteredTemplates","category","priority","AlertCircle","Save","N8nService","__publicField","input","init","timeoutMs","controller","resp","payload","text","json","workflowId","opts","signature","errText","actions","isActive","n8nService","SupabaseService","prospectData","segmentId","prospectIds","project","artist","services","servicesError","features","featuresError","service","f","total","qualified","thisMonth","monthlyProspects","password","user","isAdmin","session","callback","supabaseService","defaultConfig","useAutomationStore","create","set","get","supabaseConfig","mergedConfig","persistedConfig","rawConfig","finalConfig","configUpdate","newConfig","newState","n8nConfig","rawStats","syncResult","AutomationService","dbConfig","timeframeDays","currentPeriodStart","previousPeriodStart","previousPeriodEnd","prospectsResult","emailsResult","sequencesResult","scheduledResult","prevProspectsResult","prevEmailsResult","totalSent","opened","responded","_c","converted","_d","prospectsAdded","_e","prevTotalSent","_f","prevOpened","_g","prevResponded","_h","prevProspectsAdded","_i","calculateTrend","current","previous","currentOpenRate","prevOpenRate","currentResponseRate","prevResponseRate","_j","_k","activities","recentHours","timeThreshold","recentProspects","a","b","dbError","databaseConnected","n8nConnected","lastActivityData","lastActivity","activityTimeoutMs","useAutomationDashboard","toggleAutomation","updateStoreConfig","triggerN8nWorkflow","syncWithN8n","startProspectionCampaign","storeLoading","initializeConfig","recentActivity","setRecentActivity","setConfig","isSyncing","setIsSyncing","systemHealth","setSystemHealth","fetchAutomationConfig","configData","fetchAutomationStats","statsData","fetchRecentActivity","checkSystemHealth","health","updateConfig","fullConfig","updateScores","interval","handleSyncWithN8n","SystemHealthIndicator","formatNumber","num","formatPercentage","rate","STAT_COLORS","STATUS_COLORS","STATUS_LABELS","STATUS_BACKGROUNDS","WORKING_DAYS_OPTIONS","getActivityIcon","type","formatTimeAgo","time","diffInHours","getColorClasses","color","getStatusLabel","getStatusBackground","StatsGrid","statCards","Users","MessageCircle","Clock","stat","index","Icon","isPositiveTrend","TrendIcon","RecentActivityPanel","onUpdateScores","onStartCampaign","isUpdatingScores","setIsUpdatingScores","React","isStartingCampaign","setIsStartingCampaign","handleUpdateScores","handleStartCampaign","activity","activityIcon","ConfigurationPanel","onUpdateConfig","localConfig","setLocalConfig","isSaving","setIsSaving","hasChanges","setHasChanges","handleConfigChange","handleNestedConfigChange","parent","parentValue","handleSave","handleWorkingDaysChange","dayValue","checked","newDays","Settings","day","AutomationDashboard","AutoProspectionPanel","isLoadingOptions","setIsLoadingOptions","criteria","setCriteria","previewProspects","setPreviewProspects","showPreview","setShowPreview","filterOptions","setFilterOptions","loadFilterOptions","ProspectApiService","handleSearch","transformedProspects","errorMessage","handleImport","prospectToSave","option","k","ProspectPreview","onImport","onCancel","toggleProspect","ProspectionDashboard","loadProspects","setActiveTab","selectedProspectId","setSelectedProspectId","editingProspectId","setEditingProspectId","setEditingTemplateId","isMobileMenuOpen","setIsMobileMenuOpen","handleViewDetails","handleEditProspect","handleAddProspect","handleCloseDetails","handleEditFromDetails","handleCloseTemplateForm","handleTabChange","tabId","tabs","upcomingFollowUps","Menu","tab"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}